{"version":3,"sources":["webpack:///../packages/@shopify/draggable/index.js","webpack:///../src/content/Plugins/SwapAnimation/index.js","webpack:///../src/content/Plugins/Snappable/index.js","webpack:///../src/content/Plugins/Collidable/index.js","webpack:///../src/content/Swappable/GridLayout/index.js","webpack:///../src/content/Swappable/Floated/index.js","webpack:///../src/content/Swappable/Flexbox/index.js","webpack:///../src/scripts/utils/match-mirror-size.js","webpack:///../src/content/Sortable/MultipleContainers/index.js","webpack:///../src/content/Sortable/Transformed/index.js","webpack:///../src/content/Sortable/SimpleList/index.js","webpack:///../src/content/Droppable/UniqueDropzone/index.js","webpack:///../src/content/Draggable/DragEvents/index.js","webpack:///../src/scripts/utils/flip-sign.js","webpack:///../src/components/Plate/index.js","webpack:///../src/content/Home/index.js","webpack:///../src/content/index.js","webpack:///../src/scripts/utils/debounce.js","webpack:///../src/components/MobileNav/index.js","webpack:///../src/components/Analytics/index.js","webpack:///../src/scripts/examples-app.js"],"names":["factory","window","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","./src/Draggable/DragEvent/DragEvent.js","srcDraggableDragEventDragEventJs","eval","./src/Draggable/DragEvent/index.js","srcDraggableDragEventIndexJs","./src/Draggable/Draggable.js","srcDraggableDraggableJs","./src/Draggable/DraggableEvent/DraggableEvent.js","srcDraggableDraggableEventDraggableEventJs","./src/Draggable/DraggableEvent/index.js","srcDraggableDraggableEventIndexJs","./src/Draggable/Emitter/Emitter.js","srcDraggableEmitterEmitterJs","./src/Draggable/Emitter/index.js","srcDraggableEmitterIndexJs","./src/Draggable/MirrorEvent/MirrorEvent.js","srcDraggableMirrorEventMirrorEventJs","./src/Draggable/MirrorEvent/index.js","srcDraggableMirrorEventIndexJs","./src/Draggable/Plugins/Announcement/Announcement.js","srcDraggablePluginsAnnouncementAnnouncementJs","./src/Draggable/Plugins/Announcement/index.js","srcDraggablePluginsAnnouncementIndexJs","./src/Draggable/Plugins/Focusable/Focusable.js","srcDraggablePluginsFocusableFocusableJs","./src/Draggable/Plugins/Focusable/index.js","srcDraggablePluginsFocusableIndexJs","./src/Draggable/Plugins/Mirror/Mirror.js","srcDraggablePluginsMirrorMirrorJs","./src/Draggable/Plugins/Mirror/index.js","srcDraggablePluginsMirrorIndexJs","./src/Draggable/Plugins/Scrollable/Scrollable.js","srcDraggablePluginsScrollableScrollableJs","./src/Draggable/Plugins/Scrollable/index.js","srcDraggablePluginsScrollableIndexJs","./src/Draggable/Plugins/index.js","srcDraggablePluginsIndexJs","./src/Draggable/Sensors/DragSensor/DragSensor.js","srcDraggableSensorsDragSensorDragSensorJs","./src/Draggable/Sensors/DragSensor/index.js","srcDraggableSensorsDragSensorIndexJs","./src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js","srcDraggableSensorsForceTouchSensorForceTouchSensorJs","./src/Draggable/Sensors/ForceTouchSensor/index.js","srcDraggableSensorsForceTouchSensorIndexJs","./src/Draggable/Sensors/MouseSensor/MouseSensor.js","srcDraggableSensorsMouseSensorMouseSensorJs","./src/Draggable/Sensors/MouseSensor/index.js","srcDraggableSensorsMouseSensorIndexJs","./src/Draggable/Sensors/Sensor/Sensor.js","srcDraggableSensorsSensorSensorJs","./src/Draggable/Sensors/Sensor/index.js","srcDraggableSensorsSensorIndexJs","./src/Draggable/Sensors/SensorEvent/SensorEvent.js","srcDraggableSensorsSensorEventSensorEventJs","./src/Draggable/Sensors/SensorEvent/index.js","srcDraggableSensorsSensorEventIndexJs","./src/Draggable/Sensors/TouchSensor/TouchSensor.js","srcDraggableSensorsTouchSensorTouchSensorJs","./src/Draggable/Sensors/TouchSensor/index.js","srcDraggableSensorsTouchSensorIndexJs","./src/Draggable/Sensors/index.js","srcDraggableSensorsIndexJs","./src/Draggable/index.js","srcDraggableIndexJs","./src/Droppable/Droppable.js","srcDroppableDroppableJs","./src/Droppable/DroppableEvent/DroppableEvent.js","srcDroppableDroppableEventDroppableEventJs","./src/Droppable/DroppableEvent/index.js","srcDroppableDroppableEventIndexJs","./src/Droppable/index.js","srcDroppableIndexJs","./src/Plugins/Collidable/Collidable.js","srcPluginsCollidableCollidableJs","./src/Plugins/Collidable/CollidableEvent/CollidableEvent.js","srcPluginsCollidableCollidableEventCollidableEventJs","./src/Plugins/Collidable/CollidableEvent/index.js","srcPluginsCollidableCollidableEventIndexJs","./src/Plugins/Collidable/index.js","srcPluginsCollidableIndexJs","./src/Plugins/Snappable/Snappable.js","srcPluginsSnappableSnappableJs","./src/Plugins/Snappable/SnappableEvent/SnappableEvent.js","srcPluginsSnappableSnappableEventSnappableEventJs","./src/Plugins/Snappable/SnappableEvent/index.js","srcPluginsSnappableSnappableEventIndexJs","./src/Plugins/Snappable/index.js","srcPluginsSnappableIndexJs","./src/Plugins/SwapAnimation/SwapAnimation.js","srcPluginsSwapAnimationSwapAnimationJs","./src/Plugins/SwapAnimation/index.js","srcPluginsSwapAnimationIndexJs","./src/Plugins/index.js","srcPluginsIndexJs","./src/Sortable/Sortable.js","srcSortableSortableJs","./src/Sortable/SortableEvent/SortableEvent.js","srcSortableSortableEventSortableEventJs","./src/Sortable/SortableEvent/index.js","srcSortableSortableEventIndexJs","./src/Sortable/index.js","srcSortableIndexJs","./src/Swappable/Swappable.js","srcSwappableSwappableJs","./src/Swappable/SwappableEvent/SwappableEvent.js","srcSwappableSwappableEventSwappableEventJs","./src/Swappable/SwappableEvent/index.js","srcSwappableSwappableEventIndexJs","./src/Swappable/index.js","srcSwappableIndexJs","./src/index.js","srcIndexJs","./src/shared/AbstractEvent/AbstractEvent.js","srcSharedAbstractEventAbstractEventJs","./src/shared/AbstractEvent/index.js","srcSharedAbstractEventIndexJs","./src/shared/AbstractPlugin/AbstractPlugin.js","srcSharedAbstractPluginAbstractPluginJs","./src/shared/AbstractPlugin/index.js","srcSharedAbstractPluginIndexJs","./src/shared/utils/closest/closest.js","srcSharedUtilsClosestClosestJs","./src/shared/utils/closest/index.js","srcSharedUtilsClosestIndexJs","./src/shared/utils/index.js","srcSharedUtilsIndexJs","_typeof3","default","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","containers","document","querySelectorAll","length","_draggable","Sortable","draggable","mirror","constrainDimensions","plugins","Plugins","SwapAnimation","swapAnimation","duration","easingFunction","swappable","Swappable","appendTo","Snappable","on","evt","originalSource","classList","contains","cancel","walls","droppable","Droppable","dropzone","collidables","Collidable","_ref","collidingElement","forEach","wall","add","_ref2","remove","dragEvent","draggableClass","overContainer","appendChild","overElement","over","querySelector","requestAnimationFrame","overRect","getBoundingClientRect","style","width","height","sortable","Classes","containerTwoParent","parentNode","currentMediumChildren","capacityReached","lastOverContainer","getDraggableElementsForContainer","sourceContainer","toggle","capacity","_matchMirrorSize2","_matchMirrorSize","droppableOrigin","dataset","Draggable","delay","isToggled","initialMousePosition","containerRect","dragRect","dragThreshold","headings","headingText","x","sensorEvent","clientX","y","clientY","containerRectQuarter","source","switchOn","off","switchOff","offsetX","calcOffset","offsetY","offsetValue","mirrorCoords","top","left","transform","translateMirror","textContent","offset","number","Math","sign","abs","translateFactors","bottom","middle","calculatePlateScale","max","factor","step1","Plate","wrapper","_classCallCheck3","this","plates","getElementsByClassName","threshold","min","newThreshold","offsetWidth","_flipSign2","adjustedX","_offsetWithinThreshold","adjustedY","_scalePlates","_translateShadow","_translateEachPlate","initialPosition","currentPosition","updatedPosition","scaleX","scaleY","setProperty","plateLevel","translateX","translateY","container","_Plate2","setThreshold","setInitialMousePosition","dragWarp","resetWarp","_Plate","Content","Home","DragEvents","UniqueDropzone","SimpleList","Transformed","MultipleContainers","Flexbox","Floated","GridLayout","PluginsCollidable","PluginsSnappable","PluginsSwapAnimation","callback","wait","timeout","_len","arguments","args","Array","_key","context","clearTimeout","setTimeout","debounceDuration","_debounce","Attrs","controls","expanded","hidden","MobileNav","activator","target","getElementById","getAttribute","_this","_setState","addEventListener","bind","_debounce2","console","error","widthExceeded","lockScrolling","willExpand","setAttribute","documentElement","scrollLock","collapse","expand","clientWidth","gtag","dataLayer","push","Analytics","ua","location","hostname","_appendScript","then","Date","catch","warn","log","_this2","Promise","resolve","reject","script","createElement","body","onload","onerror","async","src","_Analytics2","init","mobileNav","_MobileNav2","Example","_content2"],"mappings":"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","file":"examples-app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Draggable\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Draggable\"] = factory();\n\telse\n\t\troot[\"Draggable\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/Draggable/DragEvent/DragEvent.js\":\n/*!**********************************************!*\\\n  !*** ./src/Draggable/DragEvent/DragEvent.js ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.DragStopEvent = exports.DragPressureEvent = exports.DragOutContainerEvent = exports.DragOverContainerEvent = exports.DragOutEvent = exports.DragOverEvent = exports.DragMoveEvent = exports.DragStartEvent = exports.DragEvent = undefined;\\n\\nvar _AbstractEvent = __webpack_require__(/*! shared/AbstractEvent */ \\\"./src/shared/AbstractEvent/index.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Base drag event\\n * @class DragEvent\\n * @module DragEvent\\n * @extends AbstractEvent\\n */\\nclass DragEvent extends _AbstractEvent2.default {\\n\\n  /**\\n   * Draggables source element\\n   * @property source\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get source() {\\n    return this.data.source;\\n  }\\n\\n  /**\\n   * Draggables original source element\\n   * @property originalSource\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get originalSource() {\\n    return this.data.originalSource;\\n  }\\n\\n  /**\\n   * Draggables mirror element\\n   * @property mirror\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get mirror() {\\n    return this.data.mirror;\\n  }\\n\\n  /**\\n   * Draggables source container element\\n   * @property sourceContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get sourceContainer() {\\n    return this.data.sourceContainer;\\n  }\\n\\n  /**\\n   * Sensor event\\n   * @property sensorEvent\\n   * @type {SensorEvent}\\n   * @readonly\\n   */\\n  get sensorEvent() {\\n    return this.data.sensorEvent;\\n  }\\n\\n  /**\\n   * Original event that triggered sensor event\\n   * @property originalEvent\\n   * @type {Event}\\n   * @readonly\\n   */\\n  get originalEvent() {\\n    if (this.sensorEvent) {\\n      return this.sensorEvent.originalEvent;\\n    }\\n\\n    return null;\\n  }\\n\\n  /**\\n   * Checks if mirror has been created\\n   * @return {Boolean}\\n   */\\n  hasMirror() {\\n    return Boolean(this.mirror);\\n  }\\n}\\n\\nexports.DragEvent = DragEvent; /**\\n                                * Drag start event\\n                                * @class DragStartEvent\\n                                * @module DragStartEvent\\n                                * @extends DragEvent\\n                                */\\n\\nDragEvent.type = 'drag';\\nclass DragStartEvent extends DragEvent {}\\n\\nexports.DragStartEvent = DragStartEvent; /**\\n                                          * Drag move event\\n                                          * @class DragMoveEvent\\n                                          * @module DragMoveEvent\\n                                          * @extends DragEvent\\n                                          */\\n\\nDragStartEvent.type = 'drag:start';\\nDragStartEvent.cancelable = true;\\nclass DragMoveEvent extends DragEvent {}\\n\\nexports.DragMoveEvent = DragMoveEvent; /**\\n                                        * Drag over event\\n                                        * @class DragOverEvent\\n                                        * @module DragOverEvent\\n                                        * @extends DragEvent\\n                                        */\\n\\nDragMoveEvent.type = 'drag:move';\\nclass DragOverEvent extends DragEvent {\\n\\n  /**\\n   * Draggable container you are over\\n   * @property overContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get overContainer() {\\n    return this.data.overContainer;\\n  }\\n\\n  /**\\n   * Draggable element you are over\\n   * @property over\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get over() {\\n    return this.data.over;\\n  }\\n}\\n\\nexports.DragOverEvent = DragOverEvent; /**\\n                                        * Drag out event\\n                                        * @class DragOutEvent\\n                                        * @module DragOutEvent\\n                                        * @extends DragEvent\\n                                        */\\n\\nDragOverEvent.type = 'drag:over';\\nDragOverEvent.cancelable = true;\\nclass DragOutEvent extends DragEvent {\\n\\n  /**\\n   * Draggable container you are over\\n   * @property overContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get overContainer() {\\n    return this.data.overContainer;\\n  }\\n\\n  /**\\n   * Draggable element you left\\n   * @property over\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get over() {\\n    return this.data.over;\\n  }\\n}\\n\\nexports.DragOutEvent = DragOutEvent; /**\\n                                      * Drag over container event\\n                                      * @class DragOverContainerEvent\\n                                      * @module DragOverContainerEvent\\n                                      * @extends DragEvent\\n                                      */\\n\\nDragOutEvent.type = 'drag:out';\\nclass DragOverContainerEvent extends DragEvent {\\n\\n  /**\\n   * Draggable container you are over\\n   * @property overContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get overContainer() {\\n    return this.data.overContainer;\\n  }\\n}\\n\\nexports.DragOverContainerEvent = DragOverContainerEvent; /**\\n                                                          * Drag out container event\\n                                                          * @class DragOutContainerEvent\\n                                                          * @module DragOutContainerEvent\\n                                                          * @extends DragEvent\\n                                                          */\\n\\nDragOverContainerEvent.type = 'drag:over:container';\\nclass DragOutContainerEvent extends DragEvent {\\n\\n  /**\\n   * Draggable container you left\\n   * @property overContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get overContainer() {\\n    return this.data.overContainer;\\n  }\\n}\\n\\nexports.DragOutContainerEvent = DragOutContainerEvent; /**\\n                                                        * Drag pressure event\\n                                                        * @class DragPressureEvent\\n                                                        * @module DragPressureEvent\\n                                                        * @extends DragEvent\\n                                                        */\\n\\nDragOutContainerEvent.type = 'drag:out:container';\\nclass DragPressureEvent extends DragEvent {\\n\\n  /**\\n   * Pressure applied on draggable element\\n   * @property pressure\\n   * @type {Number}\\n   * @readonly\\n   */\\n  get pressure() {\\n    return this.data.pressure;\\n  }\\n}\\n\\nexports.DragPressureEvent = DragPressureEvent; /**\\n                                                * Drag stop event\\n                                                * @class DragStopEvent\\n                                                * @module DragStopEvent\\n                                                * @extends DragEvent\\n                                                */\\n\\nDragPressureEvent.type = 'drag:pressure';\\nclass DragStopEvent extends DragEvent {}\\nexports.DragStopEvent = DragStopEvent;\\nDragStopEvent.type = 'drag:stop';\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/DragEvent/DragEvent.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/DragEvent/index.js\":\n/*!******************************************!*\\\n  !*** ./src/Draggable/DragEvent/index.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _DragEvent = __webpack_require__(/*! ./DragEvent */ \\\"./src/Draggable/DragEvent/DragEvent.js\\\");\\n\\nObject.keys(_DragEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _DragEvent[key];\\n    }\\n  });\\n});\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/DragEvent/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Draggable.js\":\n/*!************************************!*\\\n  !*** ./src/Draggable/Draggable.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.defaultOptions = undefined;\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _utils = __webpack_require__(/*! shared/utils */ \\\"./src/shared/utils/index.js\\\");\\n\\nvar _Plugins = __webpack_require__(/*! ./Plugins */ \\\"./src/Draggable/Plugins/index.js\\\");\\n\\nvar _Emitter = __webpack_require__(/*! ./Emitter */ \\\"./src/Draggable/Emitter/index.js\\\");\\n\\nvar _Emitter2 = _interopRequireDefault(_Emitter);\\n\\nvar _Sensors = __webpack_require__(/*! ./Sensors */ \\\"./src/Draggable/Sensors/index.js\\\");\\n\\nvar _DraggableEvent = __webpack_require__(/*! ./DraggableEvent */ \\\"./src/Draggable/DraggableEvent/index.js\\\");\\n\\nvar _DragEvent = __webpack_require__(/*! ./DragEvent */ \\\"./src/Draggable/DragEvent/index.js\\\");\\n\\nvar _MirrorEvent = __webpack_require__(/*! ./MirrorEvent */ \\\"./src/Draggable/MirrorEvent/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onDragStart = Symbol('onDragStart');\\nconst onDragMove = Symbol('onDragMove');\\nconst onDragStop = Symbol('onDragStop');\\nconst onDragPressure = Symbol('onDragPressure');\\nconst getAppendableContainer = Symbol('getAppendableContainer');\\n\\n/**\\n * @const {Object} defaultAnnouncements\\n * @const {Function} defaultAnnouncements['drag:start']\\n * @const {Function} defaultAnnouncements['drag:stop']\\n */\\nconst defaultAnnouncements = {\\n  'drag:start': event => `Picked up ${event.source.textContent.trim() || event.source.id || 'draggable element'}`,\\n  'drag:stop': event => `Released ${event.source.textContent.trim() || event.source.id || 'draggable element'}`\\n};\\n\\nconst defaultClasses = {\\n  'container:dragging': 'draggable-container--is-dragging',\\n  'source:dragging': 'draggable-source--is-dragging',\\n  'source:placed': 'draggable-source--placed',\\n  'container:placed': 'draggable-container--placed',\\n  'body:dragging': 'draggable--is-dragging',\\n  'draggable:over': 'draggable--over',\\n  'container:over': 'draggable-container--over',\\n  'source:original': 'draggable--original',\\n  mirror: 'draggable-mirror'\\n};\\n\\nconst defaultOptions = exports.defaultOptions = {\\n  draggable: '.draggable-source',\\n  handle: null,\\n  delay: 100,\\n  placedTimeout: 800,\\n  plugins: [],\\n  sensors: []\\n};\\n\\n/**\\n * This is the core draggable library that does the heavy lifting\\n * @class Draggable\\n * @module Draggable\\n */\\nclass Draggable {\\n\\n  /**\\n   * Draggable constructor.\\n   * @constructs Draggable\\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Draggable containers\\n   * @param {Object} options - Options for draggable\\n   */\\n  constructor(containers = [document.body], options = {}) {\\n    /**\\n     * Draggable containers\\n     * @property containers\\n     * @type {HTMLElement[]}\\n     */\\n    if (containers instanceof NodeList || containers instanceof Array) {\\n      this.containers = [...containers];\\n    } else if (containers instanceof HTMLElement) {\\n      this.containers = [containers];\\n    } else {\\n      throw new Error('Draggable containers are expected to be of type `NodeList`, `HTMLElement[]` or `HTMLElement`');\\n    }\\n\\n    this.options = _extends({}, defaultOptions, options, {\\n      classes: _extends({}, defaultClasses, options.classes || {}),\\n      announcements: _extends({}, defaultAnnouncements, options.announcements || {})\\n    });\\n\\n    /**\\n     * Draggables event emitter\\n     * @property emitter\\n     * @type {Emitter}\\n     */\\n    this.emitter = new _Emitter2.default();\\n\\n    /**\\n     * Current drag state\\n     * @property dragging\\n     * @type {Boolean}\\n     */\\n    this.dragging = false;\\n\\n    /**\\n     * Active plugins\\n     * @property plugins\\n     * @type {Plugin[]}\\n     */\\n    this.plugins = [];\\n\\n    /**\\n     * Active sensors\\n     * @property sensors\\n     * @type {Sensor[]}\\n     */\\n    this.sensors = [];\\n\\n    this[onDragStart] = this[onDragStart].bind(this);\\n    this[onDragMove] = this[onDragMove].bind(this);\\n    this[onDragStop] = this[onDragStop].bind(this);\\n    this[onDragPressure] = this[onDragPressure].bind(this);\\n\\n    document.addEventListener('drag:start', this[onDragStart], true);\\n    document.addEventListener('drag:move', this[onDragMove], true);\\n    document.addEventListener('drag:stop', this[onDragStop], true);\\n    document.addEventListener('drag:pressure', this[onDragPressure], true);\\n\\n    const defaultPlugins = Object.values(Draggable.Plugins).map(Plugin => Plugin);\\n    const defaultSensors = [_Sensors.MouseSensor, _Sensors.TouchSensor];\\n\\n    this.addPlugin(...[...defaultPlugins, ...this.options.plugins]);\\n    this.addSensor(...[...defaultSensors, ...this.options.sensors]);\\n\\n    const draggableInitializedEvent = new _DraggableEvent.DraggableInitializedEvent({\\n      draggable: this\\n    });\\n\\n    this.trigger(draggableInitializedEvent);\\n  }\\n\\n  /**\\n   * Destroys Draggable instance. This removes all internal event listeners and\\n   * deactivates sensors and plugins\\n   */\\n\\n  /**\\n   * Default plugins draggable uses\\n   * @static\\n   * @property {Object} Plugins\\n   * @property {Announcement} Plugins.Announcement\\n   * @property {Focusable} Plugins.Focusable\\n   * @property {Mirror} Plugins.Mirror\\n   * @property {Scrollable} Plugins.Scrollable\\n   * @type {Object}\\n   */\\n  destroy() {\\n    document.removeEventListener('drag:start', this[onDragStart], true);\\n    document.removeEventListener('drag:move', this[onDragMove], true);\\n    document.removeEventListener('drag:stop', this[onDragStop], true);\\n    document.removeEventListener('drag:pressure', this[onDragPressure], true);\\n\\n    const draggableDestroyEvent = new _DraggableEvent.DraggableDestroyEvent({\\n      draggable: this\\n    });\\n\\n    this.trigger(draggableDestroyEvent);\\n\\n    this.removePlugin(...this.plugins.map(plugin => plugin.constructor));\\n    this.removeSensor(...this.sensors.map(sensor => sensor.constructor));\\n  }\\n\\n  /**\\n   * Adds plugin to this draggable instance. This will end up calling the attach method of the plugin\\n   * @param {...typeof Plugin} plugins - Plugins that you want attached to draggable\\n   * @return {Draggable}\\n   * @example draggable.addPlugin(CustomA11yPlugin, CustomMirrorPlugin)\\n   */\\n  addPlugin(...plugins) {\\n    const activePlugins = plugins.map(Plugin => new Plugin(this));\\n\\n    activePlugins.forEach(plugin => plugin.attach());\\n    this.plugins = [...this.plugins, ...activePlugins];\\n\\n    return this;\\n  }\\n\\n  /**\\n   * Removes plugins that are already attached to this draggable instance. This will end up calling\\n   * the detach method of the plugin\\n   * @param {...typeof Plugin} plugins - Plugins that you want detached from draggable\\n   * @return {Draggable}\\n   * @example draggable.removePlugin(MirrorPlugin, CustomMirrorPlugin)\\n   */\\n  removePlugin(...plugins) {\\n    const removedPlugins = this.plugins.filter(plugin => plugins.includes(plugin.constructor));\\n\\n    removedPlugins.forEach(plugin => plugin.detach());\\n    this.plugins = this.plugins.filter(plugin => !plugins.includes(plugin.constructor));\\n\\n    return this;\\n  }\\n\\n  /**\\n   * Adds sensors to this draggable instance. This will end up calling the attach method of the sensor\\n   * @param {...typeof Sensor} sensors - Sensors that you want attached to draggable\\n   * @return {Draggable}\\n   * @example draggable.addSensor(ForceTouchSensor, CustomSensor)\\n   */\\n  addSensor(...sensors) {\\n    const activeSensors = sensors.map(Sensor => new Sensor(this.containers, this.options));\\n\\n    activeSensors.forEach(sensor => sensor.attach());\\n    this.sensors = [...this.sensors, ...activeSensors];\\n\\n    return this;\\n  }\\n\\n  /**\\n   * Removes sensors that are already attached to this draggable instance. This will end up calling\\n   * the detach method of the sensor\\n   * @param {...typeof Sensor} sensors - Sensors that you want attached to draggable\\n   * @return {Draggable}\\n   * @example draggable.removeSensor(TouchSensor, DragSensor)\\n   */\\n  removeSensor(...sensors) {\\n    const removedSensors = this.sensors.filter(sensor => sensors.includes(sensor.constructor));\\n\\n    removedSensors.forEach(sensor => sensor.detach());\\n    this.sensors = this.sensors.filter(sensor => !sensors.includes(sensor.constructor));\\n\\n    return this;\\n  }\\n\\n  /**\\n   * Adds container to this draggable instance\\n   * @param {...HTMLElement} containers - Containers you want to add to draggable\\n   * @return {Draggable}\\n   * @example draggable.addContainer(document.body)\\n   */\\n  addContainer(...containers) {\\n    this.containers = [...this.containers, ...containers];\\n    this.sensors.forEach(sensor => sensor.addContainer(...containers));\\n    return this;\\n  }\\n\\n  /**\\n   * Removes container from this draggable instance\\n   * @param {...HTMLElement} containers - Containers you want to remove from draggable\\n   * @return {Draggable}\\n   * @example draggable.removeContainer(document.body)\\n   */\\n  removeContainer(...containers) {\\n    this.containers = this.containers.filter(container => !containers.includes(container));\\n    this.sensors.forEach(sensor => sensor.removeContainer(...containers));\\n    return this;\\n  }\\n\\n  /**\\n   * Adds listener for draggable events\\n   * @param {String} type - Event name\\n   * @param {...Function} callbacks - Event callbacks\\n   * @return {Draggable}\\n   * @example draggable.on('drag:start', (dragEvent) => dragEvent.cancel());\\n   */\\n  on(type, ...callbacks) {\\n    this.emitter.on(type, ...callbacks);\\n    return this;\\n  }\\n\\n  /**\\n   * Removes listener from draggable\\n   * @param {String} type - Event name\\n   * @param {Function} callback - Event callback\\n   * @return {Draggable}\\n   * @example draggable.off('drag:start', handlerFunction);\\n   */\\n  off(type, callback) {\\n    this.emitter.off(type, callback);\\n    return this;\\n  }\\n\\n  /**\\n   * Triggers draggable event\\n   * @param {AbstractEvent} event - Event instance\\n   * @return {Draggable}\\n   * @example draggable.trigger(event);\\n   */\\n  trigger(event) {\\n    this.emitter.trigger(event);\\n    return this;\\n  }\\n\\n  /**\\n   * Returns class name for class identifier\\n   * @param {String} name - Name of class identifier\\n   * @return {String|null}\\n   */\\n  getClassNameFor(name) {\\n    return this.options.classes[name];\\n  }\\n\\n  /**\\n   * Returns true if this draggable instance is currently dragging\\n   * @return {Boolean}\\n   */\\n  isDragging() {\\n    return Boolean(this.dragging);\\n  }\\n\\n  /**\\n   * Returns all draggable elements\\n   * @return {HTMLElement[]}\\n   */\\n  getDraggableElements() {\\n    return this.containers.reduce((current, container) => {\\n      return [...current, ...this.getDraggableElementsForContainer(container)];\\n    }, []);\\n  }\\n\\n  /**\\n   * Returns draggable elements for a given container, excluding the mirror and\\n   * original source element if present\\n   * @param {HTMLElement} container\\n   * @return {HTMLElement[]}\\n   */\\n  getDraggableElementsForContainer(container) {\\n    const allDraggableElements = container.querySelectorAll(this.options.draggable);\\n\\n    return [...allDraggableElements].filter(childElement => {\\n      return childElement !== this.originalSource && childElement !== this.mirror;\\n    });\\n  }\\n\\n  /**\\n   * Drag start handler\\n   * @private\\n   * @param {Event} event - DOM Drag event\\n   */\\n  [onDragStart](event) {\\n    const sensorEvent = getSensorEvent(event);\\n    const { target, container, originalEvent } = sensorEvent;\\n\\n    if (!this.containers.includes(container)) {\\n      return;\\n    }\\n\\n    if (this.options.handle && target && !(0, _utils.closest)(target, this.options.handle)) {\\n      sensorEvent.cancel();\\n      return;\\n    }\\n\\n    // Find draggable source element\\n    this.originalSource = (0, _utils.closest)(target, this.options.draggable);\\n    this.sourceContainer = container;\\n\\n    if (!this.originalSource) {\\n      sensorEvent.cancel();\\n      return;\\n    }\\n\\n    if (this.lastPlacedSource && this.lastPlacedContainer) {\\n      clearTimeout(this.placedTimeoutID);\\n      this.lastPlacedSource.classList.remove(this.getClassNameFor('source:placed'));\\n      this.lastPlacedContainer.classList.remove(this.getClassNameFor('container:placed'));\\n    }\\n\\n    this.dragging = true;\\n\\n    this.source = this.originalSource.cloneNode(true);\\n\\n    const mirrorCreateEvent = new _MirrorEvent.MirrorCreateEvent({\\n      source: this.source,\\n      originalSource: this.originalSource,\\n      sourceContainer: container,\\n      sensorEvent\\n    });\\n\\n    this.trigger(mirrorCreateEvent);\\n\\n    if (!isDragEvent(originalEvent) && !mirrorCreateEvent.canceled()) {\\n      const appendableContainer = this[getAppendableContainer]({ source: this.originalSource });\\n      this.mirror = this.source.cloneNode(true);\\n\\n      const mirrorCreatedEvent = new _MirrorEvent.MirrorCreatedEvent({\\n        source: this.source,\\n        originalSource: this.originalSource,\\n        mirror: this.mirror,\\n        sourceContainer: container,\\n        sensorEvent\\n      });\\n\\n      const mirrorAttachedEvent = new _MirrorEvent.MirrorAttachedEvent({\\n        source: this.source,\\n        originalSource: this.originalSource,\\n        mirror: this.mirror,\\n        sourceContainer: container,\\n        sensorEvent\\n      });\\n\\n      this.trigger(mirrorCreatedEvent);\\n      appendableContainer.appendChild(this.mirror);\\n      this.trigger(mirrorAttachedEvent);\\n    }\\n\\n    this.originalSource.classList.add(this.getClassNameFor('source:original'));\\n    this.originalSource.parentNode.insertBefore(this.source, this.originalSource);\\n\\n    this.originalSource.style.display = 'none';\\n    this.source.classList.add(this.getClassNameFor('source:dragging'));\\n    this.sourceContainer.classList.add(this.getClassNameFor('container:dragging'));\\n    document.body.classList.add(this.getClassNameFor('body:dragging'));\\n    applyUserSelect(document.body, 'none');\\n\\n    const dragEvent = new _DragEvent.DragStartEvent({\\n      source: this.source,\\n      mirror: this.mirror,\\n      originalSource: this.originalSource,\\n      sourceContainer: container,\\n      sensorEvent\\n    });\\n\\n    this.trigger(dragEvent);\\n\\n    if (dragEvent.canceled()) {\\n      this.dragging = false;\\n\\n      if (this.mirror) {\\n        this.mirror.parentNode.removeChild(this.mirror);\\n      }\\n\\n      this.source.parentNode.removeChild(this.source);\\n      this.originalSource.style.display = null;\\n\\n      this.source.classList.remove(this.getClassNameFor('source:dragging'));\\n      this.sourceContainer.classList.remove(this.getClassNameFor('container:dragging'));\\n      document.body.classList.remove(this.getClassNameFor('body:dragging'));\\n    } else {\\n      requestAnimationFrame(() => this[onDragMove](event));\\n    }\\n  }\\n\\n  /**\\n   * Drag move handler\\n   * @private\\n   * @param {Event} event - DOM Drag event\\n   */\\n  [onDragMove](event) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    const sensorEvent = getSensorEvent(event);\\n    const { container } = sensorEvent;\\n    let target = sensorEvent.target;\\n\\n    const dragMoveEvent = new _DragEvent.DragMoveEvent({\\n      source: this.source,\\n      mirror: this.mirror,\\n      originalSource: this.originalSource,\\n      sourceContainer: container,\\n      sensorEvent\\n    });\\n\\n    this.trigger(dragMoveEvent);\\n\\n    if (dragMoveEvent.canceled()) {\\n      sensorEvent.cancel();\\n    }\\n\\n    if (this.mirror && !dragMoveEvent.canceled()) {\\n      const mirrorMoveEvent = new _MirrorEvent.MirrorMoveEvent({\\n        source: this.source,\\n        mirror: this.mirror,\\n        originalSource: this.originalSource,\\n        sourceContainer: container,\\n        sensorEvent\\n      });\\n\\n      this.trigger(mirrorMoveEvent);\\n    }\\n\\n    target = (0, _utils.closest)(target, this.options.draggable);\\n    const withinCorrectContainer = (0, _utils.closest)(sensorEvent.target, this.containers);\\n    const overContainer = sensorEvent.overContainer || withinCorrectContainer;\\n    const isLeavingContainer = this.currentOverContainer && overContainer !== this.currentOverContainer;\\n    const isLeavingDraggable = this.currentOver && target !== this.currentOver;\\n    const isOverContainer = overContainer && this.currentOverContainer !== overContainer;\\n    const isOverDraggable = withinCorrectContainer && target && this.currentOver !== target;\\n\\n    if (isLeavingDraggable) {\\n      const dragOutEvent = new _DragEvent.DragOutEvent({\\n        source: this.source,\\n        mirror: this.mirror,\\n        originalSource: this.originalSource,\\n        sourceContainer: container,\\n        sensorEvent,\\n        over: this.currentOver\\n      });\\n\\n      this.currentOver.classList.remove(this.getClassNameFor('draggable:over'));\\n      this.currentOver = null;\\n\\n      this.trigger(dragOutEvent);\\n    }\\n\\n    if (isLeavingContainer) {\\n      const dragOutContainerEvent = new _DragEvent.DragOutContainerEvent({\\n        source: this.source,\\n        mirror: this.mirror,\\n        originalSource: this.originalSource,\\n        sourceContainer: container,\\n        sensorEvent,\\n        overContainer: this.currentOverContainer\\n      });\\n\\n      this.currentOverContainer.classList.remove(this.getClassNameFor('container:over'));\\n      this.currentOverContainer = null;\\n\\n      this.trigger(dragOutContainerEvent);\\n    }\\n\\n    if (isOverContainer) {\\n      overContainer.classList.add(this.getClassNameFor('container:over'));\\n\\n      const dragOverContainerEvent = new _DragEvent.DragOverContainerEvent({\\n        source: this.source,\\n        mirror: this.mirror,\\n        originalSource: this.originalSource,\\n        sourceContainer: container,\\n        sensorEvent,\\n        overContainer\\n      });\\n\\n      this.currentOverContainer = overContainer;\\n\\n      this.trigger(dragOverContainerEvent);\\n    }\\n\\n    if (isOverDraggable) {\\n      target.classList.add(this.getClassNameFor('draggable:over'));\\n\\n      const dragOverEvent = new _DragEvent.DragOverEvent({\\n        source: this.source,\\n        mirror: this.mirror,\\n        originalSource: this.originalSource,\\n        sourceContainer: container,\\n        sensorEvent,\\n        overContainer,\\n        over: target\\n      });\\n\\n      this.currentOver = target;\\n\\n      this.trigger(dragOverEvent);\\n    }\\n  }\\n\\n  /**\\n   * Drag stop handler\\n   * @private\\n   * @param {Event} event - DOM Drag event\\n   */\\n  [onDragStop](event) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    this.dragging = false;\\n\\n    const sensorEvent = getSensorEvent(event);\\n    const dragStopEvent = new _DragEvent.DragStopEvent({\\n      source: this.source,\\n      mirror: this.mirror,\\n      originalSource: this.originalSource,\\n      sensorEvent: event.sensorEvent,\\n      sourceContainer: this.sourceContainer\\n    });\\n\\n    this.trigger(dragStopEvent);\\n\\n    this.source.parentNode.insertBefore(this.originalSource, this.source);\\n    this.source.parentNode.removeChild(this.source);\\n    this.originalSource.style.display = '';\\n\\n    this.source.classList.remove(this.getClassNameFor('source:dragging'));\\n    this.originalSource.classList.remove(this.getClassNameFor('source:original'));\\n    this.originalSource.classList.add(this.getClassNameFor('source:placed'));\\n    this.sourceContainer.classList.add(this.getClassNameFor('container:placed'));\\n    this.sourceContainer.classList.remove(this.getClassNameFor('container:dragging'));\\n    document.body.classList.remove(this.getClassNameFor('body:dragging'));\\n    applyUserSelect(document.body, '');\\n\\n    if (this.currentOver) {\\n      this.currentOver.classList.remove(this.getClassNameFor('draggable:over'));\\n    }\\n\\n    if (this.currentOverContainer) {\\n      this.currentOverContainer.classList.remove(this.getClassNameFor('container:over'));\\n    }\\n\\n    if (this.mirror) {\\n      const mirrorDestroyEvent = new _MirrorEvent.MirrorDestroyEvent({\\n        source: this.source,\\n        mirror: this.mirror,\\n        sourceContainer: sensorEvent.container,\\n        sensorEvent\\n      });\\n\\n      this.trigger(mirrorDestroyEvent);\\n\\n      if (!mirrorDestroyEvent.canceled()) {\\n        this.mirror.parentNode.removeChild(this.mirror);\\n      }\\n    }\\n\\n    this.lastPlacedSource = this.originalSource;\\n    this.lastPlacedContainer = this.sourceContainer;\\n\\n    this.placedTimeoutID = setTimeout(() => {\\n      if (this.lastPlacedSource) {\\n        this.lastPlacedSource.classList.remove(this.getClassNameFor('source:placed'));\\n      }\\n\\n      if (this.lastPlacedContainer) {\\n        this.lastPlacedContainer.classList.remove(this.getClassNameFor('container:placed'));\\n      }\\n\\n      this.lastPlacedSource = null;\\n      this.lastPlacedContainer = null;\\n    }, this.options.placedTimeout);\\n\\n    this.source = null;\\n    this.mirror = null;\\n    this.originalSource = null;\\n    this.currentOverContainer = null;\\n    this.currentOver = null;\\n    this.sourceContainer = null;\\n  }\\n\\n  /**\\n   * Drag pressure handler\\n   * @private\\n   * @param {Event} event - DOM Drag event\\n   */\\n  [onDragPressure](event) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    const sensorEvent = getSensorEvent(event);\\n    const source = this.source || (0, _utils.closest)(sensorEvent.originalEvent.target, this.options.draggable);\\n\\n    const dragPressureEvent = new _DragEvent.DragPressureEvent({\\n      sensorEvent,\\n      source,\\n      pressure: sensorEvent.pressure\\n    });\\n\\n    this.trigger(dragPressureEvent);\\n  }\\n\\n  /**\\n   * Returns appendable container for mirror based on the appendTo option\\n   * @private\\n   * @param {Object} options\\n   * @param {HTMLElement} options.source - Current source\\n   * @return {HTMLElement}\\n   */\\n  [getAppendableContainer]({ source }) {\\n    const appendTo = this.options.appendTo;\\n\\n    if (typeof appendTo === 'string') {\\n      return document.querySelector(appendTo);\\n    } else if (appendTo instanceof HTMLElement) {\\n      return appendTo;\\n    } else if (typeof appendTo === 'function') {\\n      return appendTo(source);\\n    } else {\\n      return source.parentNode;\\n    }\\n  }\\n}\\n\\nexports.default = Draggable;\\nDraggable.Plugins = { Announcement: _Plugins.Announcement, Focusable: _Plugins.Focusable, Mirror: _Plugins.Mirror, Scrollable: _Plugins.Scrollable };\\nfunction getSensorEvent(event) {\\n  return event.detail;\\n}\\n\\nfunction isDragEvent(event) {\\n  return (/^drag/.test(event.type)\\n  );\\n}\\n\\nfunction applyUserSelect(element, value) {\\n  element.style.webkitUserSelect = value;\\n  element.style.mozUserSelect = value;\\n  element.style.msUserSelect = value;\\n  element.style.oUserSelect = value;\\n  element.style.userSelect = value;\\n}\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Draggable.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/DraggableEvent/DraggableEvent.js\":\n/*!********************************************************!*\\\n  !*** ./src/Draggable/DraggableEvent/DraggableEvent.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.DraggableDestroyEvent = exports.DraggableInitializedEvent = exports.DraggableEvent = undefined;\\n\\nvar _AbstractEvent = __webpack_require__(/*! shared/AbstractEvent */ \\\"./src/shared/AbstractEvent/index.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Base draggable event\\n * @class DraggableEvent\\n * @module DraggableEvent\\n * @extends AbstractEvent\\n */\\nclass DraggableEvent extends _AbstractEvent2.default {\\n\\n  /**\\n   * Draggable instance\\n   * @property draggable\\n   * @type {Draggable}\\n   * @readonly\\n   */\\n  get draggable() {\\n    return this.data.draggable;\\n  }\\n}\\n\\nexports.DraggableEvent = DraggableEvent; /**\\n                                          * Draggable initialized event\\n                                          * @class DraggableInitializedEvent\\n                                          * @module DraggableInitializedEvent\\n                                          * @extends DraggableEvent\\n                                          */\\n\\nDraggableEvent.type = 'draggable';\\nclass DraggableInitializedEvent extends DraggableEvent {}\\n\\nexports.DraggableInitializedEvent = DraggableInitializedEvent; /**\\n                                                                * Draggable destory event\\n                                                                * @class DraggableInitializedEvent\\n                                                                * @module DraggableDestroyEvent\\n                                                                * @extends DraggableDestroyEvent\\n                                                                */\\n\\nDraggableInitializedEvent.type = 'draggable:initialize';\\nclass DraggableDestroyEvent extends DraggableEvent {}\\nexports.DraggableDestroyEvent = DraggableDestroyEvent;\\nDraggableDestroyEvent.type = 'draggable:destroy';\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/DraggableEvent/DraggableEvent.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/DraggableEvent/index.js\":\n/*!***********************************************!*\\\n  !*** ./src/Draggable/DraggableEvent/index.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _DraggableEvent = __webpack_require__(/*! ./DraggableEvent */ \\\"./src/Draggable/DraggableEvent/DraggableEvent.js\\\");\\n\\nObject.keys(_DraggableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _DraggableEvent[key];\\n    }\\n  });\\n});\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/DraggableEvent/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Emitter/Emitter.js\":\n/*!******************************************!*\\\n  !*** ./src/Draggable/Emitter/Emitter.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n/**\\n * The Emitter is a simple emitter class that provides you with `on()`, `off()` and `trigger()` methods\\n * @class Emitter\\n * @module Emitter\\n */\\nclass Emitter {\\n  constructor() {\\n    this.callbacks = {};\\n  }\\n\\n  /**\\n   * Registers callbacks by event name\\n   * @param {String} type\\n   * @param {...Function} callbacks\\n   */\\n  on(type, ...callbacks) {\\n    if (!this.callbacks[type]) {\\n      this.callbacks[type] = [];\\n    }\\n\\n    this.callbacks[type].push(...callbacks);\\n\\n    return this;\\n  }\\n\\n  /**\\n   * Unregisters callbacks by event name\\n   * @param {String} type\\n   * @param {Function} callback\\n   */\\n  off(type, callback) {\\n    if (!this.callbacks[type]) {\\n      return null;\\n    }\\n\\n    const copy = this.callbacks[type].slice(0);\\n\\n    for (let i = 0; i < copy.length; i++) {\\n      if (callback === copy[i]) {\\n        this.callbacks[type].splice(i, 1);\\n      }\\n    }\\n\\n    return this;\\n  }\\n\\n  /**\\n   * Triggers event callbacks by event object\\n   * @param {AbstractEvent} event\\n   */\\n  trigger(event) {\\n    if (!this.callbacks[event.type]) {\\n      return null;\\n    }\\n\\n    const callbacks = [...this.callbacks[event.type]];\\n    const caughtErrors = [];\\n\\n    for (let i = callbacks.length - 1; i >= 0; i--) {\\n      const callback = callbacks[i];\\n\\n      try {\\n        callback(event);\\n      } catch (error) {\\n        caughtErrors.push(error);\\n      }\\n    }\\n\\n    if (caughtErrors.length) {\\n      /* eslint-disable no-console */\\n      console.error(`Draggable caught errors while triggering '${event.type}'`, caughtErrors);\\n      /* eslint-disable no-console */\\n    }\\n\\n    return this;\\n  }\\n}\\nexports.default = Emitter;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Emitter/Emitter.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Emitter/index.js\":\n/*!****************************************!*\\\n  !*** ./src/Draggable/Emitter/index.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _Emitter = __webpack_require__(/*! ./Emitter */ \\\"./src/Draggable/Emitter/Emitter.js\\\");\\n\\nvar _Emitter2 = _interopRequireDefault(_Emitter);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Emitter2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Emitter/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/MirrorEvent/MirrorEvent.js\":\n/*!**************************************************!*\\\n  !*** ./src/Draggable/MirrorEvent/MirrorEvent.js ***!\n  \\**************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.MirrorDestroyEvent = exports.MirrorMoveEvent = exports.MirrorAttachedEvent = exports.MirrorCreatedEvent = exports.MirrorCreateEvent = exports.MirrorEvent = undefined;\\n\\nvar _AbstractEvent = __webpack_require__(/*! shared/AbstractEvent */ \\\"./src/shared/AbstractEvent/index.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Base mirror event\\n * @class MirrorEvent\\n * @module MirrorEvent\\n * @extends AbstractEvent\\n */\\nclass MirrorEvent extends _AbstractEvent2.default {\\n  /**\\n   * Draggables source element\\n   * @property source\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get source() {\\n    return this.data.source;\\n  }\\n\\n  /**\\n   * Draggables original source element\\n   * @property originalSource\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get originalSource() {\\n    return this.data.originalSource;\\n  }\\n\\n  /**\\n   * Draggables source container element\\n   * @property sourceContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get sourceContainer() {\\n    return this.data.sourceContainer;\\n  }\\n\\n  /**\\n   * Sensor event\\n   * @property sensorEvent\\n   * @type {SensorEvent}\\n   * @readonly\\n   */\\n  get sensorEvent() {\\n    return this.data.sensorEvent;\\n  }\\n\\n  /**\\n   * Original event that triggered sensor event\\n   * @property originalEvent\\n   * @type {Event}\\n   * @readonly\\n   */\\n  get originalEvent() {\\n    if (this.sensorEvent) {\\n      return this.sensorEvent.originalEvent;\\n    }\\n\\n    return null;\\n  }\\n\\n  /**\\n   * Checks if mirror has been created\\n   * @return {Boolean}\\n   */\\n  hasMirror() {\\n    return Boolean(this.mirror);\\n  }\\n}\\n\\nexports.MirrorEvent = MirrorEvent; /**\\n                                    * Mirror create event\\n                                    * @class MirrorCreateEvent\\n                                    * @module MirrorCreateEvent\\n                                    * @extends MirrorEvent\\n                                    */\\n\\nclass MirrorCreateEvent extends MirrorEvent {}\\n\\nexports.MirrorCreateEvent = MirrorCreateEvent; /**\\n                                                * Mirror created event\\n                                                * @class MirrorCreatedEvent\\n                                                * @module MirrorCreatedEvent\\n                                                * @extends MirrorEvent\\n                                                */\\n\\nMirrorCreateEvent.type = 'mirror:create';\\nclass MirrorCreatedEvent extends MirrorEvent {\\n\\n  /**\\n   * Draggables mirror element\\n   * @property mirror\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get mirror() {\\n    return this.data.mirror;\\n  }\\n}\\n\\nexports.MirrorCreatedEvent = MirrorCreatedEvent; /**\\n                                                  * Mirror attached event\\n                                                  * @class MirrorAttachedEvent\\n                                                  * @module MirrorAttachedEvent\\n                                                  * @extends MirrorEvent\\n                                                  */\\n\\nMirrorCreatedEvent.type = 'mirror:created';\\nclass MirrorAttachedEvent extends MirrorEvent {\\n\\n  /**\\n   * Draggables mirror element\\n   * @property mirror\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get mirror() {\\n    return this.data.mirror;\\n  }\\n}\\n\\nexports.MirrorAttachedEvent = MirrorAttachedEvent; /**\\n                                                    * Mirror move event\\n                                                    * @class MirrorMoveEvent\\n                                                    * @module MirrorMoveEvent\\n                                                    * @extends MirrorEvent\\n                                                    */\\n\\nMirrorAttachedEvent.type = 'mirror:attached';\\nclass MirrorMoveEvent extends MirrorEvent {\\n\\n  /**\\n   * Draggables mirror element\\n   * @property mirror\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get mirror() {\\n    return this.data.mirror;\\n  }\\n}\\n\\nexports.MirrorMoveEvent = MirrorMoveEvent; /**\\n                                            * Mirror destroy event\\n                                            * @class MirrorDestroyEvent\\n                                            * @module MirrorDestroyEvent\\n                                            * @extends MirrorEvent\\n                                            */\\n\\nMirrorMoveEvent.type = 'mirror:move';\\nMirrorMoveEvent.cancelable = true;\\nclass MirrorDestroyEvent extends MirrorEvent {\\n\\n  /**\\n   * Draggables mirror element\\n   * @property mirror\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get mirror() {\\n    return this.data.mirror;\\n  }\\n}\\nexports.MirrorDestroyEvent = MirrorDestroyEvent;\\nMirrorDestroyEvent.type = 'mirror:destroy';\\nMirrorDestroyEvent.cancelable = true;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/MirrorEvent/MirrorEvent.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/MirrorEvent/index.js\":\n/*!********************************************!*\\\n  !*** ./src/Draggable/MirrorEvent/index.js ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _MirrorEvent = __webpack_require__(/*! ./MirrorEvent */ \\\"./src/Draggable/MirrorEvent/MirrorEvent.js\\\");\\n\\nObject.keys(_MirrorEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _MirrorEvent[key];\\n    }\\n  });\\n});\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/MirrorEvent/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Plugins/Announcement/Announcement.js\":\n/*!************************************************************!*\\\n  !*** ./src/Draggable/Plugins/Announcement/Announcement.js ***!\n  \\************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.defaultOptions = undefined;\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _AbstractPlugin = __webpack_require__(/*! shared/AbstractPlugin */ \\\"./src/shared/AbstractPlugin/index.js\\\");\\n\\nvar _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onInitialize = Symbol('onInitialize');\\nconst onDestroy = Symbol('onDestroy');\\nconst announceEvent = Symbol('announceEvent');\\nconst announceMessage = Symbol('announceMessage');\\n\\nconst ARIA_RELEVANT = 'aria-relevant';\\nconst ARIA_ATOMIC = 'aria-atomic';\\nconst ARIA_LIVE = 'aria-live';\\nconst ROLE = 'role';\\n\\n/**\\n * Announcement default options\\n * @property {Object} defaultOptions\\n * @property {Number} defaultOptions.expire\\n * @type {Object}\\n */\\nconst defaultOptions = exports.defaultOptions = {\\n  expire: 7000\\n};\\n\\n/**\\n * Announcement plugin\\n * @class Announcement\\n * @module Announcement\\n * @extends AbstractPlugin\\n */\\nclass Announcement extends _AbstractPlugin2.default {\\n  /**\\n   * Announcement constructor.\\n   * @constructs Announcement\\n   * @param {Draggable} draggable - Draggable instance\\n   */\\n  constructor(draggable) {\\n    super(draggable);\\n\\n    /**\\n     * Plugin options\\n     * @property options\\n     * @type {Object}\\n     */\\n    this.options = _extends({}, defaultOptions, this.getOptions());\\n\\n    /**\\n     * Original draggable trigger method. Hack until we have onAll or on('all')\\n     * @property originalTriggerMethod\\n     * @type {Function}\\n     */\\n    this.originalTriggerMethod = this.draggable.trigger;\\n\\n    this[onInitialize] = this[onInitialize].bind(this);\\n    this[onDestroy] = this[onDestroy].bind(this);\\n  }\\n\\n  /**\\n   * Attaches listeners to draggable\\n   */\\n  attach() {\\n    this.draggable.on('draggable:initialize', this[onInitialize]);\\n  }\\n\\n  /**\\n   * Detaches listeners from draggable\\n   */\\n  detach() {\\n    this.draggable.off('draggable:destroy', this[onDestroy]);\\n  }\\n\\n  /**\\n   * Returns passed in options\\n   */\\n  getOptions() {\\n    return this.draggable.options.announcements || {};\\n  }\\n\\n  /**\\n   * Announces event\\n   * @private\\n   * @param {AbstractEvent} event\\n   */\\n  [announceEvent](event) {\\n    const message = this.options[event.type];\\n\\n    if (message && typeof message === 'string') {\\n      this[announceMessage](message);\\n    }\\n\\n    if (message && typeof message === 'function') {\\n      this[announceMessage](message(event));\\n    }\\n  }\\n\\n  /**\\n   * Announces message to screen reader\\n   * @private\\n   * @param {String} message\\n   */\\n  [announceMessage](message) {\\n    announce(message, { expire: this.options.expire });\\n  }\\n\\n  /**\\n   * Initialize hander\\n   * @private\\n   */\\n  [onInitialize]() {\\n    // Hack until there is an api for listening for all events\\n    this.draggable.trigger = event => {\\n      try {\\n        this[announceEvent](event);\\n      } finally {\\n        // Ensure that original trigger is called\\n        this.originalTriggerMethod.call(this.draggable, event);\\n      }\\n    };\\n  }\\n\\n  /**\\n   * Destroy hander\\n   * @private\\n   */\\n  [onDestroy]() {\\n    this.draggable.trigger = this.originalTriggerMethod;\\n  }\\n}\\n\\nexports.default = Announcement; /**\\n                                 * @const {HTMLElement} liveRegion\\n                                 */\\n\\nconst liveRegion = createRegion();\\n\\n/**\\n * Announces message via live region\\n * @param {String} message\\n * @param {Object} options\\n * @param {Number} options.expire\\n */\\nfunction announce(message, { expire }) {\\n  const element = document.createElement('div');\\n\\n  element.innerHTML = message;\\n  liveRegion.appendChild(element);\\n\\n  return setTimeout(() => {\\n    liveRegion.removeChild(element);\\n  }, expire);\\n}\\n\\n/**\\n * Creates region element\\n * @return {HTMLElement}\\n */\\nfunction createRegion() {\\n  const element = document.createElement('div');\\n\\n  element.setAttribute('id', 'draggable-live-region');\\n  element.setAttribute(ARIA_RELEVANT, 'additions');\\n  element.setAttribute(ARIA_ATOMIC, 'true');\\n  element.setAttribute(ARIA_LIVE, 'assertive');\\n  element.setAttribute(ROLE, 'log');\\n\\n  element.style.position = 'fixed';\\n  element.style.width = '1px';\\n  element.style.height = '1px';\\n  element.style.top = '-1px';\\n  element.style.overflow = 'hidden';\\n\\n  return element;\\n}\\n\\n// Append live region element as early as possible\\ndocument.addEventListener('DOMContentLoaded', () => {\\n  document.body.appendChild(liveRegion);\\n});\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Plugins/Announcement/Announcement.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Plugins/Announcement/index.js\":\n/*!*****************************************************!*\\\n  !*** ./src/Draggable/Plugins/Announcement/index.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.defaultOptions = undefined;\\n\\nvar _Announcement = __webpack_require__(/*! ./Announcement */ \\\"./src/Draggable/Plugins/Announcement/Announcement.js\\\");\\n\\nvar _Announcement2 = _interopRequireDefault(_Announcement);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Announcement2.default;\\nexports.defaultOptions = _Announcement.defaultOptions;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Plugins/Announcement/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Plugins/Focusable/Focusable.js\":\n/*!******************************************************!*\\\n  !*** ./src/Draggable/Plugins/Focusable/Focusable.js ***!\n  \\******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _AbstractPlugin = __webpack_require__(/*! shared/AbstractPlugin */ \\\"./src/shared/AbstractPlugin/index.js\\\");\\n\\nvar _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onInitialize = Symbol('onInitialize');\\nconst onDestroy = Symbol('onDestroy');\\n\\n/**\\n * Focusable default options\\n * @property {Object} defaultOptions\\n * @type {Object}\\n */\\nconst defaultOptions = {};\\n\\n/**\\n * Focusable plugin\\n * @class Focusable\\n * @module Focusable\\n * @extends AbstractPlugin\\n */\\nclass Focusable extends _AbstractPlugin2.default {\\n  /**\\n   * Focusable constructor.\\n   * @constructs Focusable\\n   * @param {Draggable} draggable - Draggable instance\\n   */\\n  constructor(draggable) {\\n    super(draggable);\\n\\n    /**\\n     * Focusable options\\n     * @property {Object} options\\n     * @type {Object}\\n     */\\n    this.options = _extends({}, defaultOptions, this.getOptions());\\n\\n    this[onInitialize] = this[onInitialize].bind(this);\\n    this[onDestroy] = this[onDestroy].bind(this);\\n  }\\n\\n  /**\\n   * Attaches listeners to draggable\\n   */\\n  attach() {\\n    this.draggable.on('draggable:initialize', this[onInitialize]).on('draggable:destroy', this[onDestroy]);\\n  }\\n\\n  /**\\n   * Detaches listeners from draggable\\n   */\\n  detach() {\\n    this.draggable.off('draggable:initialize', this[onInitialize]).off('draggable:destroy', this[onDestroy]);\\n  }\\n\\n  /**\\n   * Returns options passed through draggable\\n   * @return {Object}\\n   */\\n  getOptions() {\\n    return this.draggable.options.focusable || {};\\n  }\\n\\n  /**\\n   * Returns draggable containers and elements\\n   * @return {HTMLElement[]}\\n   */\\n  getElements() {\\n    return [...this.draggable.containers, ...this.draggable.getDraggableElements()];\\n  }\\n\\n  /**\\n   * Intialize handler\\n   * @private\\n   */\\n  [onInitialize]() {\\n    // Can wait until the next best frame is available\\n    requestAnimationFrame(() => {\\n      this.getElements().forEach(element => decorateElement(element));\\n    });\\n  }\\n\\n  /**\\n   * Destroy handler\\n   * @private\\n   */\\n  [onDestroy]() {\\n    // Can wait until the next best frame is available\\n    requestAnimationFrame(() => {\\n      this.getElements().forEach(element => stripElement(element));\\n    });\\n  }\\n}\\n\\nexports.default = Focusable; /**\\n                              * Keeps track of all the elements that are missing tabindex attributes\\n                              * so they can be reset when draggable gets destroyed\\n                              * @const {HTMLElement[]} elementsWithMissingTabIndex\\n                              */\\n\\nconst elementsWithMissingTabIndex = [];\\n\\n/**\\n * Decorates element with tabindex attributes\\n * @param {HTMLElement} element\\n * @return {Object}\\n * @private\\n */\\nfunction decorateElement(element) {\\n  const hasMissingTabIndex = Boolean(!element.getAttribute('tabindex') && element.tabIndex === -1);\\n\\n  if (hasMissingTabIndex) {\\n    elementsWithMissingTabIndex.push(element);\\n    element.tabIndex = 0;\\n  }\\n}\\n\\n/**\\n * Removes elements tabindex attributes\\n * @param {HTMLElement} element\\n * @private\\n */\\nfunction stripElement(element) {\\n  const tabIndexElementPosition = elementsWithMissingTabIndex.indexOf(element);\\n\\n  if (tabIndexElementPosition !== -1) {\\n    element.tabIndex = -1;\\n    elementsWithMissingTabIndex.splice(tabIndexElementPosition, 1);\\n  }\\n}\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Plugins/Focusable/Focusable.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Plugins/Focusable/index.js\":\n/*!**************************************************!*\\\n  !*** ./src/Draggable/Plugins/Focusable/index.js ***!\n  \\**************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _Focusable = __webpack_require__(/*! ./Focusable */ \\\"./src/Draggable/Plugins/Focusable/Focusable.js\\\");\\n\\nvar _Focusable2 = _interopRequireDefault(_Focusable);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Focusable2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Plugins/Focusable/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Plugins/Mirror/Mirror.js\":\n/*!************************************************!*\\\n  !*** ./src/Draggable/Plugins/Mirror/Mirror.js ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.defaultOptions = exports.onScroll = exports.onMirrorMove = exports.onMirrorCreated = exports.onDragStop = exports.onDragStart = undefined;\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _AbstractPlugin = __webpack_require__(/*! shared/AbstractPlugin */ \\\"./src/shared/AbstractPlugin/index.js\\\");\\n\\nvar _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\\n\\nconst onDragStart = exports.onDragStart = Symbol('onDragStart');\\nconst onDragStop = exports.onDragStop = Symbol('onDragStop');\\nconst onMirrorCreated = exports.onMirrorCreated = Symbol('onMirrorCreated');\\nconst onMirrorMove = exports.onMirrorMove = Symbol('onMirrorMove');\\nconst onScroll = exports.onScroll = Symbol('onScroll');\\n\\n/**\\n * Mirror default options\\n * @property {Object} defaultOptions\\n * @property {Boolean} defaultOptions.constrainDimensions\\n * @property {Boolean} defaultOptions.xAxis\\n * @property {Boolean} defaultOptions.yAxis\\n * @property {null} defaultOptions.cursorOffsetX\\n * @property {null} defaultOptions.cursorOffsetY\\n * @type {Object}\\n */\\nconst defaultOptions = exports.defaultOptions = {\\n  constrainDimensions: false,\\n  xAxis: true,\\n  yAxis: true,\\n  cursorOffsetX: null,\\n  cursorOffsetY: null\\n};\\n\\n/**\\n * Mirror plugin which controls the mirror positioning while dragging\\n * @class Mirror\\n * @module Mirror\\n * @extends AbstractPlugin\\n */\\nclass Mirror extends _AbstractPlugin2.default {\\n  /**\\n   * Mirror constructor.\\n   * @constructs Mirror\\n   * @param {Draggable} draggable - Draggable instance\\n   */\\n  constructor(draggable) {\\n    super(draggable);\\n\\n    /**\\n     * Mirror options\\n     * @property {Object} options\\n     * @property {Boolean} options.constrainDimensions\\n     * @property {Boolean} options.xAxis\\n     * @property {Boolean} options.yAxis\\n     * @property {Number|null} options.cursorOffsetX\\n     * @property {Number|null} options.cursorOffsetY\\n     * @type {Object}\\n     */\\n    this.options = _extends({}, defaultOptions, this.getOptions());\\n\\n    /**\\n     * Scroll offset for touch devices because the mirror is positioned fixed\\n     * @property {Object} scrollOffset\\n     * @property {Number} scrollOffset.x\\n     * @property {Number} scrollOffset.y\\n     */\\n    this.scrollOffset = { x: 0, y: 0 };\\n\\n    /**\\n     * Initial scroll offset for touch devices because the mirror is positioned fixed\\n     * @property {Object} scrollOffset\\n     * @property {Number} scrollOffset.x\\n     * @property {Number} scrollOffset.y\\n     */\\n    this.initialScrollOffset = {\\n      x: window.scrollX,\\n      y: window.scrollY\\n    };\\n\\n    this[onDragStart] = this[onDragStart].bind(this);\\n    this[onDragStop] = this[onDragStop].bind(this);\\n    this[onMirrorCreated] = this[onMirrorCreated].bind(this);\\n    this[onMirrorMove] = this[onMirrorMove].bind(this);\\n    this[onScroll] = this[onScroll].bind(this);\\n  }\\n\\n  /**\\n   * Attaches plugins event listeners\\n   */\\n  attach() {\\n    this.draggable.on('drag:start', this[onDragStart]).on('drag:stop', this[onDragStop]).on('mirror:created', this[onMirrorCreated]).on('mirror:move', this[onMirrorMove]);\\n  }\\n\\n  /**\\n   * Detaches plugins event listeners\\n   */\\n  detach() {\\n    this.draggable.off('drag:start', this[onDragStart]).off('drag:stop', this[onDragStop]).off('mirror:created', this[onMirrorCreated]).off('mirror:move', this[onMirrorMove]);\\n  }\\n\\n  /**\\n   * Returns options passed through draggable\\n   * @return {Object}\\n   */\\n  getOptions() {\\n    return this.draggable.options.mirror || {};\\n  }\\n\\n  [onDragStart]() {\\n    if ('ontouchstart' in window) {\\n      document.addEventListener('scroll', this[onScroll], true);\\n    }\\n\\n    this.initialScrollOffset = {\\n      x: window.scrollX,\\n      y: window.scrollY\\n    };\\n  }\\n\\n  [onDragStop]() {\\n    if ('ontouchstart' in window) {\\n      document.removeEventListener('scroll', this[onScroll], true);\\n    }\\n\\n    this.initialScrollOffset = { x: 0, y: 0 };\\n    this.scrollOffset = { x: 0, y: 0 };\\n  }\\n\\n  [onScroll]() {\\n    this.scrollOffset = {\\n      x: window.scrollX - this.initialScrollOffset.x,\\n      y: window.scrollY - this.initialScrollOffset.y\\n    };\\n  }\\n\\n  /**\\n   * Mirror created handler\\n   * @param {MirrorCreatedEvent} mirrorEvent\\n   * @return {Promise}\\n   * @private\\n   */\\n  [onMirrorCreated]({ mirror, source, sensorEvent }) {\\n    const mirrorClass = this.draggable.getClassNameFor('mirror');\\n\\n    const setState = (_ref) => {\\n      let { mirrorOffset, initialX, initialY } = _ref,\\n          args = _objectWithoutProperties(_ref, ['mirrorOffset', 'initialX', 'initialY']);\\n\\n      this.mirrorOffset = mirrorOffset;\\n      this.initialX = initialX;\\n      this.initialY = initialY;\\n      return _extends({ mirrorOffset, initialX, initialY }, args);\\n    };\\n\\n    const initialState = {\\n      mirror,\\n      source,\\n      sensorEvent,\\n      mirrorClass,\\n      scrollOffset: this.scrollOffset,\\n      options: this.options\\n    };\\n\\n    return Promise.resolve(initialState)\\n    // Fix reflow here\\n    .then(computeMirrorDimensions).then(calculateMirrorOffset).then(resetMirror).then(addMirrorClasses).then(positionMirror({ initial: true })).then(removeMirrorID).then(setState);\\n  }\\n\\n  /**\\n   * Mirror move handler\\n   * @param {MirrorMoveEvent} mirrorEvent\\n   * @return {Promise}\\n   * @private\\n   */\\n  [onMirrorMove]({ mirror, sensorEvent }) {\\n    const initialState = {\\n      mirror,\\n      sensorEvent,\\n      mirrorOffset: this.mirrorOffset,\\n      options: this.options,\\n      initialX: this.initialX,\\n      initialY: this.initialY,\\n      scrollOffset: this.scrollOffset\\n    };\\n\\n    return Promise.resolve(initialState).then(positionMirror({ raf: true }));\\n  }\\n}\\n\\nexports.default = Mirror; /**\\n                           * Computes mirror dimensions based on the source element\\n                           * Adds sourceRect to state\\n                           * @param {Object} state\\n                           * @param {HTMLElement} state.source\\n                           * @return {Promise}\\n                           * @private\\n                           */\\n\\nfunction computeMirrorDimensions(_ref2) {\\n  let { source } = _ref2,\\n      args = _objectWithoutProperties(_ref2, ['source']);\\n\\n  return withPromise(resolve => {\\n    const sourceRect = source.getBoundingClientRect();\\n    resolve(_extends({ source, sourceRect }, args));\\n  });\\n}\\n\\n/**\\n * Calculates mirror offset\\n * Adds mirrorOffset to state\\n * @param {Object} state\\n * @param {SensorEvent} state.sensorEvent\\n * @param {DOMRect} state.sourceRect\\n * @return {Promise}\\n * @private\\n */\\nfunction calculateMirrorOffset(_ref3) {\\n  let { sensorEvent, sourceRect, options } = _ref3,\\n      args = _objectWithoutProperties(_ref3, ['sensorEvent', 'sourceRect', 'options']);\\n\\n  return withPromise(resolve => {\\n    const top = options.cursorOffsetY === null ? sensorEvent.clientY - sourceRect.top : options.cursorOffsetY;\\n    const left = options.cursorOffsetX === null ? sensorEvent.clientX - sourceRect.left : options.cursorOffsetX;\\n\\n    const mirrorOffset = { top, left };\\n\\n    resolve(_extends({ sensorEvent, sourceRect, mirrorOffset, options }, args));\\n  });\\n}\\n\\n/**\\n * Applys mirror styles\\n * @param {Object} state\\n * @param {HTMLElement} state.mirror\\n * @param {HTMLElement} state.source\\n * @param {Object} state.options\\n * @return {Promise}\\n * @private\\n */\\nfunction resetMirror(_ref4) {\\n  let { mirror, source, options } = _ref4,\\n      args = _objectWithoutProperties(_ref4, ['mirror', 'source', 'options']);\\n\\n  return withPromise(resolve => {\\n    let offsetHeight;\\n    let offsetWidth;\\n\\n    if (options.constrainDimensions) {\\n      const computedSourceStyles = getComputedStyle(source);\\n      offsetHeight = computedSourceStyles.getPropertyValue('height');\\n      offsetWidth = computedSourceStyles.getPropertyValue('width');\\n    }\\n\\n    mirror.style.position = 'fixed';\\n    mirror.style.pointerEvents = 'none';\\n    mirror.style.top = 0;\\n    mirror.style.left = 0;\\n    mirror.style.margin = 0;\\n\\n    if (options.constrainDimensions) {\\n      mirror.style.height = offsetHeight;\\n      mirror.style.width = offsetWidth;\\n    }\\n\\n    resolve(_extends({ mirror, source, options }, args));\\n  });\\n}\\n\\n/**\\n * Applys mirror class on mirror element\\n * @param {Object} state\\n * @param {HTMLElement} state.mirror\\n * @param {String} state.mirrorClass\\n * @return {Promise}\\n * @private\\n */\\nfunction addMirrorClasses(_ref5) {\\n  let { mirror, mirrorClass } = _ref5,\\n      args = _objectWithoutProperties(_ref5, ['mirror', 'mirrorClass']);\\n\\n  return withPromise(resolve => {\\n    mirror.classList.add(mirrorClass);\\n    resolve(_extends({ mirror, mirrorClass }, args));\\n  });\\n}\\n\\n/**\\n * Removes source ID from cloned mirror element\\n * @param {Object} state\\n * @param {HTMLElement} state.mirror\\n * @return {Promise}\\n * @private\\n */\\nfunction removeMirrorID(_ref6) {\\n  let { mirror } = _ref6,\\n      args = _objectWithoutProperties(_ref6, ['mirror']);\\n\\n  return withPromise(resolve => {\\n    mirror.removeAttribute('id');\\n    delete mirror.id;\\n    resolve(_extends({ mirror }, args));\\n  });\\n}\\n\\n/**\\n * Positions mirror with translate3d\\n * @param {Object} state\\n * @param {HTMLElement} state.mirror\\n * @param {SensorEvent} state.sensorEvent\\n * @param {Object} state.mirrorOffset\\n * @param {Number} state.initialY\\n * @param {Number} state.initialX\\n * @param {Object} state.options\\n * @return {Promise}\\n * @private\\n */\\nfunction positionMirror({ withFrame = false, initial = false } = {}) {\\n  return (_ref7) => {\\n    let { mirror, sensorEvent, mirrorOffset, initialY, initialX, scrollOffset, options } = _ref7,\\n        args = _objectWithoutProperties(_ref7, ['mirror', 'sensorEvent', 'mirrorOffset', 'initialY', 'initialX', 'scrollOffset', 'options']);\\n\\n    return withPromise(resolve => {\\n      const result = _extends({\\n        mirror,\\n        sensorEvent,\\n        mirrorOffset,\\n        options\\n      }, args);\\n\\n      if (mirrorOffset) {\\n        const x = sensorEvent.clientX - mirrorOffset.left - scrollOffset.x;\\n        const y = sensorEvent.clientY - mirrorOffset.top - scrollOffset.y;\\n\\n        if (options.xAxis && options.yAxis || initial) {\\n          mirror.style.transform = `translate3d(${x}px, ${y}px, 0)`;\\n        } else if (options.xAxis && !options.yAxis) {\\n          mirror.style.transform = `translate3d(${x}px, ${initialY}px, 0)`;\\n        } else if (options.yAxis && !options.xAxis) {\\n          mirror.style.transform = `translate3d(${initialX}px, ${y}px, 0)`;\\n        }\\n\\n        if (initial) {\\n          result.initialX = x;\\n          result.initialY = y;\\n        }\\n      }\\n\\n      resolve(result);\\n    }, { frame: withFrame });\\n  };\\n}\\n\\n/**\\n * Wraps functions in promise with potential animation frame option\\n * @param {Function} callback\\n * @param {Object} options\\n * @param {Boolean} options.raf\\n * @return {Promise}\\n * @private\\n */\\nfunction withPromise(callback, { raf = false } = {}) {\\n  return new Promise((resolve, reject) => {\\n    if (raf) {\\n      requestAnimationFrame(() => {\\n        callback(resolve, reject);\\n      });\\n    } else {\\n      callback(resolve, reject);\\n    }\\n  });\\n}\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Plugins/Mirror/Mirror.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Plugins/Mirror/index.js\":\n/*!***********************************************!*\\\n  !*** ./src/Draggable/Plugins/Mirror/index.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.defaultOptions = undefined;\\n\\nvar _Mirror = __webpack_require__(/*! ./Mirror */ \\\"./src/Draggable/Plugins/Mirror/Mirror.js\\\");\\n\\nvar _Mirror2 = _interopRequireDefault(_Mirror);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Mirror2.default;\\nexports.defaultOptions = _Mirror.defaultOptions;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Plugins/Mirror/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Plugins/Scrollable/Scrollable.js\":\n/*!********************************************************!*\\\n  !*** ./src/Draggable/Plugins/Scrollable/Scrollable.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.defaultOptions = exports.scroll = exports.onDragStop = exports.onDragMove = exports.onDragStart = undefined;\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _AbstractPlugin = __webpack_require__(/*! shared/AbstractPlugin */ \\\"./src/shared/AbstractPlugin/index.js\\\");\\n\\nvar _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\\n\\nvar _utils = __webpack_require__(/*! shared/utils */ \\\"./src/shared/utils/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onDragStart = exports.onDragStart = Symbol('onDragStart');\\nconst onDragMove = exports.onDragMove = Symbol('onDragMove');\\nconst onDragStop = exports.onDragStop = Symbol('onDragStop');\\nconst scroll = exports.scroll = Symbol('scroll');\\n\\n/**\\n * Scrollable default options\\n * @property {Object} defaultOptions\\n * @property {Number} defaultOptions.speed\\n * @property {Number} defaultOptions.sensitivity\\n * @property {HTMLElement[]} defaultOptions.scrollableElements\\n * @type {Object}\\n */\\nconst defaultOptions = exports.defaultOptions = {\\n  speed: 6,\\n  sensitivity: 50,\\n  scrollableElements: []\\n};\\n\\n/**\\n * Scrollable plugin which scrolls the closest scrollable parent\\n * @class Scrollable\\n * @module Scrollable\\n * @extends AbstractPlugin\\n */\\nclass Scrollable extends _AbstractPlugin2.default {\\n  /**\\n   * Scrollable constructor.\\n   * @constructs Scrollable\\n   * @param {Draggable} draggable - Draggable instance\\n   */\\n  constructor(draggable) {\\n    super(draggable);\\n\\n    /**\\n     * Scrollable options\\n     * @property {Object} options\\n     * @property {Number} options.speed\\n     * @property {Number} options.sensitivity\\n     * @property {HTMLElement[]} options.scrollableElements\\n     * @type {Object}\\n     */\\n    this.options = _extends({}, defaultOptions, this.getOptions());\\n\\n    /**\\n     * Keeps current mouse position\\n     * @property {Object} currentMousePosition\\n     * @property {Number} currentMousePosition.clientX\\n     * @property {Number} currentMousePosition.clientY\\n     * @type {Object|null}\\n     */\\n    this.currentMousePosition = null;\\n\\n    /**\\n     * Scroll animation frame\\n     * @property scrollAnimationFrame\\n     * @type {Number|null}\\n     */\\n    this.scrollAnimationFrame = null;\\n\\n    /**\\n     * Closest scrollable element\\n     * @property scrollableElement\\n     * @type {HTMLElement|null}\\n     */\\n    this.scrollableElement = null;\\n\\n    /**\\n     * Animation frame looking for the closest scrollable element\\n     * @property findScrollableElementFrame\\n     * @type {Number|null}\\n     */\\n    this.findScrollableElementFrame = null;\\n\\n    this[onDragStart] = this[onDragStart].bind(this);\\n    this[onDragMove] = this[onDragMove].bind(this);\\n    this[onDragStop] = this[onDragStop].bind(this);\\n    this[scroll] = this[scroll].bind(this);\\n  }\\n\\n  /**\\n   * Attaches plugins event listeners\\n   */\\n  attach() {\\n    this.draggable.on('drag:start', this[onDragStart]).on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]);\\n  }\\n\\n  /**\\n   * Detaches plugins event listeners\\n   */\\n  detach() {\\n    this.draggable.off('drag:start', this[onDragStart]).off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]);\\n  }\\n\\n  /**\\n   * Returns options passed through draggable\\n   * @return {Object}\\n   */\\n  getOptions() {\\n    return this.draggable.options.scrollable || {};\\n  }\\n\\n  /**\\n   * Returns closest scrollable elements by element\\n   * @param {HTMLElement} target\\n   * @return {HTMLElement}\\n   */\\n  getScrollableElement(target) {\\n    if (this.hasDefinedScrollableElements()) {\\n      return (0, _utils.closest)(target, this.options.scrollableElements) || document.documentElement;\\n    } else {\\n      return closestScrollableElement(target);\\n    }\\n  }\\n\\n  /**\\n   * Returns true if at least one scrollable element have been defined via options\\n   * @param {HTMLElement} target\\n   * @return {Boolean}\\n   */\\n  hasDefinedScrollableElements() {\\n    return Boolean(this.options.scrollableElements.length !== 0);\\n  }\\n\\n  /**\\n   * Drag start handler. Finds closest scrollable parent in separate frame\\n   * @param {DragStartEvent} dragEvent\\n   * @private\\n   */\\n  [onDragStart](dragEvent) {\\n    this.findScrollableElementFrame = requestAnimationFrame(() => {\\n      this.scrollableElement = this.getScrollableElement(dragEvent.source);\\n    });\\n  }\\n\\n  /**\\n   * Drag move handler. Remembers mouse position and initiates scrolling\\n   * @param {DragMoveEvent} dragEvent\\n   * @private\\n   */\\n  [onDragMove](dragEvent) {\\n    this.findScrollableElementFrame = requestAnimationFrame(() => {\\n      this.scrollableElement = this.getScrollableElement(dragEvent.sensorEvent.target);\\n    });\\n\\n    if (!this.scrollableElement) {\\n      return;\\n    }\\n\\n    const sensorEvent = dragEvent.sensorEvent;\\n    const scrollOffset = { x: 0, y: 0 };\\n\\n    if ('ontouchstart' in window) {\\n      scrollOffset.y = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\\n      scrollOffset.x = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;\\n    }\\n\\n    this.currentMousePosition = {\\n      clientX: sensorEvent.clientX - scrollOffset.x,\\n      clientY: sensorEvent.clientY - scrollOffset.y\\n    };\\n\\n    this.scrollAnimationFrame = requestAnimationFrame(this[scroll]);\\n  }\\n\\n  /**\\n   * Drag stop handler. Cancels scroll animations and resets state\\n   * @private\\n   */\\n  [onDragStop]() {\\n    cancelAnimationFrame(this.scrollAnimationFrame);\\n    cancelAnimationFrame(this.findScrollableElementFrame);\\n\\n    this.scrollableElement = null;\\n    this.scrollAnimationFrame = null;\\n    this.findScrollableElementFrame = null;\\n    this.currentMousePosition = null;\\n  }\\n\\n  /**\\n   * Scroll function that does the heavylifting\\n   * @private\\n   */\\n  [scroll]() {\\n    if (!this.scrollableElement) {\\n      return;\\n    }\\n\\n    cancelAnimationFrame(this.scrollAnimationFrame);\\n\\n    const { speed, sensitivity } = this.options;\\n\\n    const rect = this.scrollableElement.getBoundingClientRect();\\n    const bottomCutOff = rect.bottom > window.innerHeight;\\n    const topCutOff = rect.top < 0;\\n    const cutOff = topCutOff || bottomCutOff;\\n\\n    const documentScrollingElement = getDocumentScrollingElement();\\n    const scrollableElement = this.scrollableElement;\\n    const clientX = this.currentMousePosition.clientX;\\n    const clientY = this.currentMousePosition.clientY;\\n\\n    if (scrollableElement !== document.body && scrollableElement !== document.documentElement && !cutOff) {\\n      const { offsetHeight, offsetWidth } = scrollableElement;\\n\\n      if (rect.top + offsetHeight - clientY < sensitivity) {\\n        scrollableElement.scrollTop += speed;\\n      } else if (clientY - rect.top < sensitivity) {\\n        scrollableElement.scrollTop -= speed;\\n      }\\n\\n      if (rect.left + offsetWidth - clientX < sensitivity) {\\n        scrollableElement.scrollLeft += speed;\\n      } else if (clientX - rect.left < sensitivity) {\\n        scrollableElement.scrollLeft -= speed;\\n      }\\n    } else {\\n      const { innerHeight, innerWidth } = window;\\n\\n      if (clientY < sensitivity) {\\n        documentScrollingElement.scrollTop -= speed;\\n      } else if (innerHeight - clientY < sensitivity) {\\n        documentScrollingElement.scrollTop += speed;\\n      }\\n\\n      if (clientX < sensitivity) {\\n        documentScrollingElement.scrollLeft -= speed;\\n      } else if (innerWidth - clientX < sensitivity) {\\n        documentScrollingElement.scrollLeft += speed;\\n      }\\n    }\\n\\n    this.scrollAnimationFrame = requestAnimationFrame(this[scroll]);\\n  }\\n}\\n\\nexports.default = Scrollable; /**\\n                               * Returns true if the passed element has overflow\\n                               * @param {HTMLElement} element\\n                               * @return {Boolean}\\n                               * @private\\n                               */\\n\\nfunction hasOverflow(element) {\\n  const overflowRegex = /(auto|scroll)/;\\n  const computedStyles = getComputedStyle(element, null);\\n\\n  const overflow = computedStyles.getPropertyValue('overflow') + computedStyles.getPropertyValue('overflow-y') + computedStyles.getPropertyValue('overflow-x');\\n\\n  return overflowRegex.test(overflow);\\n}\\n\\n/**\\n * Returns true if the passed element is statically positioned\\n * @param {HTMLElement} element\\n * @return {Boolean}\\n * @private\\n */\\nfunction isStaticallyPositioned(element) {\\n  const position = getComputedStyle(element).getPropertyValue('position');\\n  return position === 'static';\\n}\\n\\n/**\\n * Finds closest scrollable element\\n * @param {HTMLElement} element\\n * @return {HTMLElement}\\n * @private\\n */\\nfunction closestScrollableElement(element) {\\n  if (!element) {\\n    return getDocumentScrollingElement();\\n  }\\n\\n  const position = getComputedStyle(element).getPropertyValue('position');\\n  const excludeStaticParents = position === 'absolute';\\n\\n  const scrollableElement = (0, _utils.closest)(element, parent => {\\n    if (excludeStaticParents && isStaticallyPositioned(parent)) {\\n      return false;\\n    }\\n    return hasOverflow(parent);\\n  });\\n\\n  if (position === 'fixed' || !scrollableElement) {\\n    return getDocumentScrollingElement();\\n  } else {\\n    return scrollableElement;\\n  }\\n}\\n\\n/**\\n * Returns element that scrolls document\\n * @return {HTMLElement}\\n * @private\\n */\\nfunction getDocumentScrollingElement() {\\n  return document.scrollingElement || document.documentElement;\\n}\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Plugins/Scrollable/Scrollable.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Plugins/Scrollable/index.js\":\n/*!***************************************************!*\\\n  !*** ./src/Draggable/Plugins/Scrollable/index.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.defaultOptions = undefined;\\n\\nvar _Scrollable = __webpack_require__(/*! ./Scrollable */ \\\"./src/Draggable/Plugins/Scrollable/Scrollable.js\\\");\\n\\nvar _Scrollable2 = _interopRequireDefault(_Scrollable);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Scrollable2.default;\\nexports.defaultOptions = _Scrollable.defaultOptions;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Plugins/Scrollable/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Plugins/index.js\":\n/*!****************************************!*\\\n  !*** ./src/Draggable/Plugins/index.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _Announcement = __webpack_require__(/*! ./Announcement */ \\\"./src/Draggable/Plugins/Announcement/index.js\\\");\\n\\nObject.defineProperty(exports, 'Announcement', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Announcement).default;\\n  }\\n});\\nObject.defineProperty(exports, 'defaultAnnouncementOptions', {\\n  enumerable: true,\\n  get: function () {\\n    return _Announcement.defaultOptions;\\n  }\\n});\\n\\nvar _Focusable = __webpack_require__(/*! ./Focusable */ \\\"./src/Draggable/Plugins/Focusable/index.js\\\");\\n\\nObject.defineProperty(exports, 'Focusable', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Focusable).default;\\n  }\\n});\\n\\nvar _Mirror = __webpack_require__(/*! ./Mirror */ \\\"./src/Draggable/Plugins/Mirror/index.js\\\");\\n\\nObject.defineProperty(exports, 'Mirror', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Mirror).default;\\n  }\\n});\\nObject.defineProperty(exports, 'defaultMirrorOptions', {\\n  enumerable: true,\\n  get: function () {\\n    return _Mirror.defaultOptions;\\n  }\\n});\\n\\nvar _Scrollable = __webpack_require__(/*! ./Scrollable */ \\\"./src/Draggable/Plugins/Scrollable/index.js\\\");\\n\\nObject.defineProperty(exports, 'Scrollable', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Scrollable).default;\\n  }\\n});\\nObject.defineProperty(exports, 'defaultScrollableOptions', {\\n  enumerable: true,\\n  get: function () {\\n    return _Scrollable.defaultOptions;\\n  }\\n});\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Plugins/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/DragSensor/DragSensor.js\":\n/*!********************************************************!*\\\n  !*** ./src/Draggable/Sensors/DragSensor/DragSensor.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _utils = __webpack_require__(/*! shared/utils */ \\\"./src/shared/utils/index.js\\\");\\n\\nvar _Sensor = __webpack_require__(/*! ../Sensor */ \\\"./src/Draggable/Sensors/Sensor/index.js\\\");\\n\\nvar _Sensor2 = _interopRequireDefault(_Sensor);\\n\\nvar _SensorEvent = __webpack_require__(/*! ../SensorEvent */ \\\"./src/Draggable/Sensors/SensorEvent/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onMouseDown = Symbol('onMouseDown');\\nconst onMouseUp = Symbol('onMouseUp');\\nconst onDragStart = Symbol('onDragStart');\\nconst onDragOver = Symbol('onDragOver');\\nconst onDragEnd = Symbol('onDragEnd');\\nconst onDrop = Symbol('onDrop');\\nconst reset = Symbol('reset');\\n\\n/**\\n * This sensor picks up native browser drag events and dictates drag operations\\n * @class DragSensor\\n * @module DragSensor\\n * @extends Sensor\\n */\\nclass DragSensor extends _Sensor2.default {\\n  /**\\n   * DragSensor constructor.\\n   * @constructs DragSensor\\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\\n   * @param {Object} options - Options\\n   */\\n  constructor(containers = [], options = {}) {\\n    super(containers, options);\\n\\n    /**\\n     * Mouse down timer which will end up setting the draggable attribute, unless canceled\\n     * @property mouseDownTimeout\\n     * @type {Number}\\n     */\\n    this.mouseDownTimeout = null;\\n\\n    /**\\n     * Draggable element needs to be remembered to unset the draggable attribute after drag operation has completed\\n     * @property draggableElement\\n     * @type {HTMLElement}\\n     */\\n    this.draggableElement = null;\\n\\n    /**\\n     * Native draggable element could be links or images, their draggable state will be disabled during drag operation\\n     * @property nativeDraggableElement\\n     * @type {HTMLElement}\\n     */\\n    this.nativeDraggableElement = null;\\n\\n    this[onMouseDown] = this[onMouseDown].bind(this);\\n    this[onMouseUp] = this[onMouseUp].bind(this);\\n    this[onDragStart] = this[onDragStart].bind(this);\\n    this[onDragOver] = this[onDragOver].bind(this);\\n    this[onDragEnd] = this[onDragEnd].bind(this);\\n    this[onDrop] = this[onDrop].bind(this);\\n  }\\n\\n  /**\\n   * Attaches sensors event listeners to the DOM\\n   */\\n  attach() {\\n    document.addEventListener('mousedown', this[onMouseDown], true);\\n  }\\n\\n  /**\\n   * Detaches sensors event listeners to the DOM\\n   */\\n  detach() {\\n    document.removeEventListener('mousedown', this[onMouseDown], true);\\n  }\\n\\n  /**\\n   * Drag start handler\\n   * @private\\n   * @param {Event} event - Drag start event\\n   */\\n  [onDragStart](event) {\\n    // Need for firefox. \\\"text\\\" key is needed for IE\\n    event.dataTransfer.setData('text', '');\\n    event.dataTransfer.effectAllowed = this.options.type;\\n\\n    const target = document.elementFromPoint(event.clientX, event.clientY);\\n    this.currentContainer = (0, _utils.closest)(event.target, this.containers);\\n\\n    if (!this.currentContainer) {\\n      return;\\n    }\\n\\n    const dragStartEvent = new _SensorEvent.DragStartSensorEvent({\\n      clientX: event.clientX,\\n      clientY: event.clientY,\\n      target,\\n      container: this.currentContainer,\\n      originalEvent: event\\n    });\\n\\n    // Workaround\\n    setTimeout(() => {\\n      this.trigger(this.currentContainer, dragStartEvent);\\n\\n      if (dragStartEvent.canceled()) {\\n        this.dragging = false;\\n      } else {\\n        this.dragging = true;\\n      }\\n    }, 0);\\n  }\\n\\n  /**\\n   * Drag over handler\\n   * @private\\n   * @param {Event} event - Drag over event\\n   */\\n  [onDragOver](event) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    const target = document.elementFromPoint(event.clientX, event.clientY);\\n    const container = this.currentContainer;\\n\\n    const dragMoveEvent = new _SensorEvent.DragMoveSensorEvent({\\n      clientX: event.clientX,\\n      clientY: event.clientY,\\n      target,\\n      container,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(container, dragMoveEvent);\\n\\n    if (!dragMoveEvent.canceled()) {\\n      event.preventDefault();\\n      event.dataTransfer.dropEffect = this.options.type;\\n    }\\n  }\\n\\n  /**\\n   * Drag end handler\\n   * @private\\n   * @param {Event} event - Drag end event\\n   */\\n  [onDragEnd](event) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    document.removeEventListener('mouseup', this[onMouseUp], true);\\n\\n    const target = document.elementFromPoint(event.clientX, event.clientY);\\n    const container = this.currentContainer;\\n\\n    const dragStopEvent = new _SensorEvent.DragStopSensorEvent({\\n      clientX: event.clientX,\\n      clientY: event.clientY,\\n      target,\\n      container,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(container, dragStopEvent);\\n\\n    this.dragging = false;\\n\\n    this[reset]();\\n  }\\n\\n  /**\\n   * Drop handler\\n   * @private\\n   * @param {Event} event - Drop event\\n   */\\n  [onDrop](event) {\\n    // eslint-disable-line class-methods-use-this\\n    event.preventDefault();\\n  }\\n\\n  /**\\n   * Mouse down handler\\n   * @private\\n   * @param {Event} event - Mouse down event\\n   */\\n  [onMouseDown](event) {\\n    // Firefox bug for inputs within draggables https://bugzilla.mozilla.org/show_bug.cgi?id=739071\\n    if (event.target && (event.target.form || event.target.contenteditable)) {\\n      return;\\n    }\\n\\n    const nativeDraggableElement = (0, _utils.closest)(event.target, element => element.draggable);\\n\\n    if (nativeDraggableElement) {\\n      nativeDraggableElement.draggable = false;\\n      this.nativeDraggableElement = nativeDraggableElement;\\n    }\\n\\n    document.addEventListener('mouseup', this[onMouseUp], true);\\n    document.addEventListener('dragstart', this[onDragStart], false);\\n    document.addEventListener('dragover', this[onDragOver], false);\\n    document.addEventListener('dragend', this[onDragEnd], false);\\n    document.addEventListener('drop', this[onDrop], false);\\n\\n    const target = (0, _utils.closest)(event.target, this.options.draggable);\\n\\n    if (!target) {\\n      return;\\n    }\\n\\n    this.mouseDownTimeout = setTimeout(() => {\\n      target.draggable = true;\\n      this.draggableElement = target;\\n    }, this.options.delay);\\n  }\\n\\n  /**\\n   * Mouse up handler\\n   * @private\\n   * @param {Event} event - Mouse up event\\n   */\\n  [onMouseUp]() {\\n    this[reset]();\\n  }\\n\\n  /**\\n   * Mouse up handler\\n   * @private\\n   * @param {Event} event - Mouse up event\\n   */\\n  [reset]() {\\n    clearTimeout(this.mouseDownTimeout);\\n\\n    document.removeEventListener('mouseup', this[onMouseUp], true);\\n    document.removeEventListener('dragstart', this[onDragStart], false);\\n    document.removeEventListener('dragover', this[onDragOver], false);\\n    document.removeEventListener('dragend', this[onDragEnd], false);\\n    document.removeEventListener('drop', this[onDrop], false);\\n\\n    if (this.nativeDraggableElement) {\\n      this.nativeDraggableElement.draggable = true;\\n      this.nativeDraggableElement = null;\\n    }\\n\\n    if (this.draggableElement) {\\n      this.draggableElement.draggable = false;\\n      this.draggableElement = null;\\n    }\\n  }\\n}\\nexports.default = DragSensor;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/DragSensor/DragSensor.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/DragSensor/index.js\":\n/*!***************************************************!*\\\n  !*** ./src/Draggable/Sensors/DragSensor/index.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _DragSensor = __webpack_require__(/*! ./DragSensor */ \\\"./src/Draggable/Sensors/DragSensor/DragSensor.js\\\");\\n\\nvar _DragSensor2 = _interopRequireDefault(_DragSensor);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _DragSensor2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/DragSensor/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js\":\n/*!********************************************************************!*\\\n  !*** ./src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js ***!\n  \\********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _Sensor = __webpack_require__(/*! ../Sensor */ \\\"./src/Draggable/Sensors/Sensor/index.js\\\");\\n\\nvar _Sensor2 = _interopRequireDefault(_Sensor);\\n\\nvar _SensorEvent = __webpack_require__(/*! ../SensorEvent */ \\\"./src/Draggable/Sensors/SensorEvent/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onMouseForceWillBegin = Symbol('onMouseForceWillBegin');\\nconst onMouseForceDown = Symbol('onMouseForceDown');\\nconst onMouseDown = Symbol('onMouseDown');\\nconst onMouseForceChange = Symbol('onMouseForceChange');\\nconst onMouseMove = Symbol('onMouseMove');\\nconst onMouseUp = Symbol('onMouseUp');\\nconst onMouseForceGlobalChange = Symbol('onMouseForceGlobalChange');\\n\\n/**\\n * This sensor picks up native force touch events and dictates drag operations\\n * @class ForceTouchSensor\\n * @module ForceTouchSensor\\n * @extends Sensor\\n */\\nclass ForceTouchSensor extends _Sensor2.default {\\n  /**\\n   * ForceTouchSensor constructor.\\n   * @constructs ForceTouchSensor\\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\\n   * @param {Object} options - Options\\n   */\\n  constructor(containers = [], options = {}) {\\n    super(containers, options);\\n\\n    /**\\n     * Draggable element needs to be remembered to unset the draggable attribute after drag operation has completed\\n     * @property mightDrag\\n     * @type {Boolean}\\n     */\\n    this.mightDrag = false;\\n\\n    this[onMouseForceWillBegin] = this[onMouseForceWillBegin].bind(this);\\n    this[onMouseForceDown] = this[onMouseForceDown].bind(this);\\n    this[onMouseDown] = this[onMouseDown].bind(this);\\n    this[onMouseForceChange] = this[onMouseForceChange].bind(this);\\n    this[onMouseMove] = this[onMouseMove].bind(this);\\n    this[onMouseUp] = this[onMouseUp].bind(this);\\n  }\\n\\n  /**\\n   * Attaches sensors event listeners to the DOM\\n   */\\n  attach() {\\n    for (const container of this.containers) {\\n      container.addEventListener('webkitmouseforcewillbegin', this[onMouseForceWillBegin], false);\\n      container.addEventListener('webkitmouseforcedown', this[onMouseForceDown], false);\\n      container.addEventListener('mousedown', this[onMouseDown], true);\\n      container.addEventListener('webkitmouseforcechanged', this[onMouseForceChange], false);\\n    }\\n\\n    document.addEventListener('mousemove', this[onMouseMove]);\\n    document.addEventListener('mouseup', this[onMouseUp]);\\n  }\\n\\n  /**\\n   * Detaches sensors event listeners to the DOM\\n   */\\n  detach() {\\n    for (const container of this.containers) {\\n      container.removeEventListener('webkitmouseforcewillbegin', this[onMouseForceWillBegin], false);\\n      container.removeEventListener('webkitmouseforcedown', this[onMouseForceDown], false);\\n      container.removeEventListener('mousedown', this[onMouseDown], true);\\n      container.removeEventListener('webkitmouseforcechanged', this[onMouseForceChange], false);\\n    }\\n\\n    document.removeEventListener('mousemove', this[onMouseMove]);\\n    document.removeEventListener('mouseup', this[onMouseUp]);\\n  }\\n\\n  /**\\n   * Mouse force will begin handler\\n   * @private\\n   * @param {Event} event - Mouse force will begin event\\n   */\\n  [onMouseForceWillBegin](event) {\\n    event.preventDefault();\\n    this.mightDrag = true;\\n  }\\n\\n  /**\\n   * Mouse force down handler\\n   * @private\\n   * @param {Event} event - Mouse force down event\\n   */\\n  [onMouseForceDown](event) {\\n    if (this.dragging) {\\n      return;\\n    }\\n\\n    const target = document.elementFromPoint(event.clientX, event.clientY);\\n    const container = event.currentTarget;\\n\\n    const dragStartEvent = new _SensorEvent.DragStartSensorEvent({\\n      clientX: event.clientX,\\n      clientY: event.clientY,\\n      target,\\n      container,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(container, dragStartEvent);\\n\\n    this.currentContainer = container;\\n    this.dragging = !dragStartEvent.canceled();\\n    this.mightDrag = false;\\n  }\\n\\n  /**\\n   * Mouse up handler\\n   * @private\\n   * @param {Event} event - Mouse up event\\n   */\\n  [onMouseUp](event) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    const dragStopEvent = new _SensorEvent.DragStopSensorEvent({\\n      clientX: event.clientX,\\n      clientY: event.clientY,\\n      target: null,\\n      container: this.currentContainer,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(this.currentContainer, dragStopEvent);\\n\\n    this.currentContainer = null;\\n    this.dragging = false;\\n    this.mightDrag = false;\\n  }\\n\\n  /**\\n   * Mouse down handler\\n   * @private\\n   * @param {Event} event - Mouse down event\\n   */\\n  [onMouseDown](event) {\\n    if (!this.mightDrag) {\\n      return;\\n    }\\n\\n    // Need workaround for real click\\n    // Cancel potential drag events\\n    event.stopPropagation();\\n    event.stopImmediatePropagation();\\n    event.preventDefault();\\n  }\\n\\n  /**\\n   * Mouse move handler\\n   * @private\\n   * @param {Event} event - Mouse force will begin event\\n   */\\n  [onMouseMove](event) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    const target = document.elementFromPoint(event.clientX, event.clientY);\\n\\n    const dragMoveEvent = new _SensorEvent.DragMoveSensorEvent({\\n      clientX: event.clientX,\\n      clientY: event.clientY,\\n      target,\\n      container: this.currentContainer,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(this.currentContainer, dragMoveEvent);\\n  }\\n\\n  /**\\n   * Mouse force change handler\\n   * @private\\n   * @param {Event} event - Mouse force change event\\n   */\\n  [onMouseForceChange](event) {\\n    if (this.dragging) {\\n      return;\\n    }\\n\\n    const target = event.target;\\n    const container = event.currentTarget;\\n\\n    const dragPressureEvent = new _SensorEvent.DragPressureSensorEvent({\\n      pressure: event.webkitForce,\\n      clientX: event.clientX,\\n      clientY: event.clientY,\\n      target,\\n      container,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(container, dragPressureEvent);\\n  }\\n\\n  /**\\n   * Mouse force global change handler\\n   * @private\\n   * @param {Event} event - Mouse force global change event\\n   */\\n  [onMouseForceGlobalChange](event) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    const target = event.target;\\n\\n    const dragPressureEvent = new _SensorEvent.DragPressureSensorEvent({\\n      pressure: event.webkitForce,\\n      clientX: event.clientX,\\n      clientY: event.clientY,\\n      target,\\n      container: this.currentContainer,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(this.currentContainer, dragPressureEvent);\\n  }\\n}\\nexports.default = ForceTouchSensor;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/ForceTouchSensor/index.js\":\n/*!*********************************************************!*\\\n  !*** ./src/Draggable/Sensors/ForceTouchSensor/index.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _ForceTouchSensor = __webpack_require__(/*! ./ForceTouchSensor */ \\\"./src/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.js\\\");\\n\\nvar _ForceTouchSensor2 = _interopRequireDefault(_ForceTouchSensor);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _ForceTouchSensor2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/ForceTouchSensor/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/MouseSensor/MouseSensor.js\":\n/*!**********************************************************!*\\\n  !*** ./src/Draggable/Sensors/MouseSensor/MouseSensor.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _utils = __webpack_require__(/*! shared/utils */ \\\"./src/shared/utils/index.js\\\");\\n\\nvar _Sensor = __webpack_require__(/*! ../Sensor */ \\\"./src/Draggable/Sensors/Sensor/index.js\\\");\\n\\nvar _Sensor2 = _interopRequireDefault(_Sensor);\\n\\nvar _SensorEvent = __webpack_require__(/*! ../SensorEvent */ \\\"./src/Draggable/Sensors/SensorEvent/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onContextMenuWhileDragging = Symbol('onContextMenuWhileDragging');\\nconst onMouseDown = Symbol('onMouseDown');\\nconst onMouseMove = Symbol('onMouseMove');\\nconst onMouseUp = Symbol('onMouseUp');\\n\\n/**\\n * This sensor picks up native browser mouse events and dictates drag operations\\n * @class MouseSensor\\n * @module MouseSensor\\n * @extends Sensor\\n */\\nclass MouseSensor extends _Sensor2.default {\\n  /**\\n   * MouseSensor constructor.\\n   * @constructs MouseSensor\\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\\n   * @param {Object} options - Options\\n   */\\n  constructor(containers = [], options = {}) {\\n    super(containers, options);\\n\\n    /**\\n     * Indicates if mouse button is still down\\n     * @property mouseDown\\n     * @type {Boolean}\\n     */\\n    this.mouseDown = false;\\n\\n    /**\\n     * Mouse down timer which will end up triggering the drag start operation\\n     * @property mouseDownTimeout\\n     * @type {Number}\\n     */\\n    this.mouseDownTimeout = null;\\n\\n    /**\\n     * Indicates if context menu has been opened during drag operation\\n     * @property openedContextMenu\\n     * @type {Boolean}\\n     */\\n    this.openedContextMenu = false;\\n\\n    this[onContextMenuWhileDragging] = this[onContextMenuWhileDragging].bind(this);\\n    this[onMouseDown] = this[onMouseDown].bind(this);\\n    this[onMouseMove] = this[onMouseMove].bind(this);\\n    this[onMouseUp] = this[onMouseUp].bind(this);\\n  }\\n\\n  /**\\n   * Attaches sensors event listeners to the DOM\\n   */\\n  attach() {\\n    document.addEventListener('mousedown', this[onMouseDown], true);\\n  }\\n\\n  /**\\n   * Detaches sensors event listeners to the DOM\\n   */\\n  detach() {\\n    document.removeEventListener('mousedown', this[onMouseDown], true);\\n  }\\n\\n  /**\\n   * Mouse down handler\\n   * @private\\n   * @param {Event} event - Mouse down event\\n   */\\n  [onMouseDown](event) {\\n    if (event.button !== 0 || event.ctrlKey || event.metaKey) {\\n      return;\\n    }\\n\\n    document.addEventListener('mouseup', this[onMouseUp]);\\n    document.addEventListener('dragstart', preventNativeDragStart);\\n\\n    const target = document.elementFromPoint(event.clientX, event.clientY);\\n    const container = (0, _utils.closest)(target, this.containers);\\n\\n    if (!container) {\\n      return;\\n    }\\n\\n    this.mouseDown = true;\\n\\n    clearTimeout(this.mouseDownTimeout);\\n    this.mouseDownTimeout = setTimeout(() => {\\n      if (!this.mouseDown) {\\n        return;\\n      }\\n\\n      const dragStartEvent = new _SensorEvent.DragStartSensorEvent({\\n        clientX: event.clientX,\\n        clientY: event.clientY,\\n        target,\\n        container,\\n        originalEvent: event\\n      });\\n\\n      this.trigger(container, dragStartEvent);\\n\\n      this.currentContainer = container;\\n      this.dragging = !dragStartEvent.canceled();\\n\\n      if (this.dragging) {\\n        document.addEventListener('contextmenu', this[onContextMenuWhileDragging]);\\n        document.addEventListener('mousemove', this[onMouseMove]);\\n      }\\n    }, this.options.delay);\\n  }\\n\\n  /**\\n   * Mouse move handler\\n   * @private\\n   * @param {Event} event - Mouse move event\\n   */\\n  [onMouseMove](event) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    const target = document.elementFromPoint(event.clientX, event.clientY);\\n\\n    const dragMoveEvent = new _SensorEvent.DragMoveSensorEvent({\\n      clientX: event.clientX,\\n      clientY: event.clientY,\\n      target,\\n      container: this.currentContainer,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(this.currentContainer, dragMoveEvent);\\n  }\\n\\n  /**\\n   * Mouse up handler\\n   * @private\\n   * @param {Event} event - Mouse up event\\n   */\\n  [onMouseUp](event) {\\n    this.mouseDown = Boolean(this.openedContextMenu);\\n\\n    if (this.openedContextMenu) {\\n      this.openedContextMenu = false;\\n      return;\\n    }\\n\\n    document.removeEventListener('mouseup', this[onMouseUp]);\\n    document.removeEventListener('dragstart', preventNativeDragStart);\\n\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    const target = document.elementFromPoint(event.clientX, event.clientY);\\n\\n    const dragStopEvent = new _SensorEvent.DragStopSensorEvent({\\n      clientX: event.clientX,\\n      clientY: event.clientY,\\n      target,\\n      container: this.currentContainer,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(this.currentContainer, dragStopEvent);\\n\\n    document.removeEventListener('contextmenu', this[onContextMenuWhileDragging]);\\n    document.removeEventListener('mousemove', this[onMouseMove]);\\n\\n    this.currentContainer = null;\\n    this.dragging = false;\\n  }\\n\\n  /**\\n   * Context menu handler\\n   * @private\\n   * @param {Event} event - Context menu event\\n   */\\n  [onContextMenuWhileDragging](event) {\\n    event.preventDefault();\\n    this.openedContextMenu = true;\\n  }\\n}\\n\\nexports.default = MouseSensor;\\nfunction preventNativeDragStart(event) {\\n  event.preventDefault();\\n}\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/MouseSensor/MouseSensor.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/MouseSensor/index.js\":\n/*!****************************************************!*\\\n  !*** ./src/Draggable/Sensors/MouseSensor/index.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _MouseSensor = __webpack_require__(/*! ./MouseSensor */ \\\"./src/Draggable/Sensors/MouseSensor/MouseSensor.js\\\");\\n\\nvar _MouseSensor2 = _interopRequireDefault(_MouseSensor);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _MouseSensor2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/MouseSensor/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/Sensor/Sensor.js\":\n/*!************************************************!*\\\n  !*** ./src/Draggable/Sensors/Sensor/Sensor.js ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\n/**\\n * Base sensor class. Extend from this class to create a new or custom sensor\\n * @class Sensor\\n * @module Sensor\\n */\\nclass Sensor {\\n  /**\\n   * Sensor constructor.\\n   * @constructs Sensor\\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\\n   * @param {Object} options - Options\\n   */\\n  constructor(containers = [], options = {}) {\\n    /**\\n     * Current containers\\n     * @property containers\\n     * @type {HTMLElement[]}\\n     */\\n    this.containers = [...containers];\\n\\n    /**\\n     * Current options\\n     * @property options\\n     * @type {Object}\\n     */\\n    this.options = _extends({}, options);\\n\\n    /**\\n     * Current drag state\\n     * @property dragging\\n     * @type {Boolean}\\n     */\\n    this.dragging = false;\\n\\n    /**\\n     * Current container\\n     * @property currentContainer\\n     * @type {HTMLElement}\\n     */\\n    this.currentContainer = null;\\n  }\\n\\n  /**\\n   * Attaches sensors event listeners to the DOM\\n   * @return {Sensor}\\n   */\\n  attach() {\\n    return this;\\n  }\\n\\n  /**\\n   * Detaches sensors event listeners to the DOM\\n   * @return {Sensor}\\n   */\\n  detach() {\\n    return this;\\n  }\\n\\n  /**\\n   * Adds container to this sensor instance\\n   * @param {...HTMLElement} containers - Containers you want to add to this sensor\\n   * @example draggable.addContainer(document.body)\\n   */\\n  addContainer(...containers) {\\n    this.containers = [...this.containers, ...containers];\\n  }\\n\\n  /**\\n   * Removes container from this sensor instance\\n   * @param {...HTMLElement} containers - Containers you want to remove from this sensor\\n   * @example draggable.removeContainer(document.body)\\n   */\\n  removeContainer(...containers) {\\n    this.containers = this.containers.filter(container => !containers.includes(container));\\n  }\\n\\n  /**\\n   * Triggers event on target element\\n   * @param {HTMLElement} element - Element to trigger event on\\n   * @param {SensorEvent} sensorEvent - Sensor event to trigger\\n   */\\n  trigger(element, sensorEvent) {\\n    const event = document.createEvent('Event');\\n    event.detail = sensorEvent;\\n    event.initEvent(sensorEvent.type, true, true);\\n    element.dispatchEvent(event);\\n    this.lastEvent = sensorEvent;\\n\\n    return sensorEvent;\\n  }\\n}\\nexports.default = Sensor;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/Sensor/Sensor.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/Sensor/index.js\":\n/*!***********************************************!*\\\n  !*** ./src/Draggable/Sensors/Sensor/index.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _Sensor = __webpack_require__(/*! ./Sensor */ \\\"./src/Draggable/Sensors/Sensor/Sensor.js\\\");\\n\\nvar _Sensor2 = _interopRequireDefault(_Sensor);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Sensor2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/Sensor/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/SensorEvent/SensorEvent.js\":\n/*!**********************************************************!*\\\n  !*** ./src/Draggable/Sensors/SensorEvent/SensorEvent.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.DragPressureSensorEvent = exports.DragStopSensorEvent = exports.DragMoveSensorEvent = exports.DragStartSensorEvent = exports.SensorEvent = undefined;\\n\\nvar _AbstractEvent = __webpack_require__(/*! shared/AbstractEvent */ \\\"./src/shared/AbstractEvent/index.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Base sensor event\\n * @class SensorEvent\\n * @module SensorEvent\\n * @extends AbstractEvent\\n */\\nclass SensorEvent extends _AbstractEvent2.default {\\n  /**\\n   * Original browser event that triggered a sensor\\n   * @property originalEvent\\n   * @type {Event}\\n   * @readonly\\n   */\\n  get originalEvent() {\\n    return this.data.originalEvent;\\n  }\\n\\n  /**\\n   * Normalized clientX for both touch and mouse events\\n   * @property clientX\\n   * @type {Number}\\n   * @readonly\\n   */\\n  get clientX() {\\n    return this.data.clientX;\\n  }\\n\\n  /**\\n   * Normalized clientY for both touch and mouse events\\n   * @property clientY\\n   * @type {Number}\\n   * @readonly\\n   */\\n  get clientY() {\\n    return this.data.clientY;\\n  }\\n\\n  /**\\n   * Normalized target for both touch and mouse events\\n   * Returns the element that is behind cursor or touch pointer\\n   * @property target\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get target() {\\n    return this.data.target;\\n  }\\n\\n  /**\\n   * Container that initiated the sensor\\n   * @property container\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get container() {\\n    return this.data.container;\\n  }\\n\\n  /**\\n   * Trackpad pressure\\n   * @property pressure\\n   * @type {Number}\\n   * @readonly\\n   */\\n  get pressure() {\\n    return this.data.pressure;\\n  }\\n}\\n\\nexports.SensorEvent = SensorEvent; /**\\n                                    * Drag start sensor event\\n                                    * @class DragStartSensorEvent\\n                                    * @module DragStartSensorEvent\\n                                    * @extends SensorEvent\\n                                    */\\n\\nclass DragStartSensorEvent extends SensorEvent {}\\n\\nexports.DragStartSensorEvent = DragStartSensorEvent; /**\\n                                                      * Drag move sensor event\\n                                                      * @class DragMoveSensorEvent\\n                                                      * @module DragMoveSensorEvent\\n                                                      * @extends SensorEvent\\n                                                      */\\n\\nDragStartSensorEvent.type = 'drag:start';\\nclass DragMoveSensorEvent extends SensorEvent {}\\n\\nexports.DragMoveSensorEvent = DragMoveSensorEvent; /**\\n                                                    * Drag stop sensor event\\n                                                    * @class DragStopSensorEvent\\n                                                    * @module DragStopSensorEvent\\n                                                    * @extends SensorEvent\\n                                                    */\\n\\nDragMoveSensorEvent.type = 'drag:move';\\nclass DragStopSensorEvent extends SensorEvent {}\\n\\nexports.DragStopSensorEvent = DragStopSensorEvent; /**\\n                                                    * Drag pressure sensor event\\n                                                    * @class DragPressureSensorEvent\\n                                                    * @module DragPressureSensorEvent\\n                                                    * @extends SensorEvent\\n                                                    */\\n\\nDragStopSensorEvent.type = 'drag:stop';\\nclass DragPressureSensorEvent extends SensorEvent {}\\nexports.DragPressureSensorEvent = DragPressureSensorEvent;\\nDragPressureSensorEvent.type = 'drag:pressure';\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/SensorEvent/SensorEvent.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/SensorEvent/index.js\":\n/*!****************************************************!*\\\n  !*** ./src/Draggable/Sensors/SensorEvent/index.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _SensorEvent = __webpack_require__(/*! ./SensorEvent */ \\\"./src/Draggable/Sensors/SensorEvent/SensorEvent.js\\\");\\n\\nObject.keys(_SensorEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _SensorEvent[key];\\n    }\\n  });\\n});\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/SensorEvent/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/TouchSensor/TouchSensor.js\":\n/*!**********************************************************!*\\\n  !*** ./src/Draggable/Sensors/TouchSensor/TouchSensor.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _utils = __webpack_require__(/*! shared/utils */ \\\"./src/shared/utils/index.js\\\");\\n\\nvar _Sensor = __webpack_require__(/*! ../Sensor */ \\\"./src/Draggable/Sensors/Sensor/index.js\\\");\\n\\nvar _Sensor2 = _interopRequireDefault(_Sensor);\\n\\nvar _SensorEvent = __webpack_require__(/*! ../SensorEvent */ \\\"./src/Draggable/Sensors/SensorEvent/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onTouchStart = Symbol('onTouchStart');\\nconst onTouchHold = Symbol('onTouchHold');\\nconst onTouchEnd = Symbol('onTouchEnd');\\nconst onTouchMove = Symbol('onTouchMove');\\n\\n/**\\n * Prevents scrolling when set to true\\n * @var {Boolean} preventScrolling\\n */\\nlet preventScrolling = false;\\n\\n// WebKit requires cancelable `touchmove` events to be added as early as possible\\nwindow.addEventListener('touchmove', event => {\\n  if (!preventScrolling) {\\n    return;\\n  }\\n\\n  // Prevent scrolling\\n  event.preventDefault();\\n}, { passive: false });\\n\\n/**\\n * This sensor picks up native browser touch events and dictates drag operations\\n * @class TouchSensor\\n * @module TouchSensor\\n * @extends Sensor\\n */\\nclass TouchSensor extends _Sensor2.default {\\n  /**\\n   * TouchSensor constructor.\\n   * @constructs TouchSensor\\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\\n   * @param {Object} options - Options\\n   */\\n  constructor(containers = [], options = {}) {\\n    super(containers, options);\\n\\n    /**\\n     * Closest scrollable container so accidental scroll can cancel long touch\\n     * @property currentScrollableParent\\n     * @type {HTMLElement}\\n     */\\n    this.currentScrollableParent = null;\\n\\n    /**\\n     * TimeoutID for long touch\\n     * @property tapTimeout\\n     * @type {Number}\\n     */\\n    this.tapTimeout = null;\\n\\n    /**\\n     * touchMoved indicates if touch has moved during tapTimeout\\n     * @property touchMoved\\n     * @type {Boolean}\\n     */\\n    this.touchMoved = false;\\n\\n    this[onTouchStart] = this[onTouchStart].bind(this);\\n    this[onTouchHold] = this[onTouchHold].bind(this);\\n    this[onTouchEnd] = this[onTouchEnd].bind(this);\\n    this[onTouchMove] = this[onTouchMove].bind(this);\\n  }\\n\\n  /**\\n   * Attaches sensors event listeners to the DOM\\n   */\\n  attach() {\\n    document.addEventListener('touchstart', this[onTouchStart]);\\n  }\\n\\n  /**\\n   * Detaches sensors event listeners to the DOM\\n   */\\n  detach() {\\n    document.removeEventListener('touchstart', this[onTouchStart]);\\n  }\\n\\n  /**\\n   * Touch start handler\\n   * @private\\n   * @param {Event} event - Touch start event\\n   */\\n  [onTouchStart](event) {\\n    const container = (0, _utils.closest)(event.target, this.containers);\\n\\n    if (!container) {\\n      return;\\n    }\\n\\n    document.addEventListener('touchmove', this[onTouchMove]);\\n    document.addEventListener('touchend', this[onTouchEnd]);\\n    document.addEventListener('touchcancel', this[onTouchEnd]);\\n    container.addEventListener('contextmenu', onContextMenu);\\n\\n    this.currentContainer = container;\\n    this.tapTimeout = setTimeout(this[onTouchHold](event, container), this.options.delay);\\n  }\\n\\n  /**\\n   * Touch hold handler\\n   * @private\\n   * @param {Event} event - Touch start event\\n   * @param {HTMLElement} container - Container element\\n   */\\n  [onTouchHold](event, container) {\\n    return () => {\\n      if (this.touchMoved) {\\n        return;\\n      }\\n\\n      const touch = event.touches[0] || event.changedTouches[0];\\n      const target = event.target;\\n\\n      const dragStartEvent = new _SensorEvent.DragStartSensorEvent({\\n        clientX: touch.pageX,\\n        clientY: touch.pageY,\\n        target,\\n        container,\\n        originalEvent: event\\n      });\\n\\n      this.trigger(container, dragStartEvent);\\n\\n      this.dragging = !dragStartEvent.canceled();\\n      preventScrolling = this.dragging;\\n    };\\n  }\\n\\n  /**\\n   * Touch move handler\\n   * @private\\n   * @param {Event} event - Touch move event\\n   */\\n  [onTouchMove](event) {\\n    this.touchMoved = true;\\n\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    const touch = event.touches[0] || event.changedTouches[0];\\n    const target = document.elementFromPoint(touch.pageX - window.scrollX, touch.pageY - window.scrollY);\\n\\n    const dragMoveEvent = new _SensorEvent.DragMoveSensorEvent({\\n      clientX: touch.pageX,\\n      clientY: touch.pageY,\\n      target,\\n      container: this.currentContainer,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(this.currentContainer, dragMoveEvent);\\n  }\\n\\n  /**\\n   * Touch end handler\\n   * @private\\n   * @param {Event} event - Touch end event\\n   */\\n  [onTouchEnd](event) {\\n    this.touchMoved = false;\\n    preventScrolling = false;\\n\\n    document.removeEventListener('touchend', this[onTouchEnd]);\\n    document.removeEventListener('touchcancel', this[onTouchEnd]);\\n    document.removeEventListener('touchmove', this[onTouchMove]);\\n\\n    if (this.currentContainer) {\\n      this.currentContainer.removeEventListener('contextmenu', onContextMenu);\\n    }\\n\\n    clearTimeout(this.tapTimeout);\\n\\n    if (!this.dragging) {\\n      return;\\n    }\\n\\n    const touch = event.touches[0] || event.changedTouches[0];\\n    const target = document.elementFromPoint(touch.pageX - window.scrollX, touch.pageY - window.scrollY);\\n\\n    event.preventDefault();\\n\\n    const dragStopEvent = new _SensorEvent.DragStopSensorEvent({\\n      clientX: touch.pageX,\\n      clientY: touch.pageY,\\n      target,\\n      container: this.currentContainer,\\n      originalEvent: event\\n    });\\n\\n    this.trigger(this.currentContainer, dragStopEvent);\\n\\n    this.currentContainer = null;\\n    this.dragging = false;\\n  }\\n}\\n\\nexports.default = TouchSensor;\\nfunction onContextMenu(event) {\\n  event.preventDefault();\\n  event.stopPropagation();\\n}\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/TouchSensor/TouchSensor.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/TouchSensor/index.js\":\n/*!****************************************************!*\\\n  !*** ./src/Draggable/Sensors/TouchSensor/index.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _TouchSensor = __webpack_require__(/*! ./TouchSensor */ \\\"./src/Draggable/Sensors/TouchSensor/TouchSensor.js\\\");\\n\\nvar _TouchSensor2 = _interopRequireDefault(_TouchSensor);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _TouchSensor2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/TouchSensor/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/Sensors/index.js\":\n/*!****************************************!*\\\n  !*** ./src/Draggable/Sensors/index.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _Sensor = __webpack_require__(/*! ./Sensor */ \\\"./src/Draggable/Sensors/Sensor/index.js\\\");\\n\\nObject.defineProperty(exports, 'Sensor', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Sensor).default;\\n  }\\n});\\n\\nvar _MouseSensor = __webpack_require__(/*! ./MouseSensor */ \\\"./src/Draggable/Sensors/MouseSensor/index.js\\\");\\n\\nObject.defineProperty(exports, 'MouseSensor', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_MouseSensor).default;\\n  }\\n});\\n\\nvar _TouchSensor = __webpack_require__(/*! ./TouchSensor */ \\\"./src/Draggable/Sensors/TouchSensor/index.js\\\");\\n\\nObject.defineProperty(exports, 'TouchSensor', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_TouchSensor).default;\\n  }\\n});\\n\\nvar _DragSensor = __webpack_require__(/*! ./DragSensor */ \\\"./src/Draggable/Sensors/DragSensor/index.js\\\");\\n\\nObject.defineProperty(exports, 'DragSensor', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_DragSensor).default;\\n  }\\n});\\n\\nvar _ForceTouchSensor = __webpack_require__(/*! ./ForceTouchSensor */ \\\"./src/Draggable/Sensors/ForceTouchSensor/index.js\\\");\\n\\nObject.defineProperty(exports, 'ForceTouchSensor', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_ForceTouchSensor).default;\\n  }\\n});\\n\\nvar _SensorEvent = __webpack_require__(/*! ./SensorEvent */ \\\"./src/Draggable/Sensors/SensorEvent/index.js\\\");\\n\\nObject.keys(_SensorEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _SensorEvent[key];\\n    }\\n  });\\n});\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/Sensors/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Draggable/index.js\":\n/*!********************************!*\\\n  !*** ./src/Draggable/index.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _DragEvent = __webpack_require__(/*! ./DragEvent */ \\\"./src/Draggable/DragEvent/index.js\\\");\\n\\nObject.keys(_DragEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _DragEvent[key];\\n    }\\n  });\\n});\\n\\nvar _DraggableEvent = __webpack_require__(/*! ./DraggableEvent */ \\\"./src/Draggable/DraggableEvent/index.js\\\");\\n\\nObject.keys(_DraggableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _DraggableEvent[key];\\n    }\\n  });\\n});\\n\\nvar _MirrorEvent = __webpack_require__(/*! ./MirrorEvent */ \\\"./src/Draggable/MirrorEvent/index.js\\\");\\n\\nObject.keys(_MirrorEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _MirrorEvent[key];\\n    }\\n  });\\n});\\n\\nvar _Plugins = __webpack_require__(/*! ./Plugins */ \\\"./src/Draggable/Plugins/index.js\\\");\\n\\nObject.keys(_Plugins).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _Plugins[key];\\n    }\\n  });\\n});\\n\\nvar _Sensors = __webpack_require__(/*! ./Sensors */ \\\"./src/Draggable/Sensors/index.js\\\");\\n\\nObject.keys(_Sensors).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _Sensors[key];\\n    }\\n  });\\n});\\n\\nvar _Draggable = __webpack_require__(/*! ./Draggable */ \\\"./src/Draggable/Draggable.js\\\");\\n\\nvar _Draggable2 = _interopRequireDefault(_Draggable);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Draggable2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Draggable/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Droppable/Droppable.js\":\n/*!************************************!*\\\n  !*** ./src/Droppable/Droppable.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _utils = __webpack_require__(/*! shared/utils */ \\\"./src/shared/utils/index.js\\\");\\n\\nvar _Draggable = __webpack_require__(/*! ../Draggable */ \\\"./src/Draggable/index.js\\\");\\n\\nvar _Draggable2 = _interopRequireDefault(_Draggable);\\n\\nvar _DroppableEvent = __webpack_require__(/*! ./DroppableEvent */ \\\"./src/Droppable/DroppableEvent/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onDragStart = Symbol('onDragStart');\\nconst onDragMove = Symbol('onDragMove');\\nconst onDragStop = Symbol('onDragStop');\\nconst dropInDropzone = Symbol('dropInDropZone');\\nconst returnToOriginalDropzone = Symbol('returnToOriginalDropzone');\\nconst closestDropzone = Symbol('closestDropzone');\\nconst getDropzones = Symbol('getDropzones');\\n\\n/**\\n * Returns an announcement message when the Draggable element is dropped into a dropzone element\\n * @param {DroppableDroppedEvent} droppableEvent\\n * @return {String}\\n */\\nfunction onDroppableDroppedDefaultAnnouncement({ dragEvent, dropzone }) {\\n  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'draggable element';\\n  const dropzoneText = dropzone.textContent.trim() || dropzone.id || 'droppable element';\\n\\n  return `Dropped ${sourceText} into ${dropzoneText}`;\\n}\\n\\n/**\\n * Returns an announcement message when the Draggable element has returned to its original dropzone element\\n * @param {DroppableReturnedEvent} droppableEvent\\n * @return {String}\\n */\\nfunction onDroppableReturnedDefaultAnnouncement({ dragEvent, dropzone }) {\\n  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'draggable element';\\n  const dropzoneText = dropzone.textContent.trim() || dropzone.id || 'droppable element';\\n\\n  return `Returned ${sourceText} from ${dropzoneText}`;\\n}\\n\\n/**\\n * @const {Object} defaultAnnouncements\\n * @const {Function} defaultAnnouncements['droppable:dropped']\\n * @const {Function} defaultAnnouncements['droppable:returned']\\n */\\nconst defaultAnnouncements = {\\n  'droppable:dropped': onDroppableDroppedDefaultAnnouncement,\\n  'droppable:returned': onDroppableReturnedDefaultAnnouncement\\n};\\n\\nconst defaultClasses = {\\n  'droppable:active': 'draggable-dropzone--active',\\n  'droppable:occupied': 'draggable-dropzone--occupied'\\n};\\n\\nconst defaultOptions = {\\n  dropzone: '.draggable-droppable'\\n};\\n\\n/**\\n * Droppable is built on top of Draggable and allows dropping draggable elements\\n * into dropzone element\\n * @class Droppable\\n * @module Droppable\\n * @extends Draggable\\n */\\nclass Droppable extends _Draggable2.default {\\n  /**\\n   * Droppable constructor.\\n   * @constructs Droppable\\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Droppable containers\\n   * @param {Object} options - Options for Droppable\\n   */\\n  constructor(containers = [], options = {}) {\\n    super(containers, _extends({}, defaultOptions, options, {\\n      classes: _extends({}, defaultClasses, options.classes || {}),\\n      announcements: _extends({}, defaultAnnouncements, options.announcements || {})\\n    }));\\n\\n    /**\\n     * All dropzone elements on drag start\\n     * @property dropzones\\n     * @type {HTMLElement[]}\\n     */\\n    this.dropzones = null;\\n\\n    /**\\n     * Last dropzone element that the source was dropped into\\n     * @property lastDropzone\\n     * @type {HTMLElement}\\n     */\\n    this.lastDropzone = null;\\n\\n    /**\\n     * Initial dropzone element that the source was drag from\\n     * @property initialDropzone\\n     * @type {HTMLElement}\\n     */\\n    this.initialDropzone = null;\\n\\n    this[onDragStart] = this[onDragStart].bind(this);\\n    this[onDragMove] = this[onDragMove].bind(this);\\n    this[onDragStop] = this[onDragStop].bind(this);\\n\\n    this.on('drag:start', this[onDragStart]).on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]);\\n  }\\n\\n  /**\\n   * Destroys Droppable instance.\\n   */\\n  destroy() {\\n    super.destroy();\\n\\n    this.off('drag:start', this[onDragStart]).off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]);\\n  }\\n\\n  /**\\n   * Drag start handler\\n   * @private\\n   * @param {DragStartEvent} event - Drag start event\\n   */\\n  [onDragStart](event) {\\n    if (event.canceled()) {\\n      return;\\n    }\\n\\n    this.dropzones = [...this[getDropzones]()];\\n    const dropzone = (0, _utils.closest)(event.sensorEvent.target, this.options.dropzone);\\n\\n    if (!dropzone) {\\n      event.cancel();\\n      return;\\n    }\\n\\n    const droppableStartEvent = new _DroppableEvent.DroppableStartEvent({\\n      dragEvent: event,\\n      dropzone\\n    });\\n\\n    this.trigger(droppableStartEvent);\\n\\n    if (droppableStartEvent.canceled()) {\\n      event.cancel();\\n      return;\\n    }\\n\\n    this.initialDropzone = dropzone;\\n\\n    for (const dropzoneElement of this.dropzones) {\\n      if (dropzoneElement.classList.contains(this.getClassNameFor('droppable:occupied'))) {\\n        continue;\\n      }\\n\\n      dropzoneElement.classList.add(this.getClassNameFor('droppable:active'));\\n    }\\n  }\\n\\n  /**\\n   * Drag move handler\\n   * @private\\n   * @param {DragMoveEvent} event - Drag move event\\n   */\\n  [onDragMove](event) {\\n    if (event.canceled()) {\\n      return;\\n    }\\n\\n    const dropzone = this[closestDropzone](event.sensorEvent.target);\\n    const overEmptyDropzone = dropzone && !dropzone.classList.contains(this.getClassNameFor('droppable:occupied'));\\n\\n    if (overEmptyDropzone && this[dropInDropzone](event, dropzone)) {\\n      this.lastDropzone = dropzone;\\n    } else if ((!dropzone || dropzone === this.initialDropzone) && this.lastDropzone) {\\n      this[returnToOriginalDropzone](event);\\n      this.lastDropzone = null;\\n    }\\n  }\\n\\n  /**\\n   * Drag stop handler\\n   * @private\\n   * @param {DragStopEvent} event - Drag stop event\\n   */\\n  [onDragStop](event) {\\n    const droppableStopEvent = new _DroppableEvent.DroppableStopEvent({\\n      dragEvent: event,\\n      dropzone: this.lastDropzone || this.initialDropzone\\n    });\\n\\n    this.trigger(droppableStopEvent);\\n\\n    const occupiedClass = this.getClassNameFor('droppable:occupied');\\n\\n    for (const dropzone of this.dropzones) {\\n      dropzone.classList.remove(this.getClassNameFor('droppable:active'));\\n    }\\n\\n    if (this.lastDropzone && this.lastDropzone !== this.initialDropzone) {\\n      this.initialDropzone.classList.remove(occupiedClass);\\n    }\\n\\n    this.dropzones = null;\\n    this.lastDropzone = null;\\n    this.initialDropzone = null;\\n  }\\n\\n  /**\\n   * Drops a draggable element into a dropzone element\\n   * @private\\n   * @param {DragMoveEvent} event - Drag move event\\n   * @param {HTMLElement} dropzone - Dropzone element to drop draggable into\\n   */\\n  [dropInDropzone](event, dropzone) {\\n    const droppableDroppedEvent = new _DroppableEvent.DroppableDroppedEvent({\\n      dragEvent: event,\\n      dropzone\\n    });\\n\\n    this.trigger(droppableDroppedEvent);\\n\\n    if (droppableDroppedEvent.canceled()) {\\n      return false;\\n    }\\n\\n    const occupiedClass = this.getClassNameFor('droppable:occupied');\\n\\n    if (this.lastDropzone) {\\n      this.lastDropzone.classList.remove(occupiedClass);\\n    }\\n\\n    dropzone.appendChild(event.source);\\n    dropzone.classList.add(occupiedClass);\\n\\n    return true;\\n  }\\n\\n  /**\\n   * Moves the previously dropped element back into its original dropzone\\n   * @private\\n   * @param {DragMoveEvent} event - Drag move event\\n   */\\n  [returnToOriginalDropzone](event) {\\n    const droppableReturnedEvent = new _DroppableEvent.DroppableReturnedEvent({\\n      dragEvent: event,\\n      dropzone: this.lastDropzone\\n    });\\n\\n    this.trigger(droppableReturnedEvent);\\n\\n    if (droppableReturnedEvent.canceled()) {\\n      return;\\n    }\\n\\n    this.initialDropzone.appendChild(event.source);\\n    this.lastDropzone.classList.remove(this.getClassNameFor('droppable:occupied'));\\n  }\\n\\n  /**\\n   * Returns closest dropzone element for even target\\n   * @private\\n   * @param {HTMLElement} target - Event target\\n   * @return {HTMLElement|null}\\n   */\\n  [closestDropzone](target) {\\n    if (!this.dropzones) {\\n      return null;\\n    }\\n\\n    return (0, _utils.closest)(target, this.dropzones);\\n  }\\n\\n  /**\\n   * Returns all current dropzone elements for this draggable instance\\n   * @private\\n   * @return {NodeList|HTMLElement[]|Array}\\n   */\\n  [getDropzones]() {\\n    const dropzone = this.options.dropzone;\\n\\n    if (typeof dropzone === 'string') {\\n      return document.querySelectorAll(dropzone);\\n    } else if (dropzone instanceof NodeList || dropzone instanceof Array) {\\n      return dropzone;\\n    } else if (typeof dropzone === 'function') {\\n      return dropzone();\\n    } else {\\n      return [];\\n    }\\n  }\\n}\\nexports.default = Droppable;\\n\\n//# sourceURL=webpack://Draggable/./src/Droppable/Droppable.js?\");\n\n/***/ }),\n\n/***/ \"./src/Droppable/DroppableEvent/DroppableEvent.js\":\n/*!********************************************************!*\\\n  !*** ./src/Droppable/DroppableEvent/DroppableEvent.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.DroppableStopEvent = exports.DroppableReturnedEvent = exports.DroppableDroppedEvent = exports.DroppableStartEvent = exports.DroppableEvent = undefined;\\n\\nvar _AbstractEvent = __webpack_require__(/*! shared/AbstractEvent */ \\\"./src/shared/AbstractEvent/index.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Base droppable event\\n * @class DroppableEvent\\n * @module DroppableEvent\\n * @extends AbstractEvent\\n */\\nclass DroppableEvent extends _AbstractEvent2.default {\\n\\n  /**\\n   * Original drag event that triggered this droppable event\\n   * @property dragEvent\\n   * @type {DragEvent}\\n   * @readonly\\n   */\\n  get dragEvent() {\\n    return this.data.dragEvent;\\n  }\\n}\\n\\nexports.DroppableEvent = DroppableEvent; /**\\n                                          * Droppable start event\\n                                          * @class DroppableStartEvent\\n                                          * @module DroppableStartEvent\\n                                          * @extends DroppableEvent\\n                                          */\\n\\nDroppableEvent.type = 'droppable';\\nclass DroppableStartEvent extends DroppableEvent {\\n\\n  /**\\n   * The initial dropzone element of the currently dragging draggable element\\n   * @property dropzone\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get dropzone() {\\n    return this.data.dropzone;\\n  }\\n}\\n\\nexports.DroppableStartEvent = DroppableStartEvent; /**\\n                                                    * Droppable dropped event\\n                                                    * @class DroppableDroppedEvent\\n                                                    * @module DroppableDroppedEvent\\n                                                    * @extends DroppableEvent\\n                                                    */\\n\\nDroppableStartEvent.type = 'droppable:start';\\nDroppableStartEvent.cancelable = true;\\nclass DroppableDroppedEvent extends DroppableEvent {\\n\\n  /**\\n   * The dropzone element you dropped the draggable element into\\n   * @property dropzone\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get dropzone() {\\n    return this.data.dropzone;\\n  }\\n}\\n\\nexports.DroppableDroppedEvent = DroppableDroppedEvent; /**\\n                                                        * Droppable returned event\\n                                                        * @class DroppableReturnedEvent\\n                                                        * @module DroppableReturnedEvent\\n                                                        * @extends DroppableEvent\\n                                                        */\\n\\nDroppableDroppedEvent.type = 'droppable:dropped';\\nDroppableDroppedEvent.cancelable = true;\\nclass DroppableReturnedEvent extends DroppableEvent {\\n\\n  /**\\n   * The dropzone element you dragged away from\\n   * @property dropzone\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get dropzone() {\\n    return this.data.dropzone;\\n  }\\n}\\n\\nexports.DroppableReturnedEvent = DroppableReturnedEvent; /**\\n                                                          * Droppable stop event\\n                                                          * @class DroppableStopEvent\\n                                                          * @module DroppableStopEvent\\n                                                          * @extends DroppableEvent\\n                                                          */\\n\\nDroppableReturnedEvent.type = 'droppable:returned';\\nDroppableReturnedEvent.cancelable = true;\\nclass DroppableStopEvent extends DroppableEvent {\\n\\n  /**\\n   * The final dropzone element of the draggable element\\n   * @property dropzone\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get dropzone() {\\n    return this.data.dropzone;\\n  }\\n}\\nexports.DroppableStopEvent = DroppableStopEvent;\\nDroppableStopEvent.type = 'droppable:stop';\\nDroppableStopEvent.cancelable = true;\\n\\n//# sourceURL=webpack://Draggable/./src/Droppable/DroppableEvent/DroppableEvent.js?\");\n\n/***/ }),\n\n/***/ \"./src/Droppable/DroppableEvent/index.js\":\n/*!***********************************************!*\\\n  !*** ./src/Droppable/DroppableEvent/index.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _DroppableEvent = __webpack_require__(/*! ./DroppableEvent */ \\\"./src/Droppable/DroppableEvent/DroppableEvent.js\\\");\\n\\nObject.keys(_DroppableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _DroppableEvent[key];\\n    }\\n  });\\n});\\n\\n//# sourceURL=webpack://Draggable/./src/Droppable/DroppableEvent/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Droppable/index.js\":\n/*!********************************!*\\\n  !*** ./src/Droppable/index.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _DroppableEvent = __webpack_require__(/*! ./DroppableEvent */ \\\"./src/Droppable/DroppableEvent/index.js\\\");\\n\\nObject.keys(_DroppableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _DroppableEvent[key];\\n    }\\n  });\\n});\\n\\nvar _Droppable = __webpack_require__(/*! ./Droppable */ \\\"./src/Droppable/Droppable.js\\\");\\n\\nvar _Droppable2 = _interopRequireDefault(_Droppable);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Droppable2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Droppable/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/Collidable/Collidable.js\":\n/*!**********************************************!*\\\n  !*** ./src/Plugins/Collidable/Collidable.js ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _AbstractPlugin = __webpack_require__(/*! shared/AbstractPlugin */ \\\"./src/shared/AbstractPlugin/index.js\\\");\\n\\nvar _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\\n\\nvar _utils = __webpack_require__(/*! shared/utils */ \\\"./src/shared/utils/index.js\\\");\\n\\nvar _CollidableEvent = __webpack_require__(/*! ./CollidableEvent */ \\\"./src/Plugins/Collidable/CollidableEvent/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onDragMove = Symbol('onDragMove');\\nconst onDragStop = Symbol('onDragStop');\\nconst onRequestAnimationFrame = Symbol('onRequestAnimationFrame');\\n\\n/**\\n * Collidable plugin which detects colliding elements while dragging\\n * @class Collidable\\n * @module Collidable\\n * @extends AbstractPlugin\\n */\\nclass Collidable extends _AbstractPlugin2.default {\\n  /**\\n   * Collidable constructor.\\n   * @constructs Collidable\\n   * @param {Draggable} draggable - Draggable instance\\n   */\\n  constructor(draggable) {\\n    super(draggable);\\n\\n    /**\\n     * Keeps track of currently colliding elements\\n     * @property {HTMLElement|null} currentlyCollidingElement\\n     * @type {HTMLElement|null}\\n     */\\n    this.currentlyCollidingElement = null;\\n\\n    /**\\n     * Keeps track of currently colliding elements\\n     * @property {HTMLElement|null} lastCollidingElement\\n     * @type {HTMLElement|null}\\n     */\\n    this.lastCollidingElement = null;\\n\\n    /**\\n     * Animation frame for finding colliding elements\\n     * @property {Number|null} currentAnimationFrame\\n     * @type {Number|null}\\n     */\\n    this.currentAnimationFrame = null;\\n\\n    this[onDragMove] = this[onDragMove].bind(this);\\n    this[onDragStop] = this[onDragStop].bind(this);\\n    this[onRequestAnimationFrame] = this[onRequestAnimationFrame].bind(this);\\n  }\\n\\n  /**\\n   * Attaches plugins event listeners\\n   */\\n  attach() {\\n    this.draggable.on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]);\\n  }\\n\\n  /**\\n   * Detaches plugins event listeners\\n   */\\n  detach() {\\n    this.draggable.off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]);\\n  }\\n\\n  /**\\n   * Returns current collidables based on `collidables` option\\n   * @return {HTMLElement[]}\\n   */\\n  getCollidables() {\\n    const collidables = this.draggable.options.collidables;\\n\\n    if (typeof collidables === 'string') {\\n      return Array.prototype.slice.call(document.querySelectorAll(collidables));\\n    } else if (collidables instanceof NodeList || collidables instanceof Array) {\\n      return Array.prototype.slice.call(collidables);\\n    } else if (collidables instanceof HTMLElement) {\\n      return [collidables];\\n    } else if (typeof collidables === 'function') {\\n      return collidables();\\n    } else {\\n      return [];\\n    }\\n  }\\n\\n  /**\\n   * Drag move handler\\n   * @private\\n   * @param {DragMoveEvent} event - Drag move event\\n   */\\n  [onDragMove](event) {\\n    const target = event.sensorEvent.target;\\n\\n    this.currentAnimationFrame = requestAnimationFrame(this[onRequestAnimationFrame](target));\\n\\n    if (this.currentlyCollidingElement) {\\n      event.cancel();\\n    }\\n\\n    const collidableInEvent = new _CollidableEvent.CollidableInEvent({\\n      dragEvent: event,\\n      collidingElement: this.currentlyCollidingElement\\n    });\\n\\n    const collidableOutEvent = new _CollidableEvent.CollidableOutEvent({\\n      dragEvent: event,\\n      collidingElement: this.lastCollidingElement\\n    });\\n\\n    const enteringCollidable = Boolean(this.currentlyCollidingElement && this.lastCollidingElement !== this.currentlyCollidingElement);\\n    const leavingCollidable = Boolean(!this.currentlyCollidingElement && this.lastCollidingElement);\\n\\n    if (enteringCollidable) {\\n      if (this.lastCollidingElement) {\\n        this.draggable.trigger(collidableOutEvent);\\n      }\\n\\n      this.draggable.trigger(collidableInEvent);\\n    } else if (leavingCollidable) {\\n      this.draggable.trigger(collidableOutEvent);\\n    }\\n\\n    this.lastCollidingElement = this.currentlyCollidingElement;\\n  }\\n\\n  /**\\n   * Drag stop handler\\n   * @private\\n   * @param {DragStopEvent} event - Drag stop event\\n   */\\n  [onDragStop](event) {\\n    const lastCollidingElement = this.currentlyCollidingElement || this.lastCollidingElement;\\n    const collidableOutEvent = new _CollidableEvent.CollidableOutEvent({\\n      dragEvent: event,\\n      collidingElement: lastCollidingElement\\n    });\\n\\n    if (lastCollidingElement) {\\n      this.draggable.trigger(collidableOutEvent);\\n    }\\n\\n    this.lastCollidingElement = null;\\n    this.currentlyCollidingElement = null;\\n  }\\n\\n  /**\\n   * Animation frame function\\n   * @private\\n   * @param {HTMLElement} target - Current move target\\n   * @return {Function}\\n   */\\n  [onRequestAnimationFrame](target) {\\n    return () => {\\n      const collidables = this.getCollidables();\\n      this.currentlyCollidingElement = (0, _utils.closest)(target, element => collidables.includes(element));\\n    };\\n  }\\n}\\nexports.default = Collidable;\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/Collidable/Collidable.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/Collidable/CollidableEvent/CollidableEvent.js\":\n/*!*******************************************************************!*\\\n  !*** ./src/Plugins/Collidable/CollidableEvent/CollidableEvent.js ***!\n  \\*******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CollidableOutEvent = exports.CollidableInEvent = exports.CollidableEvent = undefined;\\n\\nvar _AbstractEvent = __webpack_require__(/*! shared/AbstractEvent */ \\\"./src/shared/AbstractEvent/index.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Base collidable event\\n * @class CollidableEvent\\n * @module CollidableEvent\\n * @extends AbstractEvent\\n */\\nclass CollidableEvent extends _AbstractEvent2.default {\\n\\n  /**\\n   * Drag event that triggered this colliable event\\n   * @property dragEvent\\n   * @type {DragEvent}\\n   * @readonly\\n   */\\n  get dragEvent() {\\n    return this.data.dragEvent;\\n  }\\n}\\n\\nexports.CollidableEvent = CollidableEvent; /**\\n                                            * Collidable in event\\n                                            * @class CollidableInEvent\\n                                            * @module CollidableInEvent\\n                                            * @extends CollidableEvent\\n                                            */\\n\\nCollidableEvent.type = 'collidable';\\nclass CollidableInEvent extends CollidableEvent {\\n\\n  /**\\n   * Element you are currently colliding with\\n   * @property collidingElement\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get collidingElement() {\\n    return this.data.collidingElement;\\n  }\\n}\\n\\nexports.CollidableInEvent = CollidableInEvent; /**\\n                                                * Collidable out event\\n                                                * @class CollidableOutEvent\\n                                                * @module CollidableOutEvent\\n                                                * @extends CollidableEvent\\n                                                */\\n\\nCollidableInEvent.type = 'collidable:in';\\nclass CollidableOutEvent extends CollidableEvent {\\n\\n  /**\\n   * Element you were previously colliding with\\n   * @property collidingElement\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get collidingElement() {\\n    return this.data.collidingElement;\\n  }\\n}\\nexports.CollidableOutEvent = CollidableOutEvent;\\nCollidableOutEvent.type = 'collidable:out';\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/Collidable/CollidableEvent/CollidableEvent.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/Collidable/CollidableEvent/index.js\":\n/*!*********************************************************!*\\\n  !*** ./src/Plugins/Collidable/CollidableEvent/index.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _CollidableEvent = __webpack_require__(/*! ./CollidableEvent */ \\\"./src/Plugins/Collidable/CollidableEvent/CollidableEvent.js\\\");\\n\\nObject.keys(_CollidableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _CollidableEvent[key];\\n    }\\n  });\\n});\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/Collidable/CollidableEvent/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/Collidable/index.js\":\n/*!*****************************************!*\\\n  !*** ./src/Plugins/Collidable/index.js ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _CollidableEvent = __webpack_require__(/*! ./CollidableEvent */ \\\"./src/Plugins/Collidable/CollidableEvent/index.js\\\");\\n\\nObject.keys(_CollidableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _CollidableEvent[key];\\n    }\\n  });\\n});\\n\\nvar _Collidable = __webpack_require__(/*! ./Collidable */ \\\"./src/Plugins/Collidable/Collidable.js\\\");\\n\\nvar _Collidable2 = _interopRequireDefault(_Collidable);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Collidable2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/Collidable/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/Snappable/Snappable.js\":\n/*!********************************************!*\\\n  !*** ./src/Plugins/Snappable/Snappable.js ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _AbstractPlugin = __webpack_require__(/*! shared/AbstractPlugin */ \\\"./src/shared/AbstractPlugin/index.js\\\");\\n\\nvar _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\\n\\nvar _SnappableEvent = __webpack_require__(/*! ./SnappableEvent */ \\\"./src/Plugins/Snappable/SnappableEvent/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onDragStart = Symbol('onDragStart');\\nconst onDragStop = Symbol('onDragStop');\\nconst onDragOver = Symbol('onDragOver');\\nconst onDragOut = Symbol('onDragOut');\\n\\n/**\\n * Snappable plugin which snaps draggable elements into place\\n * @class Snappable\\n * @module Snappable\\n * @extends AbstractPlugin\\n */\\nclass Snappable extends _AbstractPlugin2.default {\\n  /**\\n   * Snappable constructor.\\n   * @constructs Snappable\\n   * @param {Draggable} draggable - Draggable instance\\n   */\\n  constructor(draggable) {\\n    super(draggable);\\n\\n    /**\\n     * Keeps track of the first source element\\n     * @property {HTMLElement|null} firstSource\\n     * @type {HTMLElement|null}\\n     */\\n    this.firstSource = null;\\n\\n    this[onDragStart] = this[onDragStart].bind(this);\\n    this[onDragStop] = this[onDragStop].bind(this);\\n    this[onDragOver] = this[onDragOver].bind(this);\\n    this[onDragOut] = this[onDragOut].bind(this);\\n  }\\n\\n  /**\\n   * Attaches plugins event listeners\\n   */\\n  attach() {\\n    this.draggable.on('drag:start', this[onDragStart]).on('drag:stop', this[onDragStop]).on('drag:over', this[onDragOver]).on('drag:out', this[onDragOut]).on('droppable:over', this[onDragOver]).on('droppable:out', this[onDragOut]);\\n  }\\n\\n  /**\\n   * Detaches plugins event listeners\\n   */\\n  detach() {\\n    this.draggable.off('drag:start', this[onDragStart]).off('drag:stop', this[onDragStop]).off('drag:over', this[onDragOver]).off('drag:out', this[onDragOut]).off('droppable:over', this[onDragOver]).off('droppable:out', this[onDragOut]);\\n  }\\n\\n  /**\\n   * Drag start handler\\n   * @private\\n   * @param {DragStartEvent} event - Drag start event\\n   */\\n  [onDragStart](event) {\\n    if (event.canceled()) {\\n      return;\\n    }\\n\\n    this.firstSource = event.source;\\n  }\\n\\n  /**\\n   * Drag stop handler\\n   * @private\\n   * @param {DragStopEvent} event - Drag stop event\\n   */\\n  [onDragStop]() {\\n    this.firstSource = null;\\n  }\\n\\n  /**\\n   * Drag over handler\\n   * @private\\n   * @param {DragOverEvent|DroppableOverEvent} event - Drag over event\\n   */\\n  [onDragOver](event) {\\n    if (event.canceled()) {\\n      return;\\n    }\\n\\n    const source = event.source || event.dragEvent.source;\\n    const mirror = event.mirror || event.dragEvent.mirror;\\n\\n    if (source === this.firstSource) {\\n      this.firstSource = null;\\n      return;\\n    }\\n\\n    const snapInEvent = new _SnappableEvent.SnapInEvent({\\n      dragEvent: event,\\n      snappable: event.over || event.droppable\\n    });\\n\\n    this.draggable.trigger(snapInEvent);\\n\\n    if (snapInEvent.canceled()) {\\n      return;\\n    }\\n\\n    if (mirror) {\\n      mirror.style.display = 'none';\\n    }\\n\\n    source.classList.remove(this.draggable.getClassNameFor('source:dragging'));\\n    source.classList.add(this.draggable.getClassNameFor('source:placed'));\\n\\n    // Need to cancel this in drag out\\n    setTimeout(() => {\\n      source.classList.remove(this.draggable.getClassNameFor('source:placed'));\\n    }, this.draggable.options.placedTimeout);\\n  }\\n\\n  /**\\n   * Drag out handler\\n   * @private\\n   * @param {DragOutEvent|DroppableOutEvent} event - Drag out event\\n   */\\n  [onDragOut](event) {\\n    if (event.canceled()) {\\n      return;\\n    }\\n\\n    const mirror = event.mirror || event.dragEvent.mirror;\\n    const source = event.source || event.dragEvent.source;\\n\\n    const snapOutEvent = new _SnappableEvent.SnapOutEvent({\\n      dragEvent: event,\\n      snappable: event.over || event.droppable\\n    });\\n\\n    this.draggable.trigger(snapOutEvent);\\n\\n    if (snapOutEvent.canceled()) {\\n      return;\\n    }\\n\\n    if (mirror) {\\n      mirror.style.display = '';\\n    }\\n\\n    source.classList.add(this.draggable.getClassNameFor('source:dragging'));\\n  }\\n}\\nexports.default = Snappable;\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/Snappable/Snappable.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/Snappable/SnappableEvent/SnappableEvent.js\":\n/*!****************************************************************!*\\\n  !*** ./src/Plugins/Snappable/SnappableEvent/SnappableEvent.js ***!\n  \\****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.SnapOutEvent = exports.SnapInEvent = exports.SnapEvent = undefined;\\n\\nvar _AbstractEvent = __webpack_require__(/*! shared/AbstractEvent */ \\\"./src/shared/AbstractEvent/index.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Base snap event\\n * @class SnapEvent\\n * @module SnapEvent\\n * @extends AbstractEvent\\n */\\nclass SnapEvent extends _AbstractEvent2.default {\\n\\n  /**\\n   * Drag event that triggered this snap event\\n   * @property dragEvent\\n   * @type {DragEvent}\\n   * @readonly\\n   */\\n  get dragEvent() {\\n    return this.data.dragEvent;\\n  }\\n\\n  /**\\n   * Snappable element\\n   * @property snappable\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get snappable() {\\n    return this.data.snappable;\\n  }\\n}\\n\\nexports.SnapEvent = SnapEvent; /**\\n                                * Snap in event\\n                                * @class SnapInEvent\\n                                * @module SnapInEvent\\n                                * @extends SnapEvent\\n                                */\\n\\nSnapEvent.type = 'snap';\\nclass SnapInEvent extends SnapEvent {}\\n\\nexports.SnapInEvent = SnapInEvent; /**\\n                                    * Snap out event\\n                                    * @class SnapOutEvent\\n                                    * @module SnapOutEvent\\n                                    * @extends SnapEvent\\n                                    */\\n\\nSnapInEvent.type = 'snap:in';\\nSnapInEvent.cancelable = true;\\nclass SnapOutEvent extends SnapEvent {}\\nexports.SnapOutEvent = SnapOutEvent;\\nSnapOutEvent.type = 'snap:out';\\nSnapOutEvent.cancelable = true;\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/Snappable/SnappableEvent/SnappableEvent.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/Snappable/SnappableEvent/index.js\":\n/*!*******************************************************!*\\\n  !*** ./src/Plugins/Snappable/SnappableEvent/index.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _SnappableEvent = __webpack_require__(/*! ./SnappableEvent */ \\\"./src/Plugins/Snappable/SnappableEvent/SnappableEvent.js\\\");\\n\\nObject.keys(_SnappableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _SnappableEvent[key];\\n    }\\n  });\\n});\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/Snappable/SnappableEvent/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/Snappable/index.js\":\n/*!****************************************!*\\\n  !*** ./src/Plugins/Snappable/index.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _SnappableEvent = __webpack_require__(/*! ./SnappableEvent */ \\\"./src/Plugins/Snappable/SnappableEvent/index.js\\\");\\n\\nObject.keys(_SnappableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _SnappableEvent[key];\\n    }\\n  });\\n});\\n\\nvar _Snappable = __webpack_require__(/*! ./Snappable */ \\\"./src/Plugins/Snappable/Snappable.js\\\");\\n\\nvar _Snappable2 = _interopRequireDefault(_Snappable);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Snappable2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/Snappable/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/SwapAnimation/SwapAnimation.js\":\n/*!****************************************************!*\\\n  !*** ./src/Plugins/SwapAnimation/SwapAnimation.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.defaultOptions = undefined;\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _AbstractPlugin = __webpack_require__(/*! shared/AbstractPlugin */ \\\"./src/shared/AbstractPlugin/index.js\\\");\\n\\nvar _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onSortableSorted = Symbol('onSortableSorted');\\n\\n/**\\n * SwapAnimation default options\\n * @property {Object} defaultOptions\\n * @property {Number} defaultOptions.duration\\n * @property {String} defaultOptions.easingFunction\\n * @type {Object}\\n */\\nconst defaultOptions = exports.defaultOptions = {\\n  duration: 150,\\n  easingFunction: 'ease-in-out'\\n};\\n\\n/**\\n * SwapAnimation plugin adds swap animations for sortable\\n * @class SwapAnimation\\n * @module SwapAnimation\\n * @extends AbstractPlugin\\n */\\nclass SwapAnimation extends _AbstractPlugin2.default {\\n  /**\\n   * SwapAnimation constructor.\\n   * @constructs SwapAnimation\\n   * @param {Draggable} draggable - Draggable instance\\n   */\\n  constructor(draggable) {\\n    super(draggable);\\n\\n    /**\\n     * SwapAnimation options\\n     * @property {Object} options\\n     * @property {Number} defaultOptions.duration\\n     * @property {String} defaultOptions.easingFunction\\n     * @type {Object}\\n     */\\n    this.options = _extends({}, defaultOptions, this.getOptions());\\n\\n    /**\\n     * Last animation frame\\n     * @property {Number} lastAnimationFrame\\n     * @type {Number}\\n     */\\n    this.lastAnimationFrame = null;\\n\\n    this[onSortableSorted] = this[onSortableSorted].bind(this);\\n  }\\n\\n  /**\\n   * Attaches plugins event listeners\\n   */\\n  attach() {\\n    this.draggable.on('sortable:sorted', this[onSortableSorted]);\\n  }\\n\\n  /**\\n   * Detaches plugins event listeners\\n   */\\n  detach() {\\n    this.draggable.off('sortable:sorted', this[onSortableSorted]);\\n  }\\n\\n  /**\\n   * Returns options passed through draggable\\n   * @return {Object}\\n   */\\n  getOptions() {\\n    return this.draggable.options.swapAnimation || {};\\n  }\\n\\n  /**\\n   * Sortable sorted handler\\n   * @param {SortableSortedEvent} sortableEvent\\n   * @private\\n   */\\n  [onSortableSorted]({ oldIndex, newIndex, dragEvent }) {\\n    const { source, over } = dragEvent;\\n\\n    cancelAnimationFrame(this.lastAnimationFrame);\\n\\n    // Can be done in a separate frame\\n    this.lastAnimationFrame = requestAnimationFrame(() => {\\n      if (oldIndex >= newIndex) {\\n        animate(source, over, this.options);\\n      } else {\\n        animate(over, source, this.options);\\n      }\\n    });\\n  }\\n}\\n\\nexports.default = SwapAnimation; /**\\n                                  * Animates two elements\\n                                  * @param {HTMLElement} top\\n                                  * @param {HTMLElement} bottom\\n                                  * @param {Object} options\\n                                  * @param {Number} options.duration\\n                                  * @param {String} options.easingFunction\\n                                  * @private\\n                                  */\\n\\nfunction animate(top, bottom, { duration, easingFunction }) {\\n  const height = top.offsetHeight;\\n\\n  for (const element of [top, bottom]) {\\n    element.style.pointerEvents = 'none';\\n  }\\n\\n  top.style.transform = `translate3d(0, ${height}px, 0)`;\\n  bottom.style.transform = `translate3d(0, -${height}px, 0)`;\\n\\n  requestAnimationFrame(() => {\\n    for (const element of [top, bottom]) {\\n      element.addEventListener('transitionend', resetElementOnTransitionEnd);\\n      element.style.transition = `transform ${duration}ms ${easingFunction}`;\\n      element.style.transform = '';\\n    }\\n  });\\n}\\n\\n/**\\n * Resets animation style properties after animation has completed\\n * @param {Event} event\\n * @private\\n */\\nfunction resetElementOnTransitionEnd(event) {\\n  event.target.style.transition = '';\\n  event.target.style.pointerEvents = '';\\n  event.target.removeEventListener('transitionend', resetElementOnTransitionEnd);\\n}\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/SwapAnimation/SwapAnimation.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/SwapAnimation/index.js\":\n/*!********************************************!*\\\n  !*** ./src/Plugins/SwapAnimation/index.js ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.defaultOptions = undefined;\\n\\nvar _SwapAnimation = __webpack_require__(/*! ./SwapAnimation */ \\\"./src/Plugins/SwapAnimation/SwapAnimation.js\\\");\\n\\nvar _SwapAnimation2 = _interopRequireDefault(_SwapAnimation);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _SwapAnimation2.default;\\nexports.defaultOptions = _SwapAnimation.defaultOptions;\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/SwapAnimation/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Plugins/index.js\":\n/*!******************************!*\\\n  !*** ./src/Plugins/index.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _Collidable = __webpack_require__(/*! ./Collidable */ \\\"./src/Plugins/Collidable/index.js\\\");\\n\\nObject.defineProperty(exports, 'Collidable', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Collidable).default;\\n  }\\n});\\n\\nvar _Snappable = __webpack_require__(/*! ./Snappable */ \\\"./src/Plugins/Snappable/index.js\\\");\\n\\nObject.defineProperty(exports, 'Snappable', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Snappable).default;\\n  }\\n});\\n\\nvar _SwapAnimation = __webpack_require__(/*! ./SwapAnimation */ \\\"./src/Plugins/SwapAnimation/index.js\\\");\\n\\nObject.defineProperty(exports, 'SwapAnimation', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_SwapAnimation).default;\\n  }\\n});\\nObject.defineProperty(exports, 'defaultSwapAnimationOptions', {\\n  enumerable: true,\\n  get: function () {\\n    return _SwapAnimation.defaultOptions;\\n  }\\n});\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n//# sourceURL=webpack://Draggable/./src/Plugins/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Sortable/Sortable.js\":\n/*!**********************************!*\\\n  !*** ./src/Sortable/Sortable.js ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _Draggable = __webpack_require__(/*! ../Draggable */ \\\"./src/Draggable/index.js\\\");\\n\\nvar _Draggable2 = _interopRequireDefault(_Draggable);\\n\\nvar _SortableEvent = __webpack_require__(/*! ./SortableEvent */ \\\"./src/Sortable/SortableEvent/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onDragStart = Symbol('onDragStart');\\nconst onDragOverContainer = Symbol('onDragOverContainer');\\nconst onDragOver = Symbol('onDragOver');\\nconst onDragStop = Symbol('onDragStop');\\n\\n/**\\n * Returns announcement message when a Draggable element has been sorted with another Draggable element\\n * or moved into a new container\\n * @param {SortableSortedEvent} sortableEvent\\n * @return {String}\\n */\\nfunction onSortableSortedDefaultAnnouncement({ dragEvent }) {\\n  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'sortable element';\\n\\n  if (dragEvent.over) {\\n    const overText = dragEvent.over.textContent.trim() || dragEvent.over.id || 'sortable element';\\n    const isFollowing = dragEvent.source.compareDocumentPosition(dragEvent.over) & Node.DOCUMENT_POSITION_FOLLOWING;\\n\\n    if (isFollowing) {\\n      return `Placed ${sourceText} after ${overText}`;\\n    } else {\\n      return `Placed ${sourceText} before ${overText}`;\\n    }\\n  } else {\\n    // need to figure out how to compute container name\\n    return `Placed ${sourceText} into a different container`;\\n  }\\n}\\n\\n/**\\n * @const {Object} defaultAnnouncements\\n * @const {Function} defaultAnnouncements['sortable:sorted']\\n */\\nconst defaultAnnouncements = {\\n  'sortable:sorted': onSortableSortedDefaultAnnouncement\\n};\\n\\n/**\\n * Sortable is built on top of Draggable and allows sorting of draggable elements. Sortable will keep\\n * track of the original index and emits the new index as you drag over draggable elements.\\n * @class Sortable\\n * @module Sortable\\n * @extends Draggable\\n */\\nclass Sortable extends _Draggable2.default {\\n  /**\\n   * Sortable constructor.\\n   * @constructs Sortable\\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Sortable containers\\n   * @param {Object} options - Options for Sortable\\n   */\\n  constructor(containers = [], options = {}) {\\n    super(containers, _extends({}, options, {\\n      announcements: _extends({}, defaultAnnouncements, options.announcements || {})\\n    }));\\n\\n    /**\\n     * start index of source on drag start\\n     * @property startIndex\\n     * @type {Number}\\n     */\\n    this.startIndex = null;\\n\\n    /**\\n     * start container on drag start\\n     * @property startContainer\\n     * @type {HTMLElement}\\n     * @default null\\n     */\\n    this.startContainer = null;\\n\\n    this[onDragStart] = this[onDragStart].bind(this);\\n    this[onDragOverContainer] = this[onDragOverContainer].bind(this);\\n    this[onDragOver] = this[onDragOver].bind(this);\\n    this[onDragStop] = this[onDragStop].bind(this);\\n\\n    this.on('drag:start', this[onDragStart]).on('drag:over:container', this[onDragOverContainer]).on('drag:over', this[onDragOver]).on('drag:stop', this[onDragStop]);\\n  }\\n\\n  /**\\n   * Destroys Sortable instance.\\n   */\\n  destroy() {\\n    super.destroy();\\n\\n    this.off('drag:start', this[onDragStart]).off('drag:over:container', this[onDragOverContainer]).off('drag:over', this[onDragOver]).off('drag:stop', this[onDragStop]);\\n  }\\n\\n  /**\\n   * Returns true index of element within its container during drag operation, i.e. excluding mirror and original source\\n   * @param {HTMLElement} element - An element\\n   * @return {Number}\\n   */\\n  index(element) {\\n    return this.getDraggableElementsForContainer(element.parentNode).indexOf(element);\\n  }\\n\\n  /**\\n   * Drag start handler\\n   * @private\\n   * @param {DragStartEvent} event - Drag start event\\n   */\\n  [onDragStart](event) {\\n    this.startContainer = event.source.parentNode;\\n    this.startIndex = this.index(event.source);\\n\\n    const sortableStartEvent = new _SortableEvent.SortableStartEvent({\\n      dragEvent: event,\\n      startIndex: this.startIndex,\\n      startContainer: this.startContainer\\n    });\\n\\n    this.trigger(sortableStartEvent);\\n\\n    if (sortableStartEvent.canceled()) {\\n      event.cancel();\\n    }\\n  }\\n\\n  /**\\n   * Drag over container handler\\n   * @private\\n   * @param {DragOverContainerEvent} event - Drag over container event\\n   */\\n  [onDragOverContainer](event) {\\n    if (event.canceled()) {\\n      return;\\n    }\\n\\n    const { source, over, overContainer } = event;\\n    const oldIndex = this.index(source);\\n\\n    const sortableSortEvent = new _SortableEvent.SortableSortEvent({\\n      dragEvent: event,\\n      currentIndex: oldIndex,\\n      source,\\n      over\\n    });\\n\\n    this.trigger(sortableSortEvent);\\n\\n    if (sortableSortEvent.canceled()) {\\n      return;\\n    }\\n\\n    const children = this.getDraggableElementsForContainer(overContainer);\\n    const moves = move({ source, over, overContainer, children });\\n\\n    if (!moves) {\\n      return;\\n    }\\n\\n    const { oldContainer, newContainer } = moves;\\n    const newIndex = this.index(event.source);\\n\\n    const sortableSortedEvent = new _SortableEvent.SortableSortedEvent({\\n      dragEvent: event,\\n      oldIndex,\\n      newIndex,\\n      oldContainer,\\n      newContainer\\n    });\\n\\n    this.trigger(sortableSortedEvent);\\n  }\\n\\n  /**\\n   * Drag over handler\\n   * @private\\n   * @param {DragOverEvent} event - Drag over event\\n   */\\n  [onDragOver](event) {\\n    if (event.over === event.originalSource || event.over === event.source) {\\n      return;\\n    }\\n\\n    const { source, over, overContainer } = event;\\n    const oldIndex = this.index(source);\\n\\n    const sortableSortEvent = new _SortableEvent.SortableSortEvent({\\n      dragEvent: event,\\n      currentIndex: oldIndex,\\n      source,\\n      over\\n    });\\n\\n    this.trigger(sortableSortEvent);\\n\\n    if (sortableSortEvent.canceled()) {\\n      return;\\n    }\\n\\n    const children = this.getDraggableElementsForContainer(overContainer);\\n    const moves = move({ source, over, overContainer, children });\\n\\n    if (!moves) {\\n      return;\\n    }\\n\\n    const { oldContainer, newContainer } = moves;\\n    const newIndex = this.index(source);\\n\\n    const sortableSortedEvent = new _SortableEvent.SortableSortedEvent({\\n      dragEvent: event,\\n      oldIndex,\\n      newIndex,\\n      oldContainer,\\n      newContainer\\n    });\\n\\n    this.trigger(sortableSortedEvent);\\n  }\\n\\n  /**\\n   * Drag stop handler\\n   * @private\\n   * @param {DragStopEvent} event - Drag stop event\\n   */\\n  [onDragStop](event) {\\n    const sortableStopEvent = new _SortableEvent.SortableStopEvent({\\n      dragEvent: event,\\n      oldIndex: this.startIndex,\\n      newIndex: this.index(event.source),\\n      oldContainer: this.startContainer,\\n      newContainer: event.source.parentNode\\n    });\\n\\n    this.trigger(sortableStopEvent);\\n\\n    this.startIndex = null;\\n    this.startContainer = null;\\n  }\\n}\\n\\nexports.default = Sortable;\\nfunction index(element) {\\n  return Array.prototype.indexOf.call(element.parentNode.children, element);\\n}\\n\\nfunction move({ source, over, overContainer, children }) {\\n  const emptyOverContainer = !children.length;\\n  const differentContainer = source.parentNode !== overContainer;\\n  const sameContainer = over && !differentContainer;\\n\\n  if (emptyOverContainer) {\\n    return moveInsideEmptyContainer(source, overContainer);\\n  } else if (sameContainer) {\\n    return moveWithinContainer(source, over);\\n  } else if (differentContainer) {\\n    return moveOutsideContainer(source, over, overContainer);\\n  } else {\\n    return null;\\n  }\\n}\\n\\nfunction moveInsideEmptyContainer(source, overContainer) {\\n  const oldContainer = source.parentNode;\\n\\n  overContainer.appendChild(source);\\n\\n  return { oldContainer, newContainer: overContainer };\\n}\\n\\nfunction moveWithinContainer(source, over) {\\n  const oldIndex = index(source);\\n  const newIndex = index(over);\\n\\n  if (oldIndex < newIndex) {\\n    source.parentNode.insertBefore(source, over.nextElementSibling);\\n  } else {\\n    source.parentNode.insertBefore(source, over);\\n  }\\n\\n  return { oldContainer: source.parentNode, newContainer: source.parentNode };\\n}\\n\\nfunction moveOutsideContainer(source, over, overContainer) {\\n  const oldContainer = source.parentNode;\\n\\n  if (over) {\\n    over.parentNode.insertBefore(source, over);\\n  } else {\\n    // need to figure out proper position\\n    overContainer.appendChild(source);\\n  }\\n\\n  return { oldContainer, newContainer: source.parentNode };\\n}\\n\\n//# sourceURL=webpack://Draggable/./src/Sortable/Sortable.js?\");\n\n/***/ }),\n\n/***/ \"./src/Sortable/SortableEvent/SortableEvent.js\":\n/*!*****************************************************!*\\\n  !*** ./src/Sortable/SortableEvent/SortableEvent.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.SortableStopEvent = exports.SortableSortedEvent = exports.SortableSortEvent = exports.SortableStartEvent = exports.SortableEvent = undefined;\\n\\nvar _AbstractEvent = __webpack_require__(/*! shared/AbstractEvent */ \\\"./src/shared/AbstractEvent/index.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Base sortable event\\n * @class SortableEvent\\n * @module SortableEvent\\n * @extends AbstractEvent\\n */\\nclass SortableEvent extends _AbstractEvent2.default {\\n\\n  /**\\n   * Original drag event that triggered this sortable event\\n   * @property dragEvent\\n   * @type {DragEvent}\\n   * @readonly\\n   */\\n  get dragEvent() {\\n    return this.data.dragEvent;\\n  }\\n}\\n\\nexports.SortableEvent = SortableEvent; /**\\n                                        * Sortable start event\\n                                        * @class SortableStartEvent\\n                                        * @module SortableStartEvent\\n                                        * @extends SortableEvent\\n                                        */\\n\\nSortableEvent.type = 'sortable';\\nclass SortableStartEvent extends SortableEvent {\\n\\n  /**\\n   * Start index of source on sortable start\\n   * @property startIndex\\n   * @type {Number}\\n   * @readonly\\n   */\\n  get startIndex() {\\n    return this.data.startIndex;\\n  }\\n\\n  /**\\n   * Start container on sortable start\\n   * @property startContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get startContainer() {\\n    return this.data.startContainer;\\n  }\\n}\\n\\nexports.SortableStartEvent = SortableStartEvent; /**\\n                                                  * Sortable sort event\\n                                                  * @class SortableSortEvent\\n                                                  * @module SortableSortEvent\\n                                                  * @extends SortableEvent\\n                                                  */\\n\\nSortableStartEvent.type = 'sortable:start';\\nSortableStartEvent.cancelable = true;\\nclass SortableSortEvent extends SortableEvent {\\n\\n  /**\\n   * Index of current draggable element\\n   * @property currentIndex\\n   * @type {Number}\\n   * @readonly\\n   */\\n  get currentIndex() {\\n    return this.data.currentIndex;\\n  }\\n\\n  /**\\n   * Draggable element you are hovering over\\n   * @property over\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get over() {\\n    return this.data.oldIndex;\\n  }\\n\\n  /**\\n   * Draggable container element you are hovering over\\n   * @property overContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get overContainer() {\\n    return this.data.newIndex;\\n  }\\n}\\n\\nexports.SortableSortEvent = SortableSortEvent; /**\\n                                                * Sortable sorted event\\n                                                * @class SortableSortedEvent\\n                                                * @module SortableSortedEvent\\n                                                * @extends SortableEvent\\n                                                */\\n\\nSortableSortEvent.type = 'sortable:sort';\\nSortableSortEvent.cancelable = true;\\nclass SortableSortedEvent extends SortableEvent {\\n\\n  /**\\n   * Index of last sorted event\\n   * @property oldIndex\\n   * @type {Number}\\n   * @readonly\\n   */\\n  get oldIndex() {\\n    return this.data.oldIndex;\\n  }\\n\\n  /**\\n   * New index of this sorted event\\n   * @property newIndex\\n   * @type {Number}\\n   * @readonly\\n   */\\n  get newIndex() {\\n    return this.data.newIndex;\\n  }\\n\\n  /**\\n   * Old container of draggable element\\n   * @property oldContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get oldContainer() {\\n    return this.data.oldContainer;\\n  }\\n\\n  /**\\n   * New container of draggable element\\n   * @property newContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get newContainer() {\\n    return this.data.newContainer;\\n  }\\n}\\n\\nexports.SortableSortedEvent = SortableSortedEvent; /**\\n                                                    * Sortable stop event\\n                                                    * @class SortableStopEvent\\n                                                    * @module SortableStopEvent\\n                                                    * @extends SortableEvent\\n                                                    */\\n\\nSortableSortedEvent.type = 'sortable:sorted';\\nclass SortableStopEvent extends SortableEvent {\\n\\n  /**\\n   * Original index on sortable start\\n   * @property oldIndex\\n   * @type {Number}\\n   * @readonly\\n   */\\n  get oldIndex() {\\n    return this.data.oldIndex;\\n  }\\n\\n  /**\\n   * New index of draggable element\\n   * @property newIndex\\n   * @type {Number}\\n   * @readonly\\n   */\\n  get newIndex() {\\n    return this.data.newIndex;\\n  }\\n\\n  /**\\n   * Original container of draggable element\\n   * @property oldContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get oldContainer() {\\n    return this.data.oldContainer;\\n  }\\n\\n  /**\\n   * New container of draggable element\\n   * @property newContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get newContainer() {\\n    return this.data.newContainer;\\n  }\\n}\\nexports.SortableStopEvent = SortableStopEvent;\\nSortableStopEvent.type = 'sortable:stop';\\n\\n//# sourceURL=webpack://Draggable/./src/Sortable/SortableEvent/SortableEvent.js?\");\n\n/***/ }),\n\n/***/ \"./src/Sortable/SortableEvent/index.js\":\n/*!*********************************************!*\\\n  !*** ./src/Sortable/SortableEvent/index.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _SortableEvent = __webpack_require__(/*! ./SortableEvent */ \\\"./src/Sortable/SortableEvent/SortableEvent.js\\\");\\n\\nObject.keys(_SortableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _SortableEvent[key];\\n    }\\n  });\\n});\\n\\n//# sourceURL=webpack://Draggable/./src/Sortable/SortableEvent/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Sortable/index.js\":\n/*!*******************************!*\\\n  !*** ./src/Sortable/index.js ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _SortableEvent = __webpack_require__(/*! ./SortableEvent */ \\\"./src/Sortable/SortableEvent/index.js\\\");\\n\\nObject.keys(_SortableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _SortableEvent[key];\\n    }\\n  });\\n});\\n\\nvar _Sortable = __webpack_require__(/*! ./Sortable */ \\\"./src/Sortable/Sortable.js\\\");\\n\\nvar _Sortable2 = _interopRequireDefault(_Sortable);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Sortable2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Sortable/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Swappable/Swappable.js\":\n/*!************************************!*\\\n  !*** ./src/Swappable/Swappable.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _Draggable = __webpack_require__(/*! ../Draggable */ \\\"./src/Draggable/index.js\\\");\\n\\nvar _Draggable2 = _interopRequireDefault(_Draggable);\\n\\nvar _SwappableEvent = __webpack_require__(/*! ./SwappableEvent */ \\\"./src/Swappable/SwappableEvent/index.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nconst onDragStart = Symbol('onDragStart');\\nconst onDragOver = Symbol('onDragOver');\\nconst onDragStop = Symbol('onDragStop');\\n\\n/**\\n * Returns an announcement message when the Draggable element is swapped with another draggable element\\n * @param {SwappableSwappedEvent} swappableEvent\\n * @return {String}\\n */\\nfunction onSwappableSwappedDefaultAnnouncement({ dragEvent, swappedElement }) {\\n  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'swappable element';\\n  const overText = swappedElement.textContent.trim() || swappedElement.id || 'swappable element';\\n\\n  return `Swapped ${sourceText} with ${overText}`;\\n}\\n\\n/**\\n * @const {Object} defaultAnnouncements\\n * @const {Function} defaultAnnouncements['swappabled:swapped']\\n */\\nconst defaultAnnouncements = {\\n  'swappabled:swapped': onSwappableSwappedDefaultAnnouncement\\n};\\n\\n/**\\n * Swappable is built on top of Draggable and allows swapping of draggable elements.\\n * Order is irrelevant to Swappable.\\n * @class Swappable\\n * @module Swappable\\n * @extends Draggable\\n */\\nclass Swappable extends _Draggable2.default {\\n  /**\\n   * Swappable constructor.\\n   * @constructs Swappable\\n   * @param {HTMLElement[]|NodeList|HTMLElement} containers - Swappable containers\\n   * @param {Object} options - Options for Swappable\\n   */\\n  constructor(containers = [], options = {}) {\\n    super(containers, _extends({}, options, {\\n      announcements: _extends({}, defaultAnnouncements, options.announcements || {})\\n    }));\\n\\n    /**\\n     * Last draggable element that was dragged over\\n     * @property lastOver\\n     * @type {HTMLElement}\\n     */\\n    this.lastOver = null;\\n\\n    this[onDragStart] = this[onDragStart].bind(this);\\n    this[onDragOver] = this[onDragOver].bind(this);\\n    this[onDragStop] = this[onDragStop].bind(this);\\n\\n    this.on('drag:start', this[onDragStart]).on('drag:over', this[onDragOver]).on('drag:stop', this[onDragStop]);\\n  }\\n\\n  /**\\n   * Destroys Swappable instance.\\n   */\\n  destroy() {\\n    super.destroy();\\n\\n    this.off('drag:start', this._onDragStart).off('drag:over', this._onDragOver).off('drag:stop', this._onDragStop);\\n  }\\n\\n  /**\\n   * Drag start handler\\n   * @private\\n   * @param {DragStartEvent} event - Drag start event\\n   */\\n  [onDragStart](event) {\\n    const swappableStartEvent = new _SwappableEvent.SwappableStartEvent({\\n      dragEvent: event\\n    });\\n\\n    this.trigger(swappableStartEvent);\\n\\n    if (swappableStartEvent.canceled()) {\\n      event.cancel();\\n    }\\n  }\\n\\n  /**\\n   * Drag over handler\\n   * @private\\n   * @param {DragOverEvent} event - Drag over event\\n   */\\n  [onDragOver](event) {\\n    if (event.over === event.originalSource || event.over === event.source || event.canceled()) {\\n      return;\\n    }\\n\\n    const swappableSwapEvent = new _SwappableEvent.SwappableSwapEvent({\\n      dragEvent: event,\\n      over: event.over,\\n      overContainer: event.overContainer\\n    });\\n\\n    this.trigger(swappableSwapEvent);\\n\\n    if (swappableSwapEvent.canceled()) {\\n      return;\\n    }\\n\\n    // swap originally swapped element back\\n    if (this.lastOver && this.lastOver !== event.over) {\\n      swap(this.lastOver, event.source);\\n    }\\n\\n    if (this.lastOver === event.over) {\\n      this.lastOver = null;\\n    } else {\\n      this.lastOver = event.over;\\n    }\\n\\n    swap(event.source, event.over);\\n\\n    const swappableSwappedEvent = new _SwappableEvent.SwappableSwappedEvent({\\n      dragEvent: event,\\n      swappedElement: event.over\\n    });\\n\\n    this.trigger(swappableSwappedEvent);\\n  }\\n\\n  /**\\n   * Drag stop handler\\n   * @private\\n   * @param {DragStopEvent} event - Drag stop event\\n   */\\n  [onDragStop](event) {\\n    const swappableStopEvent = new _SwappableEvent.SwappableStopEvent({\\n      dragEvent: event\\n    });\\n\\n    this.trigger(swappableStopEvent);\\n    this.lastOver = null;\\n  }\\n}\\n\\nexports.default = Swappable;\\nfunction withTempElement(callback) {\\n  const tmpElement = document.createElement('div');\\n  callback(tmpElement);\\n  tmpElement.parentNode.removeChild(tmpElement);\\n}\\n\\nfunction swap(source, over) {\\n  const overParent = over.parentNode;\\n  const sourceParent = source.parentNode;\\n\\n  withTempElement(tmpElement => {\\n    sourceParent.insertBefore(tmpElement, source);\\n    overParent.insertBefore(source, over);\\n    sourceParent.insertBefore(over, tmpElement);\\n  });\\n}\\n\\n//# sourceURL=webpack://Draggable/./src/Swappable/Swappable.js?\");\n\n/***/ }),\n\n/***/ \"./src/Swappable/SwappableEvent/SwappableEvent.js\":\n/*!********************************************************!*\\\n  !*** ./src/Swappable/SwappableEvent/SwappableEvent.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.SwappableStopEvent = exports.SwappableSwappedEvent = exports.SwappableSwapEvent = exports.SwappableStartEvent = exports.SwappableEvent = undefined;\\n\\nvar _AbstractEvent = __webpack_require__(/*! shared/AbstractEvent */ \\\"./src/shared/AbstractEvent/index.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Base swappable event\\n * @class SwappableEvent\\n * @module SwappableEvent\\n * @extends AbstractEvent\\n */\\nclass SwappableEvent extends _AbstractEvent2.default {\\n\\n  /**\\n   * Original drag event that triggered this swappable event\\n   * @property dragEvent\\n   * @type {DragEvent}\\n   * @readonly\\n   */\\n  get dragEvent() {\\n    return this.data.dragEvent;\\n  }\\n}\\n\\nexports.SwappableEvent = SwappableEvent; /**\\n                                          * Swappable start event\\n                                          * @class SwappableStartEvent\\n                                          * @module SwappableStartEvent\\n                                          * @extends SwappableEvent\\n                                          */\\n\\nSwappableEvent.type = 'swappable';\\nclass SwappableStartEvent extends SwappableEvent {}\\n\\nexports.SwappableStartEvent = SwappableStartEvent; /**\\n                                                    * Swappable swap event\\n                                                    * @class SwappableSwapEvent\\n                                                    * @module SwappableSwapEvent\\n                                                    * @extends SwappableEvent\\n                                                    */\\n\\nSwappableStartEvent.type = 'swappable:start';\\nSwappableStartEvent.cancelable = true;\\nclass SwappableSwapEvent extends SwappableEvent {\\n\\n  /**\\n   * Draggable element you are over\\n   * @property over\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get over() {\\n    return this.data.over;\\n  }\\n\\n  /**\\n   * Draggable container you are over\\n   * @property overContainer\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get overContainer() {\\n    return this.data.overContainer;\\n  }\\n}\\n\\nexports.SwappableSwapEvent = SwappableSwapEvent; /**\\n                                                  * Swappable swapped event\\n                                                  * @class SwappableSwappedEvent\\n                                                  * @module SwappableSwappedEvent\\n                                                  * @extends SwappableEvent\\n                                                  */\\n\\nSwappableSwapEvent.type = 'swappable:swap';\\nSwappableSwapEvent.cancelable = true;\\nclass SwappableSwappedEvent extends SwappableEvent {\\n\\n  /**\\n   * The draggable element that you swapped with\\n   * @property swappedElement\\n   * @type {HTMLElement}\\n   * @readonly\\n   */\\n  get swappedElement() {\\n    return this.data.swappedElement;\\n  }\\n}\\n\\nexports.SwappableSwappedEvent = SwappableSwappedEvent; /**\\n                                                        * Swappable stop event\\n                                                        * @class SwappableStopEvent\\n                                                        * @module SwappableStopEvent\\n                                                        * @extends SwappableEvent\\n                                                        */\\n\\nSwappableSwappedEvent.type = 'swappable:swapped';\\nclass SwappableStopEvent extends SwappableEvent {}\\nexports.SwappableStopEvent = SwappableStopEvent;\\nSwappableStopEvent.type = 'swappable:stop';\\n\\n//# sourceURL=webpack://Draggable/./src/Swappable/SwappableEvent/SwappableEvent.js?\");\n\n/***/ }),\n\n/***/ \"./src/Swappable/SwappableEvent/index.js\":\n/*!***********************************************!*\\\n  !*** ./src/Swappable/SwappableEvent/index.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _SwappableEvent = __webpack_require__(/*! ./SwappableEvent */ \\\"./src/Swappable/SwappableEvent/SwappableEvent.js\\\");\\n\\nObject.keys(_SwappableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _SwappableEvent[key];\\n    }\\n  });\\n});\\n\\n//# sourceURL=webpack://Draggable/./src/Swappable/SwappableEvent/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/Swappable/index.js\":\n/*!********************************!*\\\n  !*** ./src/Swappable/index.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _SwappableEvent = __webpack_require__(/*! ./SwappableEvent */ \\\"./src/Swappable/SwappableEvent/index.js\\\");\\n\\nObject.keys(_SwappableEvent).forEach(function (key) {\\n  if (key === \\\"default\\\" || key === \\\"__esModule\\\") return;\\n  Object.defineProperty(exports, key, {\\n    enumerable: true,\\n    get: function () {\\n      return _SwappableEvent[key];\\n    }\\n  });\\n});\\n\\nvar _Swappable = __webpack_require__(/*! ./Swappable */ \\\"./src/Swappable/Swappable.js\\\");\\n\\nvar _Swappable2 = _interopRequireDefault(_Swappable);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _Swappable2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/Swappable/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Plugins = exports.Sensors = exports.Sortable = exports.Swappable = exports.Droppable = exports.Draggable = exports.BasePlugin = exports.BaseEvent = undefined;\\n\\nvar _Draggable = __webpack_require__(/*! ./Draggable */ \\\"./src/Draggable/index.js\\\");\\n\\nObject.defineProperty(exports, 'Draggable', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Draggable).default;\\n  }\\n});\\n\\nvar _Droppable = __webpack_require__(/*! ./Droppable */ \\\"./src/Droppable/index.js\\\");\\n\\nObject.defineProperty(exports, 'Droppable', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Droppable).default;\\n  }\\n});\\n\\nvar _Swappable = __webpack_require__(/*! ./Swappable */ \\\"./src/Swappable/index.js\\\");\\n\\nObject.defineProperty(exports, 'Swappable', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Swappable).default;\\n  }\\n});\\n\\nvar _Sortable = __webpack_require__(/*! ./Sortable */ \\\"./src/Sortable/index.js\\\");\\n\\nObject.defineProperty(exports, 'Sortable', {\\n  enumerable: true,\\n  get: function () {\\n    return _interopRequireDefault(_Sortable).default;\\n  }\\n});\\n\\nvar _AbstractEvent = __webpack_require__(/*! shared/AbstractEvent */ \\\"./src/shared/AbstractEvent/index.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nvar _AbstractPlugin = __webpack_require__(/*! shared/AbstractPlugin */ \\\"./src/shared/AbstractPlugin/index.js\\\");\\n\\nvar _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\\n\\nvar _Sensors = __webpack_require__(/*! ./Draggable/Sensors */ \\\"./src/Draggable/Sensors/index.js\\\");\\n\\nvar Sensors = _interopRequireWildcard(_Sensors);\\n\\nvar _Plugins = __webpack_require__(/*! ./Plugins */ \\\"./src/Plugins/index.js\\\");\\n\\nvar Plugins = _interopRequireWildcard(_Plugins);\\n\\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.BaseEvent = _AbstractEvent2.default;\\nexports.BasePlugin = _AbstractPlugin2.default;\\nexports.Sensors = Sensors;\\nexports.Plugins = Plugins;\\n\\n//# sourceURL=webpack://Draggable/./src/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/shared/AbstractEvent/AbstractEvent.js\":\n/*!***************************************************!*\\\n  !*** ./src/shared/AbstractEvent/AbstractEvent.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nconst canceled = Symbol('canceled');\\n\\n/**\\n * All events fired by draggable inherit this class. You can call `cancel()` to\\n * cancel a specific event or you can check if an event has been canceled by\\n * calling `canceled()`.\\n * @abstract\\n * @class AbstractEvent\\n * @module AbstractEvent\\n */\\nclass AbstractEvent {\\n\\n  /**\\n   * AbstractEvent constructor.\\n   * @constructs AbstractEvent\\n   * @param {object} data - Event data\\n   */\\n\\n  /**\\n   * Event type\\n   * @static\\n   * @abstract\\n   * @property type\\n   * @type {String}\\n   */\\n  constructor(data) {\\n    this[canceled] = false;\\n    this.data = data;\\n  }\\n\\n  /**\\n   * Read-only type\\n   * @abstract\\n   * @return {String}\\n   */\\n\\n\\n  /**\\n   * Event cancelable\\n   * @static\\n   * @abstract\\n   * @property cancelable\\n   * @type {Boolean}\\n   */\\n  get type() {\\n    return this.constructor.type;\\n  }\\n\\n  /**\\n   * Read-only cancelable\\n   * @abstract\\n   * @return {Boolean}\\n   */\\n  get cancelable() {\\n    return this.constructor.cancelable;\\n  }\\n\\n  /**\\n   * Cancels the event instance\\n   * @abstract\\n   */\\n  cancel() {\\n    this[canceled] = true;\\n  }\\n\\n  /**\\n   * Check if event has been canceled\\n   * @abstract\\n   * @return {Boolean}\\n   */\\n  canceled() {\\n    return Boolean(this[canceled]);\\n  }\\n}\\nexports.default = AbstractEvent;\\nAbstractEvent.type = 'event';\\nAbstractEvent.cancelable = false;\\n\\n//# sourceURL=webpack://Draggable/./src/shared/AbstractEvent/AbstractEvent.js?\");\n\n/***/ }),\n\n/***/ \"./src/shared/AbstractEvent/index.js\":\n/*!*******************************************!*\\\n  !*** ./src/shared/AbstractEvent/index.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _AbstractEvent = __webpack_require__(/*! ./AbstractEvent */ \\\"./src/shared/AbstractEvent/AbstractEvent.js\\\");\\n\\nvar _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _AbstractEvent2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/shared/AbstractEvent/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/shared/AbstractPlugin/AbstractPlugin.js\":\n/*!*****************************************************!*\\\n  !*** ./src/shared/AbstractPlugin/AbstractPlugin.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n/**\\n * All draggable plugins inherit from this class.\\n * @abstract\\n * @class AbstractPlugin\\n * @module AbstractPlugin\\n */\\nclass AbstractPlugin {\\n  /**\\n   * AbstractPlugin constructor.\\n   * @constructs AbstractPlugin\\n   * @param {Draggable} draggable - Draggable instance\\n   */\\n  constructor(draggable) {\\n    /**\\n     * Draggable instance\\n     * @property draggable\\n     * @type {Draggable}\\n     */\\n    this.draggable = draggable;\\n  }\\n\\n  /**\\n   * Override to add listeners\\n   * @abstract\\n   */\\n  attach() {\\n    throw new Error('Not Implemented');\\n  }\\n\\n  /**\\n   * Override to remove listeners\\n   * @abstract\\n   */\\n  detach() {\\n    throw new Error('Not Implemented');\\n  }\\n}\\nexports.default = AbstractPlugin;\\n\\n//# sourceURL=webpack://Draggable/./src/shared/AbstractPlugin/AbstractPlugin.js?\");\n\n/***/ }),\n\n/***/ \"./src/shared/AbstractPlugin/index.js\":\n/*!********************************************!*\\\n  !*** ./src/shared/AbstractPlugin/index.js ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _AbstractPlugin = __webpack_require__(/*! ./AbstractPlugin */ \\\"./src/shared/AbstractPlugin/AbstractPlugin.js\\\");\\n\\nvar _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _AbstractPlugin2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/shared/AbstractPlugin/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/shared/utils/closest/closest.js\":\n/*!*********************************************!*\\\n  !*** ./src/shared/utils/closest/closest.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = closest;\\nconst matchFunction = Element.prototype.matches || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector;\\n\\n/**\\n * Get the closest parent element of a given element that matches the given\\n * selector string or matching function\\n *\\n * @param {Element} element The child element to find a parent of\\n * @param {String|Function} selector The string or function to use to match\\n *     the parent element\\n * @return {Element|null}\\n */\\nfunction closest(element, value) {\\n  if (!element) {\\n    return null;\\n  }\\n\\n  const selector = value;\\n  const callback = value;\\n  const nodeList = value;\\n  const singleElement = value;\\n\\n  const isSelector = Boolean(typeof value === 'string');\\n  const isFunction = Boolean(typeof value === 'function');\\n  const isNodeList = Boolean(value instanceof NodeList || value instanceof Array);\\n  const isElement = Boolean(value instanceof HTMLElement);\\n\\n  function conditionFn(currentElement) {\\n    if (!currentElement) {\\n      return currentElement;\\n    } else if (isSelector) {\\n      return matchFunction.call(currentElement, selector);\\n    } else if (isNodeList) {\\n      return [...nodeList].includes(currentElement);\\n    } else if (isElement) {\\n      return singleElement === currentElement;\\n    } else if (isFunction) {\\n      return callback(currentElement);\\n    } else {\\n      return null;\\n    }\\n  }\\n\\n  let current = element;\\n\\n  do {\\n    current = current.correspondingUseElement || current.correspondingElement || current;\\n\\n    if (conditionFn(current)) {\\n      return current;\\n    }\\n\\n    current = current.parentNode;\\n  } while (current && current !== document.body && current !== document);\\n\\n  return null;\\n}\\n\\n//# sourceURL=webpack://Draggable/./src/shared/utils/closest/closest.js?\");\n\n/***/ }),\n\n/***/ \"./src/shared/utils/closest/index.js\":\n/*!*******************************************!*\\\n  !*** ./src/shared/utils/closest/index.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _closest = __webpack_require__(/*! ./closest */ \\\"./src/shared/utils/closest/closest.js\\\");\\n\\nvar _closest2 = _interopRequireDefault(_closest);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.default = _closest2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/shared/utils/closest/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/shared/utils/index.js\":\n/*!***********************************!*\\\n  !*** ./src/shared/utils/index.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.closest = undefined;\\n\\nvar _closest = __webpack_require__(/*! ./closest */ \\\"./src/shared/utils/closest/index.js\\\");\\n\\nvar _closest2 = _interopRequireDefault(_closest);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nexports.closest = _closest2.default;\\n\\n//# sourceURL=webpack://Draggable/./src/shared/utils/index.js?\");\n\n/***/ })\n\n/******/ });\n});","// eslint-disable-next-line import/no-unresolved\nimport {Sortable, Plugins} from '@shopify/draggable';\n\nexport default function PluginsSwapAnimation() {\n  const containers = document.querySelectorAll('#SwapAnimation .BlockLayout');\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const sortable = new Sortable(containers, {\n    draggable: '.Block--isDraggable',\n    mirror: {\n      constrainDimensions: true,\n    },\n    plugins: [Plugins.SwapAnimation],\n    swapAnimation: {\n      duration: 200,\n      easingFunction: 'ease-in-out',\n    },\n  });\n\n  return sortable;\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Swappable, Plugins} from '@shopify/draggable';\n\nexport default function PluginsSnappable() {\n  const containerSelector = '#Snappable .BlockLayout';\n  const containers = document.querySelectorAll(containerSelector);\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const swappable = new Swappable(containers, {\n    appendTo: containerSelector,\n    mirror: {\n      constrainDimensions: true,\n    },\n    plugins: [Plugins.Snappable],\n  });\n\n  // --- Draggable events --- //\n  swappable.on('drag:start', (evt) => {\n    if (evt.originalSource.classList.contains('Block--typeStripes')) {\n      evt.cancel();\n    }\n  });\n\n  return swappable;\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Droppable, Plugins} from '@shopify/draggable';\n\nexport default function PluginsCollidable() {\n  const containerSelector = '#Collidable .BlockLayout';\n  const containers = document.querySelectorAll(containerSelector);\n  const wallClass = 'CollidableWall';\n  const walls = document.querySelectorAll(`.${wallClass}`);\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const droppable = new Droppable(containers, {\n    draggable: '.Block--isDraggable',\n    dropzone: '.BlockWrapper--isDropzone',\n    collidables: '.CollidableObstacle',\n    appendTo: containerSelector,\n    mirror: {\n      constrainDimensions: true,\n    },\n    plugins: [Plugins.Collidable],\n  });\n\n  // --- Draggable events --- //\n  droppable.on('collidable:in', ({collidingElement}) => {\n    if (collidingElement.classList.contains(wallClass)) {\n      walls.forEach((wall) => wall.classList.add('isColliding'));\n    } else {\n      collidingElement.classList.add('isColliding');\n    }\n  });\n\n  droppable.on('collidable:out', ({collidingElement}) => {\n    if (collidingElement.classList.contains(wallClass)) {\n      walls.forEach((wall) => wall.classList.remove('isColliding'));\n    } else {\n      collidingElement.classList.remove('isColliding');\n    }\n  });\n\n  return droppable;\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Swappable} from '@shopify/draggable';\n\nexport default function GridLayout() {\n  const containerSelector = '#GridLayout .BlockLayout';\n  const containers = document.querySelectorAll(containerSelector);\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const swappable = new Swappable(containers, {\n    draggable: '.Block--isDraggable',\n    appendTo: containerSelector,\n    mirror: {\n      constrainDimensions: true,\n    },\n  });\n\n  return swappable;\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Swappable} from '@shopify/draggable';\n\nexport default function Floated() {\n  const containers = document.querySelectorAll('#Floated .BlockLayout');\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const swappable = new Swappable(containers, {\n    draggable: '.Block--isDraggable',\n    mirror: {\n      constrainDimensions: true,\n    },\n  });\n\n  return swappable;\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Swappable} from '@shopify/draggable';\n\nexport default function Flexbox() {\n  const containers = document.querySelectorAll('#Flexbox .BlockLayout');\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const swappable = new Swappable(containers, {\n    draggable: '.Block--isDraggable',\n    mirror: {\n      constrainDimensions: true,\n    },\n  });\n\n  return swappable;\n}\n","export default function matchMirrorSize(dragEvent, draggableClass) {\n  dragEvent.overContainer.appendChild(dragEvent.mirror);\n\n  let overElement;\n\n  if (dragEvent.over) {\n    overElement = dragEvent.over;\n  } else {\n    overElement = dragEvent.overContainer.querySelector(`.${draggableClass}:not(.draggable--original)`);\n  }\n\n  if (overElement) {\n    requestAnimationFrame(() => {\n      const overRect = overElement.getBoundingClientRect();\n\n      dragEvent.mirror.style.width = `${overRect.width}px`;\n      dragEvent.mirror.style.height = `${overRect.height}px`;\n    });\n  }\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Sortable} from '@shopify/draggable';\nimport matchMirrorSize from '../../../scripts/utils/match-mirror-size';\n\nconst Classes = {\n  draggable: 'StackedListItem--isDraggable',\n  capacity: 'draggable-container-parent--capacity',\n};\n\nexport default function MultipleContainers() {\n  const containers = document.querySelectorAll('#MultipleContainers .StackedList');\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const sortable = new Sortable(containers, {\n    draggable: `.${Classes.draggable}`,\n    mirror: {\n      constrainDimensions: true,\n    },\n  });\n\n  const containerTwoCapacity = 3;\n  const containerTwoParent = sortable.containers[1].parentNode;\n  let currentMediumChildren;\n  let capacityReached;\n  let lastOverContainer;\n\n  // --- Draggable events --- //\n  sortable.on('drag:start', (evt) => {\n    currentMediumChildren = sortable.getDraggableElementsForContainer(sortable.containers[1]).length;\n    capacityReached = currentMediumChildren === containerTwoCapacity;\n    lastOverContainer = evt.sourceContainer;\n    containerTwoParent.classList.toggle(Classes.capacity, capacityReached);\n  });\n\n  sortable.on('sortable:sort', (evt) => {\n    if (!capacityReached) {\n      return;\n    }\n\n    const sourceIsCapacityContainer = evt.dragEvent.sourceContainer === sortable.containers[1];\n\n    if (!sourceIsCapacityContainer && evt.dragEvent.overContainer === sortable.containers[1]) {\n      evt.cancel();\n    }\n  });\n\n  sortable.on('sortable:sorted', (evt) => {\n    if (lastOverContainer === evt.dragEvent.overContainer) {\n      return;\n    }\n\n    matchMirrorSize(evt.dragEvent, Classes.draggable);\n    lastOverContainer = evt.dragEvent.overContainer;\n  });\n\n  return sortable;\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Sortable} from '@shopify/draggable';\n\nexport default function Transformed() {\n  const containerSelector = '#Transformed .PaperStack';\n  const containers = document.querySelectorAll(containerSelector);\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const sortable = new Sortable(containers, {\n    draggable: '.PaperStackItem--isDraggable',\n    appendTo: containerSelector,\n    mirror: {\n      constrainDimensions: true,\n    },\n  });\n\n  return sortable;\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Sortable} from '@shopify/draggable';\n\nexport default function SimpleList() {\n  const containerSelector = '#SimpleList .StackedList';\n  const containers = document.querySelectorAll(containerSelector);\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const sortable = new Sortable(containers, {\n    draggable: '.StackedListItem--isDraggable',\n    appendTo: containerSelector,\n    mirror: {\n      constrainDimensions: true,\n    },\n  });\n\n  return sortable;\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Droppable} from '@shopify/draggable';\n\nexport default function UniqueDropzone() {\n  const containers = document.querySelectorAll('#UniqueDropzone .BlockLayout');\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const droppable = new Droppable(containers, {\n    draggable: '.Block--isDraggable',\n    dropzone: '.BlockWrapper--isDropzone',\n    mirror: {\n      constrainDimensions: true,\n    },\n  });\n\n  let droppableOrigin;\n\n  // --- Draggable events --- //\n  droppable.on('drag:start', (evt) => {\n    droppableOrigin = evt.originalSource.parentNode.dataset.dropzone;\n  });\n\n  droppable.on('droppable:dropped', (evt) => {\n    if (droppableOrigin !== evt.dropzone.dataset.dropzone) {\n      evt.cancel();\n    }\n  });\n\n  return droppable;\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Draggable} from '@shopify/draggable';\n\nfunction translateMirror(mirror, mirrorCoords, containerRect) {\n  if (mirrorCoords.top < containerRect.top || mirrorCoords.left < containerRect.left) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    mirror.style.transform = `translate3d(${mirrorCoords.left}px, ${mirrorCoords.top}px, 0)`;\n  });\n}\n\nfunction calcOffset(offset) {\n  return offset * 2 * 0.5;\n}\n\nexport default function DragEvents() {\n  const toggleClass = 'PillSwitch--isOn';\n  const containers = document.querySelectorAll('#DragEvents .PillSwitch');\n\n  if (containers.length === 0) {\n    return false;\n  }\n\n  const draggable = new Draggable(containers, {\n    draggable: '.PillSwitchControl',\n    delay: 0,\n  });\n\n  let isToggled = false;\n  let initialMousePosition;\n  let containerRect;\n  let dragRect;\n  let dragThreshold;\n  let headings;\n  let headingText;\n\n  // --- Draggable events --- //\n  draggable.on('drag:start', (evt) => {\n    initialMousePosition = {\n      x: evt.sensorEvent.clientX,\n      y: evt.sensorEvent.clientY,\n    };\n  });\n\n  draggable.on('mirror:created', (evt) => {\n    containerRect = evt.sourceContainer.getBoundingClientRect();\n    dragRect = evt.originalSource.getBoundingClientRect();\n\n    const containerRectQuarter = containerRect.width / 4;\n    dragThreshold = isToggled ? containerRectQuarter * -1 : containerRectQuarter;\n    headings = {\n      source: evt.originalSource.querySelector('[data-switch-on]'),\n      mirror: evt.mirror.querySelector('[data-switch-on]'),\n    };\n    headingText = {\n      on: headings.source.dataset.switchOn,\n      off: headings.source.dataset.switchOff,\n    };\n  });\n\n  draggable.on('drag:move', (evt) => {\n    // Required to help restrict the draggable element to the container\n    evt.cancel();\n\n    // We do not want to use `getBoundingClientRect` while dragging,\n    // as that would be very expensive.\n    // Instead, we look at the mouse position, which we can ballpark as being\n    // close to the center of the draggable element.\n    // We need to look at both the X and Y offset and determine which is the higher number.\n    // That way we can drag outside of the container and still have the\n    // draggable element move appropriately.\n    const offsetX = calcOffset(evt.sensorEvent.clientX - initialMousePosition.x);\n    const offsetY = calcOffset(initialMousePosition.y - evt.sensorEvent.clientY);\n    const offsetValue = offsetX > offsetY ? offsetX : offsetY;\n    const mirrorCoords = {\n      top: dragRect.top - offsetValue,\n      left: dragRect.left + offsetValue,\n    };\n\n    translateMirror(evt.mirror, mirrorCoords, containerRect);\n\n    if (isToggled && offsetValue < dragThreshold) {\n      evt.sourceContainer.classList.remove(toggleClass);\n      headings.source.textContent = headingText.off;\n      headings.mirror.textContent = headingText.off;\n      isToggled = false;\n    } else if (!isToggled && offsetValue > dragThreshold) {\n      evt.sourceContainer.classList.add(toggleClass);\n      headings.source.textContent = headingText.on;\n      headings.mirror.textContent = headingText.on;\n      isToggled = true;\n    }\n  });\n\n  return draggable;\n}\n","export default function flipSign(number) {\n  if (Math.sign(number) === 1) {\n    return -Math.abs(number);\n  } else if (Math.sign(number) === -1) {\n    return Math.abs(number);\n  } else {\n    return 0;\n  }\n}\n","import flipSign from '../../scripts/utils/flip-sign';\n\nconst scaleFactor = 0.725;\nconst translateFactors = {\n  bottom: 0.075,\n  middle: 0.5,\n  top: 0.975,\n};\nconst Classes = {\n  bottom: 'Plate--levelBottom',\n  middle: 'Plate--levelMiddle',\n  top: 'Plate--levelTop',\n};\n\nfunction calculatePlateScale(value, max, factor) {\n  const step1 = Math.abs(value) / max;\n  const step2 = step1 - step1 * factor;\n\n  return 1 - step2; // step 3\n}\n\nexport default class Plate {\n  constructor(wrapper) {\n    this.wrapper = wrapper;\n    this.plates = {\n      bottom: wrapper.getElementsByClassName(Classes.bottom)[0],\n      middle: wrapper.getElementsByClassName(Classes.middle)[0],\n      top: wrapper.getElementsByClassName(Classes.top)[0],\n    };\n    this.threshold = {\n      min: -27.2,\n      max: 27.2,\n    };\n    this.initialMousePosition = {\n      x: 0,\n      y: 0,\n    };\n  }\n\n  setThreshold() {\n    const newThreshold = this.wrapper.offsetWidth / 10;\n\n    this.threshold = {\n      min: flipSign(newThreshold),\n      max: newThreshold,\n    };\n  }\n\n  setInitialMousePosition(sensorEvent) {\n    this.initialMousePosition.x = sensorEvent.clientX;\n    this.initialMousePosition.y = sensorEvent.clientY;\n  }\n\n  dragWarp(source, sensorEvent) {\n    const adjustedX = this._offsetWithinThreshold(this.initialMousePosition.x, sensorEvent.clientX);\n    const adjustedY = this._offsetWithinThreshold(this.initialMousePosition.y, sensorEvent.clientY);\n\n    this._scalePlates(adjustedX, adjustedY);\n    this._translateShadow(adjustedX, adjustedY);\n    this._translateEachPlate(adjustedX, adjustedY);\n  }\n\n  resetWarp() {\n    this._scalePlates(0, 0);\n    this._translateShadow(0, 0);\n    this._translateEachPlate(0, 0);\n  }\n\n  _offsetWithinThreshold(initialPosition, currentPosition) {\n    const updatedPosition = initialPosition - currentPosition;\n    let offset = updatedPosition;\n\n    if (updatedPosition < this.threshold.min) {\n      offset = this.threshold.min;\n    } else if (updatedPosition > this.threshold.max) {\n      offset = this.threshold.max;\n    }\n\n    return offset;\n  }\n\n  _scalePlates(x, y) {\n    const scaleX = calculatePlateScale(x, this.threshold.max, scaleFactor);\n    const scaleY = calculatePlateScale(y, this.threshold.max, scaleFactor);\n\n    this.wrapper.style.setProperty('--plate-scale-x', `${scaleX}`);\n    this.wrapper.style.setProperty('--plate-scale-y', `${scaleY}`);\n  }\n\n  _translateEachPlate(x, y) {\n    for (const plateLevel in this.plates) {\n      if (this.plates.hasOwnProperty(plateLevel)) {\n        const translateX = flipSign(x * 2) * translateFactors[plateLevel];\n        const translateY = flipSign(y * 2) * translateFactors[plateLevel];\n\n        this.wrapper.style.setProperty(`--${plateLevel}-translate-x`, `${translateX}px`);\n        this.wrapper.style.setProperty(`--${plateLevel}-translate-y`, `${translateY}px`);\n      }\n    }\n  }\n\n  _translateShadow(x, y) {\n    this.wrapper.style.setProperty('--shadow-offset-x', `${x / 2}px`);\n    this.wrapper.style.setProperty('--shadow-offset-y', `${y / 2}px`);\n  }\n}\n","// eslint-disable-next-line import/no-unresolved\nimport {Draggable} from '@shopify/draggable';\nimport Plate from '../../components/Plate';\n\nexport default function Home() {\n  const containerSelector = '#Home .PlateWrapper';\n  const container = document.querySelector(containerSelector);\n\n  if (!container) {\n    return false;\n  }\n\n  const draggable = new Draggable(container, {\n    draggable: '.Plate',\n  });\n  const plates = new Plate(container);\n\n  // --- Draggable events --- //\n  draggable.on('drag:start', (evt) => {\n    plates.setThreshold();\n    plates.setInitialMousePosition(evt.sensorEvent);\n  });\n\n  draggable.on('drag:move', (evt) => {\n    // rAF seems to cause the animation to get stuck?\n    // requestAnimationFrame(() => {});\n    plates.dragWarp(evt.source, evt.sensorEvent);\n  });\n\n  draggable.on('drag:stop', () => {\n    plates.resetWarp();\n  });\n\n  return draggable;\n}\n","// Home page\nimport Home from './Home';\n// Draggable\nimport DragEvents from './Draggable/DragEvents';\n// Droppable\nimport UniqueDropzone from './Droppable/UniqueDropzone';\n// Sortable\nimport SimpleList from './Sortable/SimpleList';\nimport Transformed from './Sortable/Transformed';\nimport MultipleContainers from './Sortable/MultipleContainers';\n// Swappable\nimport Flexbox from './Swappable/Flexbox';\nimport Floated from './Swappable/Floated';\nimport GridLayout from './Swappable/GridLayout';\n// Plugins\nimport PluginsCollidable from './Plugins/Collidable';\nimport PluginsSnappable from './Plugins/Snappable';\nimport PluginsSwapAnimation from './Plugins/SwapAnimation';\n\nconst Content = {\n  Home,\n  DragEvents,\n  UniqueDropzone,\n  SimpleList,\n  Transformed,\n  MultipleContainers,\n  Flexbox,\n  Floated,\n  GridLayout,\n  PluginsCollidable,\n  PluginsSnappable,\n  PluginsSwapAnimation,\n};\n\nexport default Content;\n","export default function debounce(callback, wait) {\n  let timeout = null;\n\n  return function(...args) {\n    const context = this; // eslint-disable-line consistent-this, babel/no-invalid-this\n\n    clearTimeout(timeout);\n    timeout = setTimeout(() => callback.apply(context, args), wait);\n  };\n}\n\nexport const debounceDuration = 60 * 6;\n","import debounce, {debounceDuration} from '../../scripts/utils/debounce';\n\n// equal to `get-breakpoint()` base value\nconst MAX_WIDTH = 960;\n\nconst Attrs = {\n  controls: 'aria-controls',\n  expanded: 'aria-expanded',\n  hidden: 'aria-hidden',\n};\n\nexport default class MobileNav {\n  constructor(activator) {\n    this.activator = activator;\n    this.target = document.getElementById(activator.getAttribute(Attrs.controls));\n  }\n\n  init() {\n    if (!this.target) {\n      console.error('The activator must have a valid `aria-controls` value. Target not found.');\n      return;\n    }\n\n    this._setState();\n    this.activator.addEventListener('click', this.toggle.bind(this));\n\n    window.addEventListener(\n      'resize',\n      debounce(() => {\n        this._setState();\n      }, debounceDuration),\n    );\n  }\n\n  expand(widthExceeded = false) {\n    const lockScrolling = !widthExceeded;\n    const willExpand = widthExceeded ? 'undefined' : 'false';\n\n    this.expanded = true;\n    this.activator.setAttribute(Attrs.expanded, 'true');\n    this.target.setAttribute(Attrs.hidden, willExpand);\n    document.documentElement.dataset.scrollLock = lockScrolling;\n  }\n\n  collapse() {\n    if (this.expanded === false) {\n      return;\n    }\n\n    this.expanded = false;\n    this.activator.setAttribute(Attrs.expanded, 'false');\n    this.target.setAttribute(Attrs.hidden, 'true');\n    document.documentElement.dataset.scrollLock = false;\n  }\n\n  toggle() {\n    return this.expanded ? this.collapse() : this.expand();\n  }\n\n  _setState() {\n    const windowWidth = document.documentElement.clientWidth;\n\n    // currently collapses when resizing within any mobile range...\n    // I should update this to remain `expanded` when resizing within that range\n    return windowWidth < MAX_WIDTH ? this.collapse() : this.expand(true);\n  }\n}\n","function gtag() {\n  window.dataLayer.push(arguments); // eslint-disable-line prefer-rest-params\n}\n\nexport default class Analytics {\n  constructor(ua) {\n    this.ua = ua;\n  }\n\n  init() {\n    if (location.hostname === 'localhost' || location.hostname === '127.0.0.1') {\n      console.log('🤖 Analytics disabled in local development.');\n      return;\n    }\n\n    this._appendScript()\n      .then(() => {\n        window.dataLayer = window.dataLayer || [];\n\n        gtag('js', new Date());\n        gtag('config', this.ua);\n\n        return window.dataLayer;\n      })\n      .catch((error) => console.warn(error));\n  }\n\n  _appendScript() {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      document.body.appendChild(script);\n      script.onload = resolve;\n      script.onerror = reject;\n      script.async = true;\n      script.src = `https://www.googletagmanager.com/gtag/js?id=${this.ua}`;\n    });\n  }\n}\n","import Analytics from '../components/Analytics';\nimport MobileNav from '../components/MobileNav';\nimport Content from '../content';\n\n// Initialize Google Analytics\nconst gtagTracking = new Analytics('UA-107063633-1');\ngtagTracking.init();\n\n// Initialize navigation\nconst mobileNav = new MobileNav(document.getElementById('MobileNavActivator'));\nmobileNav.init();\n\n// Initialize all examples\nfor (const Example in Content) {\n  if (Content.hasOwnProperty(Example)) {\n    Content[Example]();\n  }\n}\n"],"sourceRoot":""}